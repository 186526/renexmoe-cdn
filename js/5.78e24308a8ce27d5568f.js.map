{"version":3,"sources":["webpack:///../node_modules/highlight.js/lib/languages/accesslog.js","webpack:///../node_modules/highlight.js/lib/languages/actionscript.js","webpack:///../node_modules/highlight.js/lib/languages/angelscript.js","webpack:///../node_modules/highlight.js/lib/languages/apache.js","webpack:///../node_modules/highlight.js/lib/languages/arcade.js","webpack:///../node_modules/highlight.js/lib/languages/arduino.js","webpack:///../node_modules/highlight.js/lib/languages/armasm.js","webpack:///../node_modules/highlight.js/lib/languages/asciidoc.js","webpack:///../node_modules/highlight.js/lib/languages/autohotkey.js","webpack:///../node_modules/highlight.js/lib/languages/autoit.js","webpack:///../node_modules/highlight.js/lib/languages/avrasm.js","webpack:///../node_modules/highlight.js/lib/languages/awk.js","webpack:///../node_modules/highlight.js/lib/languages/bash.js"],"names":["source","re","concat","args","map","x","join","either","module","exports","_hljs","HTTP_VERBS","name","contains","className","begin","relevance","end","keywords","illegal","hljs","AS3_REST_ARG_MODE","aliases","keyword","literal","APOS_STRING_MODE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","beginKeywords","TITLE_MODE","excludeEnd","METHOD_GUARD","builtInTypeMode","objectHandleMode","genericMode","BACKSLASH_ESCAPE","IP_ADDRESS","case_insensitive","HASH_COMMENT_MODE","inherit","nomarkup","starts","IDENT_RE","KEYWORDS","built_in","NUMBER","variants","C_NUMBER_RE","SUBST","TEMPLATE_STRING","REGEXP_MODE","PARAMS_CONTAINS","returnBegin","RE_STARTERS_RE","excludeBegin","optional","cPlusPlus","lang","COMMENT","DECLTYPE_AUTO_RE","NAMESPACE_RE","FUNCTION_TYPE_RE","CPP_PRIMITIVE_TYPES","STRINGS","END_SAME_AS_BEGIN","NUMBERS","PREPROCESSOR","FUNCTION_TITLE","CPP_KEYWORDS","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","FUNCTION_DECLARATION","disableAutodetect","preprocessor","strings","cLike","ARDUINO_KW","ARDUINO","kws","supersetOf","$pattern","meta","STRONG","EMPHASIS","subLanguage","BACKTICK_ESCAPE","NUMBER_RE","VARIABLE","STRING","BINARY_NUMBER_MODE","UNDERSCORE_TITLE_MODE","NUMBER_MODE","VAR","BRACED_VAR","Object","assign","HERE_DOC","QUOTE_STRING","push","ARITHMETIC","KNOWN_SHEBANG","SHEBANG","binary","FUNCTION"],"mappings":"2EASA,SAASA,EAAOC,GACd,OAAKA,EACa,iBAAPA,EAAwBA,EAE5BA,EAAGD,OAHM,KAUlB,SAASE,KAAUC,GAEjB,OADeA,EAAKC,KAAKC,GAAML,EAAOK,KAAIC,KAAK,IAWjD,SAASC,KAAUJ,GAEjB,MADe,IAAMA,EAAKC,KAAKC,GAAML,EAAOK,KAAIC,KAAK,KAAO,IA6F9DE,EAAOC,QAhFP,SAAmBC,GAEjB,MAAMC,EAAa,CACjB,MACA,OACA,OACA,MACA,SACA,UACA,UACA,QACA,SAEF,MAAO,CACLC,KAAM,oBACNC,SAAU,CAER,CACEC,UAAW,SACXC,MAAO,mDACPC,UAAW,GAGb,CACEF,UAAW,SACXC,MAAO,UACPC,UAAW,GAGb,CACEF,UAAW,SACXC,MAAOb,EAAO,IAAKK,KAAUI,IAC7BM,IAAK,IACLC,SAAUP,EAAWL,KAAK,KAC1Ba,QAAS,KACTH,UAAW,EACXH,SAAU,CACR,CACEE,MAAO,kBACPC,UAAW,KAKjB,CACEF,UAAW,SAIXC,MAAO,oBACPI,QAAS,KACTH,UAAW,GAEb,CACEF,UAAW,SACXC,MAAO,KACPE,IAAK,KACLE,QAAS,KACTH,UAAW,GAGb,CACEF,UAAW,SACXC,MAAO,sBACPE,IAAK,IACLE,QAAS,KACTH,UAAW,GAGb,CACEF,UAAW,SACXC,MAAO,IACPE,IAAK,IACLE,QAAS,KACTH,UAAW,O,kBCpGnB,SAASd,KAAUC,GAEjB,OADeA,EAAKC,KAAKC,IAAML,OAZjBC,EAYwBI,GAVpB,iBAAPJ,EAAwBA,EAE5BA,EAAGD,OAHM,KADlB,IAAgBC,KAY4BK,KAAK,IA2FjDE,EAAOC,QA/EP,SAAsBW,GACpB,MAGMC,EAAoB,CACxBP,UAAW,WACXC,MAAO,SACPE,IANe,2BAOfD,UAAW,IAGb,MAAO,CACLJ,KAAM,eACNU,QAAS,CAAE,MACXJ,SAAU,CACRK,QAAS,mUAKTC,QAAS,6BAEXX,SAAU,CACRO,EAAKK,iBACLL,EAAKM,kBACLN,EAAKO,oBACLP,EAAKQ,qBACLR,EAAKS,cACL,CACEf,UAAW,QACXgB,cAAe,UACfb,IAAK,KACLJ,SAAU,CAAEO,EAAKW,aAEnB,CACEjB,UAAW,QACXgB,cAAe,kBACfb,IAAK,KACLe,YAAY,EACZnB,SAAU,CACR,CAAEiB,cAAe,sBACjBV,EAAKW,aAGT,CACEjB,UAAW,OACXgB,cAAe,iBACfb,IAAK,IACLC,SAAU,CAAE,eAAgB,mBAE9B,CACEJ,UAAW,WACXgB,cAAe,WACfb,IAAK,OACLe,YAAY,EACZb,QAAS,KACTN,SAAU,CACRO,EAAKW,WACL,CACEjB,UAAW,SACXC,MAAO,KACPE,IAAK,KACLJ,SAAU,CACRO,EAAKK,iBACLL,EAAKM,kBACLN,EAAKO,oBACLP,EAAKQ,qBACLP,IAGJ,CAAEN,MAAOb,EAAO,OApEU,qCAuE9BkB,EAAKa,cAEPd,QAAS,O,kBCcbX,EAAOC,QAlHP,SAAqBW,GACnB,IAAIc,EAAkB,CACpBpB,UAAW,WACXC,MAAO,2HAGLoB,EAAmB,CACrBrB,UAAW,SACXC,MAAO,kBAGLqB,EAAc,CAChBtB,UAAW,UACXC,MAAO,IAAKE,IAAK,IACjBJ,SAAU,CAAEqB,EAAiBC,IAM/B,OAHAD,EAAgBrB,SAAW,CAAEuB,GAC7BD,EAAiBtB,SAAW,CAAEuB,GAEvB,CACLxB,KAAM,cACNU,QAAS,CAAC,OAEVJ,SACE,2SAMFC,QAAS,uDAETN,SAAU,CACR,CACEC,UAAW,SACXC,MAAO,IAAME,IAAK,IAClBE,QAAS,MACTN,SAAU,CAAEO,EAAKiB,kBACjBrB,UAAW,GAIb,CACEF,UAAW,SACXC,MAAO,MAAOE,IAAK,OAGrB,CACEH,UAAW,SACXC,MAAO,IAAKE,IAAK,IACjBE,QAAS,MACTN,SAAU,CAAEO,EAAKiB,kBACjBrB,UAAW,GAGbI,EAAKO,oBACLP,EAAKQ,qBAEL,CACEd,UAAW,SACXC,MAAO,WAAYE,IAAK,OAG1B,CACEa,cAAe,sBAAuBb,IAAK,KAC3CE,QAAS,UACTN,SAAU,CACR,CACEC,UAAW,SACXC,MAAO,mBAKb,CACEe,cAAe,QAASb,IAAK,KAC7BE,QAAS,UACTN,SAAU,CACR,CACEC,UAAW,SACXC,MAAO,gBACPF,SAAU,CACR,CACEE,MAAO,WACPF,SAAU,CACR,CACEC,UAAW,SACXC,MAAO,uBASrBmB,EACAC,EAEA,CACErB,UAAW,UACXC,MAAO,wBAGT,CACED,UAAW,SACXE,UAAW,EACXD,MAAO,0F,kBC5BfP,EAAOC,QA7EP,SAAgBW,GACd,MAQMkB,EAAa,CACjBxB,UAAW,SACXC,MAAO,iDAMT,MAAO,CACLH,KAAM,gBACNU,QAAS,CAAE,cACXiB,kBAAkB,EAClB1B,SAAU,CACRO,EAAKoB,kBACL,CACE1B,UAAW,UACXC,MAAO,OACPE,IAAK,IACLJ,SAAU,CACRyB,EAfY,CAClBxB,UAAW,SACXC,MAAO,YAiBDK,EAAKqB,QAAQrB,EAAKM,kBAAmB,CAAEV,UAAW,MAGtD,CACEF,UAAW,YACXC,MAAO,MACPC,UAAW,EAGXE,SAAU,CACRwB,SACE,8JAIJC,OAAQ,CACN1B,IAAK,IACLD,UAAW,EACXE,SAAU,CAAEM,QAAS,yBACrBX,SAAU,CACR,CACEC,UAAW,OACXC,MAAO,OACPE,IAAK,OAEP,CACEH,UAAW,WACXC,MAAO,UACPE,IAAK,KACLJ,SAAU,CACR,OA7DK,CACjBC,UAAW,SACXC,MAAO,aA+DCuB,EA7DK,CACbxB,UAAW,SACXC,MAAO,OA6DCK,EAAKM,sBAKbP,QAAS,Q,kBCiFbX,EAAOC,QA5JP,SAAgBW,GACd,MAAMwB,EAAW,yBACXC,EAAW,CACftB,QACE,0DACFC,QACE,sHACFsB,SACE,wiCAgBEC,EAAS,CACbjC,UAAW,SACXkC,SAAU,CACR,CACEjC,MAAO,mBAET,CACEA,MAAO,oBAET,CACEA,MAAOK,EAAK6B,cAGhBjC,UAAW,GAEPkC,EAAQ,CACZpC,UAAW,QACXC,MAAO,SACPE,IAAK,MACLC,SAAU2B,EACVhC,SAAU,IAENsC,EAAkB,CACtBrC,UAAW,SACXC,MAAO,IACPE,IAAK,IACLJ,SAAU,CACRO,EAAKiB,iBACLa,IAGJA,EAAMrC,SAAW,CACfO,EAAKK,iBACLL,EAAKM,kBACLyB,EACAJ,EACA3B,EAAKgC,aAEP,MAAMC,EAAkBH,EAAMrC,SAASX,OAAO,CAC5CkB,EAAKQ,qBACLR,EAAKO,sBAGP,MAAO,CACLf,KAAM,gBACNU,QAAS,CAAC,UACVJ,SAAU2B,EACVhC,SAAU,CACRO,EAAKK,iBACLL,EAAKM,kBACLyB,EACA/B,EAAKO,oBACLP,EAAKQ,qBAxDM,CACbd,UAAW,SACXC,MAAO,4GAwDLgC,EACA,CACEhC,MAAO,UACPC,UAAW,EACXH,SAAU,CAAC,CACTE,MAAO6B,EAAW,QAClBU,aAAa,EACbtC,UAAW,EACXH,SAAU,CAAC,CACTC,UAAW,OACXC,MAAO6B,EACP5B,UAAW,OAIjB,CACED,MAAO,IAAMK,EAAKmC,eAAiB,uBACnCrC,SAAU,SACVL,SAAU,CACRO,EAAKO,oBACLP,EAAKQ,qBACLR,EAAKgC,YACL,CACEtC,UAAW,WACXC,MAAO,cAAgB6B,EAAW,UAClCU,aAAa,EACbrC,IAAK,SACLJ,SAAU,CAAC,CACTC,UAAW,SACXkC,SAAU,CACR,CACEjC,MAAO6B,GAET,CACE7B,MAAO,WAET,CACEA,MAAO,KACPE,IAAK,KACLuC,cAAc,EACdxB,YAAY,EACZd,SAAU2B,EACVhC,SAAUwC,QAMpBrC,UAAW,GAEb,CACEF,UAAW,WACXgB,cAAe,WACfb,IAAK,KACLe,YAAY,EACZnB,SAAU,CACRO,EAAKqB,QAAQrB,EAAKW,WAAY,CAC5BhB,MAAO6B,IAET,CACE9B,UAAW,SACXC,MAAO,KACPE,IAAK,KACLuC,cAAc,EACdxB,YAAY,EACZnB,SAAUwC,IAGdlC,QAAS,QAEX,CACEJ,MAAO,WAGXI,QAAS,Y,kBC7Ib,SAASsC,EAASxD,GAChB,OAOF,YAAmBE,GAEjB,OADeA,EAAKC,KAAKC,GApB3B,SAAgBJ,GACd,OAAKA,EACa,iBAAPA,EAAwBA,EAE5BA,EAAGD,OAHM,KAmBeA,CAAOK,KAAIC,KAAK,IARxCJ,CAAO,IAAKD,EAAI,MA+SzB,SAASyD,EAAUtC,GACjB,MAAMuC,EA7RR,SAAevC,GAIb,MAAMO,EAAsBP,EAAKwC,QAAQ,KAAM,IAAK,CAClD/C,SAAU,CACR,CACEE,MAAO,WAIP8C,EAAmB,qBACnBC,EAAe,kBAEfC,EAAmB,uBAEvBN,EAASK,GACT,gBAAkBL,EAJS,YAK7B,IACMO,EAAsB,CAC1BlD,UAAW,UACXC,MAAO,sBAMHkD,EAAU,CACdnD,UAAW,SACXkC,SAAU,CACR,CACEjC,MAAO,cACPE,IAAK,IACLE,QAAS,MACTN,SAAU,CAAEO,EAAKiB,mBAEnB,CACEtB,MAAO,sEACPE,IAAK,IACLE,QAAS,KAEXC,EAAK8C,kBAAkB,CACrBnD,MAAO,mCACPE,IAAK,0BAKLkD,EAAU,CACdrD,UAAW,SACXkC,SAAU,CACR,CACEjC,MAAO,iBAET,CACEA,MAAO,yFAET,CACEA,MAAO,wFAGXC,UAAW,GAGPoD,EAAe,CACnBtD,UAAW,OACXC,MAAO,eACPE,IAAK,IACLC,SAAU,CACR,eACE,0FAGJL,SAAU,CACR,CACEE,MAAO,OACPC,UAAW,GAEbI,EAAKqB,QAAQwB,EAAS,CACpBnD,UAAW,gBAEb,CACEA,UAAW,cACXC,MAAO,QACPE,IAAK,IACLE,QAAS,OAEXQ,EACAP,EAAKQ,uBAIHG,EAAa,CACjBjB,UAAW,QACXC,MAAO0C,EAASK,GAAgB1C,EAAKwB,SACrC5B,UAAW,GAGPqD,EAAiBZ,EAASK,GAAgB1C,EAAKwB,SAAW,UAE1D0B,EAAe,CACnB/C,QAAS,y0BAYTuB,SAAU,+1BASVtB,QAAS,2BAGL+C,EAAsB,CAC1BH,EACAJ,EACArC,EACAP,EAAKQ,qBACLuC,EACAF,GAGIO,EAAqB,CAIzBxB,SAAU,CACR,CACEjC,MAAO,IACPE,IAAK,KAEP,CACEF,MAAO,KACPE,IAAK,MAEP,CACEa,cAAe,wBACfb,IAAK,MAGTC,SAAUoD,EACVzD,SAAU0D,EAAoBrE,OAAO,CACnC,CACEa,MAAO,KACPE,IAAK,KACLC,SAAUoD,EACVzD,SAAU0D,EAAoBrE,OAAO,CAAE,SACvCc,UAAW,KAGfA,UAAW,GAGPyD,EAAuB,CAC3B3D,UAAW,WACXC,MAAO,IAAMgD,EAAmB,eAAiBM,EACjDf,aAAa,EACbrC,IAAK,QACLe,YAAY,EACZd,SAAUoD,EACVnD,QAAS,iBACTN,SAAU,CACR,CACEE,MAAO8C,EACP3C,SAAUoD,EACVtD,UAAW,GAEb,CACED,MAAOsD,EACPf,aAAa,EACbzC,SAAU,CAAEkB,GACZf,UAAW,GAEb,CACEF,UAAW,SACXC,MAAO,KACPE,IAAK,KACLC,SAAUoD,EACVtD,UAAW,EACXH,SAAU,CACRc,EACAP,EAAKQ,qBACLqC,EACAE,EACAH,EAEA,CACEjD,MAAO,KACPE,IAAK,KACLC,SAAUoD,EACVtD,UAAW,EACXH,SAAU,CACR,OACAc,EACAP,EAAKQ,qBACLqC,EACAE,EACAH,MAKRA,EACArC,EACAP,EAAKQ,qBACLwC,IAIJ,MAAO,CACL9C,QAAS,CACP,IACA,KACA,IACA,MACA,MACA,MACA,KACA,MACA,OAEFJ,SAAUoD,EAGVI,mBAAmB,EACnBvD,QAAS,KACTN,SAAU,GAAGX,OACXsE,EACAC,EACAF,EACA,CACEH,EACA,CACErD,MAAO,uKACPE,IAAK,IACLC,SAAUoD,EACVzD,SAAU,CACR,OACAmD,IAGJ,CACEjD,MAAOK,EAAKwB,SAAW,KACvB1B,SAAUoD,GAEZ,CACExD,UAAW,QACXgB,cAAe,0BACfb,IAAK,WACLJ,SAAU,CACR,CACEiB,cAAe,sBAEjBV,EAAKW,eAIbtB,QAAS,CACPkE,aAAcP,EACdQ,QAASX,EACT/C,SAAUoD,IAaDO,CAAMzD,GAKnB,OAHAuC,EAAKe,mBAAoB,EACzBf,EAAK/C,KAAO,MACZ+C,EAAKrC,QAAU,CAAC,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,OACjDqC,EAiHTnD,EAAOC,QAtGP,SAAiBW,GACf,MAAM0D,EAEF,2BAFEA,EAIF,4xGAJEA,EA+EF,qNAOEC,EAAUrB,EAAUtC,GAEpB4D,EAAyCD,EAAgB,SAU/D,OARAC,EAAIzD,SAAW,IAAMuD,EACrBE,EAAIxD,SAAW,IAAMsD,EACrBE,EAAIlC,UAAY,IAAMgC,EAEtBC,EAAQnE,KAAO,UACfmE,EAAQzD,QAAU,CAAC,OACnByD,EAAQE,WAAa,MAEdF,I,kBCtTTvE,EAAOC,QA1HP,SAAgBW,GAGd,MAAMwC,EAAU,CACdZ,SAAU,CACR5B,EAAKwC,QAAQ,gBAAiB,IAAK,CACjC5C,UAAW,EACXwC,cAAc,IAEhBpC,EAAKwC,QAAQ,OAAQ,IAAK,CACxB5C,UAAW,IAEbI,EAAKO,oBACLP,EAAKQ,uBAIT,MAAO,CACLhB,KAAM,eACN2B,kBAAkB,EAClBjB,QAAS,CAAC,OACVJ,SAAU,CACRgE,SAAU,OAAS9D,EAAKwB,SACxBuC,KAEE,6tBAGFrC,SACE,21BAmBJjC,SAAU,CACR,CACEC,UAAW,UACXC,MAAO,8tBAmBT6C,EACAxC,EAAKM,kBACL,CACEZ,UAAW,SACXC,MAAO,IACPE,IAAK,WACLD,UAAW,GAEb,CACEF,UAAW,QACXC,MAAO,MACPE,IAAK,MACLE,QAAS,MACTH,UAAW,GAEb,CACEF,UAAW,SACXkC,SAAU,CACR,CACEjC,MAAO,qBAET,CACEA,MAAO,iBAET,CACEA,MAAO,aAET,CACEA,MAAO,YAGXC,UAAW,GAEb,CACEF,UAAW,SACXkC,SAAU,CACR,CACEjC,MAAO,yCAET,CACEA,MAAO,iCAET,CACEA,MAAO,aAGXC,UAAW,O,kBCxGnB,SAASd,KAAUC,GAEjB,OADeA,EAAKC,KAAKC,IAAML,OAZjBC,EAYwBI,GAVpB,iBAAPJ,EAAwBA,EAE5BA,EAAGD,OAHM,KADlB,IAAgBC,KAY4BK,KAAK,IAyRjDE,EAAOC,QA3QP,SAAkBW,GAChB,MA2BMgE,EAAS,CAEb,CACEtE,UAAW,SACXC,MAAO,uBAGT,CACED,UAAW,SACXC,MAAOb,EACL,OACA,oCACA,+BACA,QAEFc,UAAW,GAGb,CACEF,UAAW,SAEXC,MAAO,gCAGT,CACED,UAAW,SAEXC,MAAO,iCAGLsE,EAAW,CAEf,CACEvE,UAAW,WACXC,MAAO,qBAGT,CACED,UAAW,WACXC,MAAOb,EACL,KACA,kCACA,6BACA,MAEFc,UAAW,GAGb,CACEF,UAAW,WAEXC,MAAO,8BAGT,CACED,UAAW,WAEXC,MAAO,8BAGT,CACED,UAAW,WAEXC,MAAO,iBACPE,IAAK,aAELJ,SAAU,CAAC,CACTE,MAAO,WACPC,UAAW,IAEbA,UAAW,IAaf,MAAO,CACLJ,KAAM,WACNU,QAAS,CAAC,QACVT,SAAU,CAERO,EAAKwC,QACH,YACA,YAIA,CACE5C,UAAW,KAIfI,EAAKwC,QACH,MACA,IACA,CACE5C,UAAW,IAIf,CACEF,UAAW,QACXC,MAAO,cAGT,CACEA,MAAO,iBACPE,IAAK,kBACLD,UAAW,IAGb,CACEF,UAAW,UACXE,UAAW,GACXgC,SAAU,CACR,CACEjC,MAAO,iCAET,CACEA,MAAO,0CAKb,CACED,UAAW,OACXC,MAAO,SACPE,IAAK,MACLe,YAAY,EACZhB,UAAW,IAGb,CACEF,UAAW,OACXC,MAAO,cACPC,UAAW,GAGb,CACEF,UAAW,QACXC,MAAO,YACPE,IAAK,YACLD,UAAW,IAGb,CACEF,UAAW,OACXC,MAAO,mBACPE,IAAK,mBACLD,UAAW,IAGb,CACED,MAAO,cACPE,IAAK,cACLJ,SAAU,CAAC,CACTE,MAAO,IACPE,IAAK,IACLqE,YAAa,MACbtE,UAAW,IAEbA,UAAW,IA1FG,CAClBF,UAAW,SACXC,MAAO,kCAPU,CACjBD,UAAW,SACXC,MAAO,6CACPC,UAAW,IAjGX,CACED,MAAO,WAKT,CACEA,MAAO,yBAET,CACEA,MAAO,sBAET,CACEA,MAAO,sBAIT,CACEA,MAAO,0BAiLJqE,KACAC,EAGH,CACEvE,UAAW,SACXkC,SAAU,CACR,CACEjC,MAAO,WAET,CACEA,MAAO,WAKb,CACED,UAAW,OACXC,MAAO,OACPE,IAAK,gBAGP,CACEH,UAAW,OACXC,MAAO,oBACPC,UAAW,GAGb,CACEF,UAAW,OACXC,MAAO,UACPE,IAAK,IACLD,UAAW,GAzOO,CACtBD,MAAO,iBACPC,UAAW,IA2OT,CACED,MAAO,8DACPuC,aAAa,EACbzC,SAAU,CACR,CACEE,MAAO,kBACPC,UAAW,GAEb,CACEF,UAAW,OACXC,MAAO,MACPE,IAAK,UACLD,UAAW,GAEb,CACEF,UAAW,SACXC,MAAO,MACPE,IAAK,MACLuC,cAAc,EACdxB,YAAY,EACZhB,UAAW,IAGfA,UAAW,Q,kBCrNnBR,EAAOC,QA3EP,SAAoBW,GAClB,MAAMmE,EAAkB,CACtBxE,MAAO,aAGT,MAAO,CACLH,KAAM,aACN2B,kBAAkB,EAClBjB,QAAS,CAAC,OACVJ,SAAU,CACRK,QAAS,uKACTC,QAAS,wBACTsB,SAAU,6CAEZjC,SAAU,CACR0E,EACAnE,EAAKqB,QAAQrB,EAAKM,kBAAmB,CACnCb,SAAU,CAAC0E,KAEbnE,EAAKwC,QAAQ,IAAK,IAAK,CACrB5C,UAAW,IAEbI,EAAKQ,qBACL,CACEd,UAAW,SACXC,MAAOK,EAAKoE,UACZxE,UAAW,GAEb,CAIEF,UAAW,WACXC,MAAO,sBAET,CACED,UAAW,WACXC,MAAO,sBAGT,CAIED,UAAW,QACXkC,SAAU,CACR,CACEjC,MAAO,qBAET,CACEA,MAAO,mBAGPC,UAAW,KAIjB,CACEF,UAAW,OACXC,MAAO,aACPE,IAAK,IACLD,UAAW,GAEb,CACEF,UAAW,WACXC,MAAO,kBAET,CAEEA,MAAO,c,kBCwFfP,EAAOC,QA7JP,SAAgBW,GACd,MAWMwC,EAAU,CACdZ,SAAU,CACR5B,EAAKwC,QAAQ,IAAK,IAAK,CACrB5C,UAAW,IAEbI,EAAKwC,QAAQ,MAAO,OACpBxC,EAAKwC,QAAQ,kBAAmB,mBAI9B6B,EAAW,CACf1E,MAAO,iBAGH2E,EAAS,CACb5E,UAAW,SACXkC,SAAU,CACR,CACEjC,MAAO,IACPE,IAAK,IACLJ,SAAU,CAAC,CACTE,MAAO,KACPC,UAAW,KAGf,CACED,MAAO,IACPE,IAAK,IACLJ,SAAU,CAAC,CACTE,MAAO,KACPC,UAAW,OAMb+B,EAAS,CACbC,SAAU,CACR5B,EAAKuE,mBACLvE,EAAKS,gBAqFT,MAAO,CACLjB,KAAM,SACN2B,kBAAkB,EAClBpB,QAAS,OACTD,SAAU,CACRK,QA5Ia,oPA6IbuB,SApIM,k4JAqINtB,QAxIY,8BA0IdX,SAAU,CACR+C,EACA6B,EACAC,EACA3C,EA9FiB,CACnBjC,UAAW,OACXC,MAAO,IACPE,IAAK,IACLC,SAAU,CACR,eAAgB,8FAElBL,SAAU,CACR,CACEE,MAAO,OACPC,UAAW,GAEb,CACEc,cAAe,UACfZ,SAAU,CACR,eAAgB,WAElBD,IAAK,IACLJ,SAAU,CACR6E,EACA,CACE5E,UAAW,cACXkC,SAAU,CACR,CACEjC,MAAO,IACPE,IAAK,KAEP,CACEF,MAAO,IACPE,IAAK,IACLJ,SAAU,CAAC,CACTE,MAAO,KACPC,UAAW,KAGf,CACED,MAAO,IACPE,IAAK,IACLJ,SAAU,CAAC,CACTE,MAAO,KACPC,UAAW,SAOvB0E,EACA9B,IAIa,CACf9C,UAAW,SAKXC,MAAO,eAGQ,CACfD,UAAW,WACXgB,cAAe,OACfb,IAAK,IACLE,QAAS,YACTN,SAAU,CACRO,EAAKwE,sBACL,CACE9E,UAAW,SACXC,MAAO,MACPE,IAAK,MACLJ,SAAU,CACR4E,EACAC,EACA3C,U,kBC3DVvC,EAAOC,QAvEP,SAAgBW,GACd,MAAO,CACLR,KAAM,eACN2B,kBAAkB,EAClBrB,SAAU,CACRgE,SAAU,OAAS9D,EAAKwB,SACxBrB,QAEE,mgBAOFuB,SAEE,6xBAWFqC,KACE,sHAGJtE,SAAU,CACRO,EAAKQ,qBACLR,EAAKwC,QACH,IACA,IACA,CACE5C,UAAW,IAGfI,EAAKS,cACLT,EAAKuE,mBACL,CACE7E,UAAW,SACXC,MAAO,iCAETK,EAAKM,kBACL,CACEZ,UAAW,SACXC,MAAO,IACPE,IAAK,WACLE,QAAS,eAEX,CACEL,UAAW,SACXC,MAAO,qBAET,CACED,UAAW,OACXC,MAAO,IACPE,IAAK,KAEP,CACEH,UAAW,QACXC,MAAO,e,kBCDfP,EAAOC,QAhEP,SAAaW,GAiDX,MAAO,CACLR,KAAM,MACNM,SAAU,CACRK,QAxCa,+FA0CfV,SAAU,CArDK,CACfC,UAAW,WACXkC,SAAU,CACR,CACEjC,MAAO,sBAET,CACEA,MAAO,iBAKE,CACbD,UAAW,SACXD,SAAU,CAACO,EAAKiB,kBAChBW,SAAU,CACR,CACEjC,MAAO,cACPE,IAAK,MACLD,UAAW,IAEb,CACED,MAAO,cACPE,IAAK,MACLD,UAAW,IAEb,CACED,MAAO,YACPE,IAAK,IACLD,UAAW,IAEb,CACED,MAAO,YACPE,IAAK,IACLD,UAAW,IAEb,CACED,MAAO,UACPE,IAAK,KAEP,CACEF,MAAO,UACPE,IAAK,KAEPG,EAAKK,iBACLL,EAAKM,oBAWLN,EAAKgC,YACLhC,EAAKoB,kBACLpB,EAAKyE,gB,kBC/CX,SAAS3F,KAAUC,GAEjB,OADeA,EAAKC,KAAKC,IAAML,OAZjBC,EAYwBI,GAVpB,iBAAPJ,EAAwBA,EAE5BA,EAAGD,OAHM,KADlB,IAAgBC,KAY4BK,KAAK,IAmJjDE,EAAOC,QAtIP,SAAcW,GACZ,MAAM0E,EAAM,GACNC,EAAa,CACjBhF,MAAO,OACPE,IAAI,KACJJ,SAAU,CACR,OACA,CACEE,MAAO,KACPF,SAAU,CAAEiF,MAIlBE,OAAOC,OAAOH,EAAI,CAChBhF,UAAW,WACXkC,SAAU,CACR,CAACjC,MAAOb,EAAO,qBAGb,wBACF6F,KAIJ,MAAM7C,EAAQ,CACZpC,UAAW,QACXC,MAAO,OAAQE,IAAK,KACpBJ,SAAU,CAACO,EAAKiB,mBAEZ6D,EAAW,CACfnF,MAAO,iBACP4B,OAAQ,CACN9B,SAAU,CACRO,EAAK8C,kBAAkB,CACrBnD,MAAO,QACPE,IAAK,QACLH,UAAW,cAKbqF,EAAe,CACnBrF,UAAW,SACXC,MAAO,IAAKE,IAAK,IACjBJ,SAAU,CACRO,EAAKiB,iBACLyD,EACA5C,IAGJA,EAAMrC,SAASuF,KAAKD,GACpB,MASME,EAAa,CACjBtF,MAAO,SACPE,IAAK,OACLJ,SAAU,CACR,CAAEE,MAAO,gBAAiBD,UAAW,UACrCM,EAAKyE,YACLC,IAcEQ,EAAgBlF,EAAKmF,QAAQ,CACjCC,OAAQ,IAZa,CACrB,OACA,OACA,MACA,KACA,MACA,MACA,OACA,OACA,QAG2BlG,KAAK,QAChCU,UAAW,KAEPyF,EAAW,CACf3F,UAAW,WACXC,MAAO,4BACPuC,aAAa,EACbzC,SAAU,CAACO,EAAKqB,QAAQrB,EAAKW,WAAY,CAAChB,MAAO,gBACjDC,UAAW,GAGb,MAAO,CACLJ,KAAM,OACNU,QAAS,CAAC,KAAM,OAChBJ,SAAU,CACRgE,SAAU,gBACV3D,QACE,+DACFC,QACE,aACFsB,SAGE,6uBAeJjC,SAAU,CACRyF,EACAlF,EAAKmF,UACLE,EACAJ,EACAjF,EAAKoB,kBACL0D,EACAC,EA3EkB,CACpBrF,UAAW,GACXC,MAAO,OAGW,CAClBD,UAAW,SACXC,MAAO,IAAKE,IAAK,KAuEf6E","file":"js/5.78e24308a8ce27d5568f.js","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(_hljs) {\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\n    \"GET\",\n    \"POST\",\n    \"HEAD\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"TRACE\"\n  ];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n        relevance: 5\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: /\\b\\d+\\b/,\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: concat(/\"/, either(...HTTP_VERBS)),\n        end: /\"/,\n        keywords: HTTP_VERBS.join(\" \"),\n        illegal: /\\n/,\n        relevance: 5,\n        contains: [\n          {\n            begin: /HTTP\\/[12]\\.\\d'/,\n            relevance: 5\n          }\n        ]\n      },\n      // Dates\n      {\n        className: 'string',\n        // dates must have a certain length, this prevents matching\n        // simple array accesses a[123] and [] and other common patterns\n        // found in other languages\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n        illegal: /\\n/,\n        relevance: 1\n      },\n      {\n        className: 'string',\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: /\\n/,\n        relevance: 0\n      },\n      // User agent / relevance boost\n      {\n        className: 'string',\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 3\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = accesslog;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: ActionScript\nAuthor: Alexander Myadzel <myadzel@gmail.com>\nCategory: scripting\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction actionscript(hljs) {\n  const IDENT_RE = /[a-zA-Z_$][a-zA-Z0-9_$]*/;\n  const IDENT_FUNC_RETURN_TYPE_RE = /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/;\n\n  const AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: /[.]{3}/,\n    end: IDENT_RE,\n    relevance: 10\n  };\n\n  return {\n    name: 'ActionScript',\n    aliases: [ 'as' ],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n        'else extends final finally for function get if implements import in include ' +\n        'instanceof interface internal is namespace native new override package private ' +\n        'protected public return set static super switch this throw try typeof use var void ' +\n        'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'package',\n        end: /\\{/,\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          { beginKeywords: 'extends implements' },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        beginKeywords: 'import include',\n        end: /;/,\n        keywords: { 'meta-keyword': 'import include' }\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /[{;]/,\n        excludeEnd: true,\n        illegal: /\\S/,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              AS3_REST_ARG_MODE\n            ]\n          },\n          { begin: concat(/:\\s*/, IDENT_FUNC_RETURN_TYPE_RE) }\n        ]\n      },\n      hljs.METHOD_GUARD\n    ],\n    illegal: /#/\n  };\n}\n\nmodule.exports = actionscript;\n","/*\nLanguage: AngelScript\nAuthor: Melissa Geels <melissa@nimble.tools>\nCategory: scripting\nWebsite: https://www.angelcode.com/angelscript/\n*/\n\n/** @type LanguageFn */\nfunction angelscript(hljs) {\n  var builtInTypeMode = {\n    className: 'built_in',\n    begin: '\\\\b(void|bool|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|string|ref|array|double|float|auto|dictionary)'\n  };\n\n  var objectHandleMode = {\n    className: 'symbol',\n    begin: '[a-zA-Z0-9_]+@'\n  };\n\n  var genericMode = {\n    className: 'keyword',\n    begin: '<', end: '>',\n    contains: [ builtInTypeMode, objectHandleMode ]\n  };\n\n  builtInTypeMode.contains = [ genericMode ];\n  objectHandleMode.contains = [ genericMode ];\n\n  return {\n    name: 'AngelScript',\n    aliases: ['asc'],\n\n    keywords:\n      'for in|0 break continue while do|0 return if else case switch namespace is cast ' +\n      'or and xor not get|0 in inout|10 out override set|0 private public const default|0 ' +\n      'final shared external mixin|10 enum typedef funcdef this super import from interface ' +\n      'abstract|0 try catch protected explicit property',\n\n    // avoid close detection with C# and JS\n    illegal: '(^using\\\\s+[A-Za-z0-9_\\\\.]+;$|\\\\bfunction\\\\s*[^\\\\(])',\n\n    contains: [\n      { // 'strings'\n        className: 'string',\n        begin: '\\'', end: '\\'',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        relevance: 0\n      },\n\n      // \"\"\"heredoc strings\"\"\"\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n\n      { // \"strings\"\n        className: 'string',\n        begin: '\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        relevance: 0\n      },\n\n      hljs.C_LINE_COMMENT_MODE, // single-line comments\n      hljs.C_BLOCK_COMMENT_MODE, // comment blocks\n\n      { // metadata\n        className: 'string',\n        begin: '^\\\\s*\\\\[', end: '\\\\]',\n      },\n\n      { // interface or namespace declaration\n        beginKeywords: 'interface namespace', end: /\\{/,\n        illegal: '[;.\\\\-]',\n        contains: [\n          { // interface or namespace name\n            className: 'symbol',\n            begin: '[a-zA-Z0-9_]+'\n          }\n        ]\n      },\n\n      { // class declaration\n        beginKeywords: 'class', end: /\\{/,\n        illegal: '[;.\\\\-]',\n        contains: [\n          { // class name\n            className: 'symbol',\n            begin: '[a-zA-Z0-9_]+',\n            contains: [\n              {\n                begin: '[:,]\\\\s*',\n                contains: [\n                  {\n                    className: 'symbol',\n                    begin: '[a-zA-Z0-9_]+'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n\n      builtInTypeMode, // built-in types\n      objectHandleMode, // object handles\n\n      { // literals\n        className: 'literal',\n        begin: '\\\\b(null|true|false)'\n      },\n\n      { // numbers\n        className: 'number',\n        relevance: 0,\n        begin: '(-?)(\\\\b0[xXbBoOdD][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?f?|\\\\.\\\\d+f?)([eE][-+]?\\\\d+f?)?)'\n      }\n    ]\n  };\n}\n\nmodule.exports = angelscript;\n","/*\nLanguage: Apache config\nAuthor: Ruslan Keba <rukeba@gmail.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://httpd.apache.org\nDescription: language definition for Apache configuration files (httpd.conf & .htaccess)\nCategory: common, config\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction apache(hljs) {\n  const NUMBER_REF = {\n    className: 'number',\n    begin: /[$%]\\d+/\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: /\\d+/\n  };\n  const IP_ADDRESS = {\n    className: \"number\",\n    begin: /\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?/\n  };\n  const PORT_NUMBER = {\n    className: \"number\",\n    begin: /:\\d{1,5}/\n  };\n  return {\n    name: 'Apache config',\n    aliases: [ 'apacheconf' ],\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'section',\n        begin: /<\\/?/,\n        end: />/,\n        contains: [\n          IP_ADDRESS,\n          PORT_NUMBER,\n          // low relevance prevents us from claming XML/HTML where this rule would\n          // match strings inside of XML tags\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 })\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: /\\w+/,\n        relevance: 0,\n        // keywords aren’t needed for highlighting per se, they only boost relevance\n        // for a very generally defined mode (starts with a word, ends with line-end\n        keywords: {\n          nomarkup:\n            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\n            'sethandler errordocument loadmodule options header listen serverroot ' +\n            'servername'\n        },\n        starts: {\n          end: /$/,\n          relevance: 0,\n          keywords: { literal: 'on off all deny allow' },\n          contains: [\n            {\n              className: 'meta',\n              begin: /\\s\\[/,\n              end: /\\]$/\n            },\n            {\n              className: 'variable',\n              begin: /[\\$%]\\{/,\n              end: /\\}/,\n              contains: [\n                'self',\n                NUMBER_REF\n              ]\n            },\n            IP_ADDRESS,\n            NUMBER,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ],\n    illegal: /\\S/\n  };\n}\n\nmodule.exports = apache;\n","/*\n Language: ArcGIS Arcade\n Category: scripting\n Author: John Foster <jfoster@esri.com>\n Website: https://developers.arcgis.com/arcade/\n Description: ArcGIS Arcade is an expression language used in many Esri ArcGIS products such as Pro, Online, Server, Runtime, JavaScript, and Python\n*/\n\n/** @type LanguageFn */\nfunction arcade(hljs) {\n  const IDENT_RE = '[A-Za-z_][0-9A-Za-z_]*';\n  const KEYWORDS = {\n    keyword:\n      'if for while var new function do return void else break',\n    literal:\n      'BackSlash DoubleQuote false ForwardSlash Infinity NaN NewLine null PI SingleQuote Tab TextFormatting true undefined',\n    built_in:\n      'Abs Acos Angle Attachments Area AreaGeodetic Asin Atan Atan2 Average Bearing Boolean Buffer BufferGeodetic ' +\n      'Ceil Centroid Clip Console Constrain Contains Cos Count Crosses Cut Date DateAdd ' +\n      'DateDiff Day Decode DefaultValue Dictionary Difference Disjoint Distance DistanceGeodetic Distinct ' +\n      'DomainCode DomainName Equals Exp Extent Feature FeatureSet FeatureSetByAssociation FeatureSetById FeatureSetByPortalItem ' +\n      'FeatureSetByRelationshipName FeatureSetByTitle FeatureSetByUrl Filter First Floor Geometry GroupBy Guid HasKey Hour IIf IndexOf ' +\n      'Intersection Intersects IsEmpty IsNan IsSelfIntersecting Length LengthGeodetic Log Max Mean Millisecond Min Minute Month ' +\n      'MultiPartToSinglePart Multipoint NextSequenceValue Now Number OrderBy Overlaps Point Polygon ' +\n      'Polyline Portal Pow Random Relate Reverse RingIsClockWise Round Second SetGeometry Sin Sort Sqrt Stdev Sum ' +\n      'SymmetricDifference Tan Text Timestamp Today ToLocal Top Touches ToUTC TrackCurrentTime ' +\n      'TrackGeometryWindow TrackIndex TrackStartTime TrackWindow TypeOf Union UrlEncode Variance ' +\n      'Weekday When Within Year '\n  };\n  const SYMBOL = {\n    className: 'symbol',\n    begin: '\\\\$[datastore|feature|layer|map|measure|sourcefeature|sourcelayer|targetfeature|targetlayer|value|view]+'\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0[bB][01]+)'\n      },\n      {\n        begin: '\\\\b(0[oO][0-7]+)'\n      },\n      {\n        begin: hljs.C_NUMBER_RE\n      }\n    ],\n    relevance: 0\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: [] // defined later\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  const PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    name: 'ArcGIS Arcade',\n    aliases: ['arcade'],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      SYMBOL,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/,\n        relevance: 0,\n        contains: [{\n          begin: IDENT_RE + '\\\\s*:',\n          returnBegin: true,\n          relevance: 0,\n          contains: [{\n            className: 'attr',\n            begin: IDENT_RE,\n            relevance: 0\n          }]\n        }]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(return)\\\\b)\\\\s*',\n        keywords: 'return',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>',\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [{\n              className: 'params',\n              variants: [\n                {\n                  begin: IDENT_RE\n                },\n                {\n                  begin: /\\(\\s*\\)/\n                },\n                {\n                  begin: /\\(/,\n                  end: /\\)/,\n                  excludeBegin: true,\n                  excludeEnd: true,\n                  keywords: KEYWORDS,\n                  contains: PARAMS_CONTAINS\n                }\n              ]\n            }]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: IDENT_RE\n          }),\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n}\n\nmodule.exports = arcade;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: C-like foundation grammar for C/C++ grammars\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Zaven Muradyan <megalivoithos@gmail.com>, Roel Deckers <admin@codingcat.nl>, Sam Wu <samsam2310@gmail.com>, Jordi Petit <jordi.petit@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>, Google Inc. (David Benjamin) <davidben@google.com>\n*/\n\n/** @type LanguageFn */\nfunction cLike(hljs) {\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [\n      {\n        begin: /\\\\\\n/\n      }\n    ]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(' +\n    DECLTYPE_AUTO_RE + '|' +\n    optional(NAMESPACE_RE) +\n    '[a-zA-Z_]\\\\w*' + optional(TEMPLATE_ARGUMENT_RE) +\n  ')';\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'keyword',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0b[01\\']+)'\n      },\n      {\n        begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n      },\n      {\n        begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      'meta-keyword':\n        'if else elif endif define undef warning error line ' +\n        'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, {\n        className: 'meta-string'\n      }),\n      {\n        className: 'meta-string',\n        begin: /<.*?>/,\n        end: /$/,\n        illegal: '\\\\n'\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  const CPP_KEYWORDS = {\n    keyword: 'int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof ' +\n      'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +\n      'unsigned long volatile static protected bool template mutable if public friend ' +\n      'do goto auto void enum else break extern using asm case typeid wchar_t ' +\n      'short reinterpret_cast|10 default double register explicit signed typename try this ' +\n      'switch continue inline delete alignas alignof constexpr consteval constinit decltype ' +\n      'concept co_await co_return co_yield requires ' +\n      'noexcept static_assert thread_local restrict final override ' +\n      'atomic_bool atomic_char atomic_schar ' +\n      'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +\n      'atomic_ullong new throw return ' +\n      'and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq',\n    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +\n      'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set ' +\n      'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos ' +\n      'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +\n      'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +\n      'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +\n      'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +\n      'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +\n      'vfprintf vprintf vsprintf endl initializer_list unique_ptr _Bool complex _Complex imaginary _Imaginary',\n    literal: 'true false nullptr NULL'\n  };\n\n  const EXPRESSION_CONTAINS = [\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    aliases: [\n      'c',\n      'cc',\n      'h',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    // the base c-like language will NEVER be auto-detected, rather the\n    // derivitives: c, c++, arduino turn auto-detect back on for themselves\n    disableAutodetect: true,\n    illegal: '</',\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          className: 'class',\n          beginKeywords: 'enum class struct union',\n          end: /[{;:<>=]/,\n          contains: [\n            {\n              beginKeywords: \"final class struct\"\n            },\n            hljs.TITLE_MODE\n          ]\n        }\n      ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: CPP_KEYWORDS\n    }\n  };\n}\n\n/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  const lang = cLike(hljs);\n  // return auto-detection back on\n  lang.disableAutodetect = false;\n  lang.name = 'C++';\n  lang.aliases = ['cc', 'c++', 'h++', 'hpp', 'hh', 'hxx', 'cxx'];\n  return lang;\n}\n\n/*\nLanguage: Arduino\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\nWebsite: https://www.arduino.cc\n*/\n\n/** @type LanguageFn */\nfunction arduino(hljs) {\n  const ARDUINO_KW = {\n    keyword:\n      'boolean byte word String',\n    built_in:\n      'setup loop ' +\n      'KeyboardController MouseController SoftwareSerial ' +\n      'EthernetServer EthernetClient LiquidCrystal ' +\n      'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' +\n      'HttpClient RobotMotor WiFiClient GSMScanner ' +\n      'FileSystem Scheduler GSMServer YunClient YunServer ' +\n      'IPAddress GSMClient GSMModem Keyboard Ethernet ' +\n      'Console GSMBand Esplora Stepper Process ' +\n      'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' +\n      'Client Server GSMPIN FileIO Bridge Serial ' +\n      'EEPROM Stream Mouse Audio Servo File Task ' +\n      'GPRS WiFi Wire TFT GSM SPI SD ' +\n      'runShellCommandAsynchronously analogWriteResolution ' +\n      'retrieveCallingNumber printFirmwareVersion ' +\n      'analogReadResolution sendDigitalPortPair ' +\n      'noListenOnLocalhost readJoystickButton setFirmwareVersion ' +\n      'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' +\n      'scrollDisplayLeft writeMicroseconds delayMicroseconds ' +\n      'beginTransmission getSignalStrength runAsynchronously ' +\n      'getAsynchronously listenOnLocalhost getCurrentCarrier ' +\n      'readAccelerometer messageAvailable sendDigitalPorts ' +\n      'lineFollowConfig countryNameWrite runShellCommand ' +\n      'readStringUntil rewindDirectory readTemperature ' +\n      'setClockDivider readLightSensor endTransmission ' +\n      'analogReference detachInterrupt countryNameRead ' +\n      'attachInterrupt encryptionType readBytesUntil ' +\n      'robotNameWrite readMicrophone robotNameRead cityNameWrite ' +\n      'userNameWrite readJoystickY readJoystickX mouseReleased ' +\n      'openNextFile scanNetworks noInterrupts digitalWrite ' +\n      'beginSpeaker mousePressed isActionDone mouseDragged ' +\n      'displayLogos noAutoscroll addParameter remoteNumber ' +\n      'getModifiers keyboardRead userNameRead waitContinue ' +\n      'processInput parseCommand printVersion readNetworks ' +\n      'writeMessage blinkVersion cityNameRead readMessage ' +\n      'setDataMode parsePacket isListening setBitOrder ' +\n      'beginPacket isDirectory motorsWrite drawCompass ' +\n      'digitalRead clearScreen serialEvent rightToLeft ' +\n      'setTextSize leftToRight requestFrom keyReleased ' +\n      'compassRead analogWrite interrupts WiFiServer ' +\n      'disconnect playMelody parseFloat autoscroll ' +\n      'getPINUsed setPINUsed setTimeout sendAnalog ' +\n      'readSlider analogRead beginWrite createChar ' +\n      'motorsStop keyPressed tempoWrite readButton ' +\n      'subnetMask debugPrint macAddress writeGreen ' +\n      'randomSeed attachGPRS readString sendString ' +\n      'remotePort releaseAll mouseMoved background ' +\n      'getXChange getYChange answerCall getResult ' +\n      'voiceCall endPacket constrain getSocket writeJSON ' +\n      'getButton available connected findUntil readBytes ' +\n      'exitValue readGreen writeBlue startLoop IPAddress ' +\n      'isPressed sendSysex pauseMode gatewayIP setCursor ' +\n      'getOemKey tuneWrite noDisplay loadImage switchPIN ' +\n      'onRequest onReceive changePIN playFile noBuffer ' +\n      'parseInt overflow checkPIN knobRead beginTFT ' +\n      'bitClear updateIR bitWrite position writeRGB ' +\n      'highByte writeRed setSpeed readBlue noStroke ' +\n      'remoteIP transfer shutdown hangCall beginSMS ' +\n      'endWrite attached maintain noCursor checkReg ' +\n      'checkPUK shiftOut isValid shiftIn pulseIn ' +\n      'connect println localIP pinMode getIMEI ' +\n      'display noBlink process getBand running beginSD ' +\n      'drawBMP lowByte setBand release bitRead prepare ' +\n      'pointTo readRed setMode noFill remove listen ' +\n      'stroke detach attach noTone exists buffer ' +\n      'height bitSet circle config cursor random ' +\n      'IRread setDNS endSMS getKey micros ' +\n      'millis begin print write ready flush width ' +\n      'isPIN blink clear press mkdir rmdir close ' +\n      'point yield image BSSID click delay ' +\n      'read text move peek beep rect line open ' +\n      'seek fill size turn stop home find ' +\n      'step tone sqrt RSSI SSID ' +\n      'end bit tan cos sin pow map abs max ' +\n      'min get run put',\n    literal:\n      'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' +\n      'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' +\n      'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' +\n      'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' +\n      'DEFAULT OUTPUT INPUT HIGH LOW'\n  };\n\n  const ARDUINO = cPlusPlus(hljs);\n\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\n\n  kws.keyword += ' ' + ARDUINO_KW.keyword;\n  kws.literal += ' ' + ARDUINO_KW.literal;\n  kws.built_in += ' ' + ARDUINO_KW.built_in;\n\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = ['ino'];\n  ARDUINO.supersetOf = \"cpp\";\n\n  return ARDUINO;\n}\n\nmodule.exports = arduino;\n","/*\nLanguage: ARM Assembly\nAuthor: Dan Panzarella <alsoelp@gmail.com>\nDescription: ARM Assembly including Thumb and Thumb2 instructions\nCategory: assembler\n*/\n\n/** @type LanguageFn */\nfunction armasm(hljs) {\n  // local labels: %?[FB]?[AT]?\\d{1,2}\\w+\n\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('^[ \\\\t]*(?=#)', '$', {\n        relevance: 0,\n        excludeBegin: true\n      }),\n      hljs.COMMENT('[;@]', '$', {\n        relevance: 0\n      }),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  return {\n    name: 'ARM Assembly',\n    case_insensitive: true,\n    aliases: ['arm'],\n    keywords: {\n      $pattern: '\\\\.?' + hljs.IDENT_RE,\n      meta:\n        // GNU preprocs\n        '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg ' +\n        // ARM directives\n        'ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ',\n      built_in:\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 ' + // standard registers\n        'pc lr sp ip sl sb fp ' + // typical regs plus backward compatibility\n        'a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 ' + // more regs and fp\n        'p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 ' + // coprocessor regs\n        'c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 ' + // more coproc\n        'q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 ' + // advanced SIMD NEON regs\n\n        // program status registers\n        'cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf ' +\n        'spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf ' +\n\n        // NEON and VFP registers\n        's0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 ' +\n        's16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 ' +\n        'd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 ' +\n        'd16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 ' +\n\n        '{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @'\n    },\n    contains: [\n      {\n        className: 'keyword',\n        begin: '\\\\b(' + // mnemonics\n            'adc|' +\n            '(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|' +\n            'and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|' +\n            'bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|' +\n            'setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|' +\n            'ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|' +\n            'mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|' +\n            'mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|' +\n            'mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|' +\n            'rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|' +\n            'stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|' +\n            '[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|' +\n            'wfe|wfi|yield' +\n        ')' +\n        '(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?' + // condition codes\n        '[sptrx]?' + // legal postfixes\n        '(?=\\\\s)' // followed by space\n      },\n      COMMENT,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '[^\\\\\\\\]\\'',\n        relevance: 0\n      },\n      {\n        className: 'title',\n        begin: '\\\\|',\n        end: '\\\\|',\n        illegal: '\\\\n',\n        relevance: 0\n      },\n      {\n        className: 'number',\n        variants: [\n          { // hex\n            begin: '[#$=]?0x[0-9a-f]+'\n          },\n          { // bin\n            begin: '[#$=]?0b[01]+'\n          },\n          { // literal\n            begin: '[#$=]\\\\d+'\n          },\n          { // bare number\n            begin: '\\\\b\\\\d+'\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'symbol',\n        variants: [\n          { // GNU ARM syntax\n            begin: '^[ \\\\t]*[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+:'\n          },\n          { // ARM syntax\n            begin: '^[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+'\n          },\n          { // label reference\n            begin: '[=#]\\\\w+'\n          }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = armasm;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction asciidoc(hljs) {\n  const HORIZONTAL_RULE = {\n    begin: '^\\'{3,}[ \\\\t]*$',\n    relevance: 10\n  };\n  const ESCAPED_FORMATTING = [\n    // escaped constrained formatting marks (i.e., \\* \\_ or \\`)\n    {\n      begin: /\\\\[*_`]/\n    },\n    // escaped unconstrained formatting marks (i.e., \\\\** \\\\__ or \\\\``)\n    // must ignore until the next formatting marks\n    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...\n    {\n      begin: /\\\\\\\\\\*{2}[^\\n]*?\\*{2}/\n    },\n    {\n      begin: /\\\\\\\\_{2}[^\\n]*_{2}/\n    },\n    {\n      begin: /\\\\\\\\`{2}[^\\n]*`{2}/\n    },\n    // guard: constrained formatting mark may not be preceded by \":\", \";\" or\n    // \"}\". match these so the constrained rule doesn't see them\n    {\n      begin: /[:;}][*_`](?![*_`])/\n    }\n  ];\n  const STRONG = [\n    // inline unconstrained strong (single line)\n    {\n      className: 'strong',\n      begin: /\\*{2}([^\\n]+?)\\*{2}/\n    },\n    // inline unconstrained strong (multi-line)\n    {\n      className: 'strong',\n      begin: concat(\n        /\\*\\*/,\n        /((\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])+\\n)+/,\n        /(\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])*/,\n        /\\*\\*/\n      ),\n      relevance: 0\n    },\n    // inline constrained strong (single line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\B\\*(\\S|\\S[^\\n]*?\\S)\\*(?!\\w)/\n    },\n    // inline constrained strong (multi-line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\*[^\\s]([^\\n]+\\n)+([^\\n]+)\\*/\n    }\n  ];\n  const EMPHASIS = [\n    // inline unconstrained emphasis (single line)\n    {\n      className: 'emphasis',\n      begin: /_{2}([^\\n]+?)_{2}/\n    },\n    // inline unconstrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      begin: concat(\n        /__/,\n        /((_(?!_)|\\\\[^\\n]|[^_\\n\\\\])+\\n)+/,\n        /(_(?!_)|\\\\[^\\n]|[^_\\n\\\\])*/,\n        /__/\n      ),\n      relevance: 0\n    },\n    // inline constrained emphasis (single line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /\\b_(\\S|\\S[^\\n]*?\\S)_(?!\\w)/\n    },\n    // inline constrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /_[^\\s]([^\\n]+\\n)+([^\\n]+)_/\n    },\n    // inline constrained emphasis using single quote (legacy)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    }\n  ];\n  const ADMONITION = {\n    className: 'symbol',\n    begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n    relevance: 10\n  };\n  const BULLET_LIST = {\n    className: 'bullet',\n    begin: '^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n  };\n\n  return {\n    name: 'AsciiDoc',\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        // '^/{4,}$',\n        // '^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {\n            begin: '^(={1,6})[ \\t].+?([ \\t]\\\\1)?$'\n          },\n          {\n            begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n          }\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [{\n          begin: '<',\n          end: '>',\n          subLanguage: 'xml',\n          relevance: 0\n        }],\n        relevance: 10\n      },\n\n      BULLET_LIST,\n      ADMONITION,\n      ...ESCAPED_FORMATTING,\n      ...STRONG,\n      ...EMPHASIS,\n\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: \"``.+?''\"\n          },\n          {\n            begin: \"`.+?'\"\n          }\n        ]\n      },\n      // inline unconstrained emphasis\n      {\n        className: 'code',\n        begin: /`{2}/,\n        end: /(\\n{2}|`{2})/\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      HORIZONTAL_RULE,\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n}\n\nmodule.exports = asciidoc;\n","/*\nLanguage: AutoHotkey\nAuthor: Seongwon Lee <dlimpid@gmail.com>\nDescription: AutoHotkey language definition\nCategory: scripting\n*/\n\n/** @type LanguageFn */\nfunction autohotkey(hljs) {\n  const BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]'\n  };\n\n  return {\n    name: 'AutoHotkey',\n    case_insensitive: true,\n    aliases: ['ahk'],\n    keywords: {\n      keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',\n      literal: 'true false NOT AND OR',\n      built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel'\n    },\n    contains: [\n      BACKTICK_ESCAPE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        contains: [BACKTICK_ESCAPE]\n      }),\n      hljs.COMMENT(';', '$', {\n        relevance: 0\n      }),\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        begin: hljs.NUMBER_RE,\n        relevance: 0\n      },\n      {\n        // subst would be the most accurate however fails the point of\n        // highlighting. variable is comparably the most accurate that actually\n        // has some effect\n        className: 'variable',\n        begin: '%[a-zA-Z0-9#_$@]+%'\n      },\n      {\n        className: 'built_in',\n        begin: '^\\\\s*\\\\w+\\\\s*(,|%)'\n        // I don't really know if this is totally relevant\n      },\n      {\n        // symbol would be most accurate however is highlighted just like\n        // built_in and that makes up a lot of AutoHotkey code meaning that it\n        // would fail to highlight anything\n        className: 'title',\n        variants: [\n          {\n            begin: '^[^\\\\n\";]+::(?!=)'\n          },\n          {\n            begin: '^[^\\\\n\";]+:(?!=)',\n            // zero relevance as it catches a lot of things\n            // followed by a single ':' in many languages\n            relevance: 0\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '^\\\\s*#\\\\w+',\n        end: '$',\n        relevance: 0\n      },\n      {\n        className: 'built_in',\n        begin: 'A_[a-zA-Z0-9]+'\n      },\n      {\n        // consecutive commas, not for highlighting but just for relevance\n        begin: ',\\\\s*,'\n      }\n    ]\n  };\n}\n\nmodule.exports = autohotkey;\n","/*\nLanguage: AutoIt\nAuthor: Manh Tuan <junookyo@gmail.com>\nDescription: AutoIt language definition\nCategory: scripting\n*/\n\n/** @type LanguageFn */\nfunction autoit(hljs) {\n  const KEYWORDS = 'ByRef Case Const ContinueCase ContinueLoop ' +\n        'Default Dim Do Else ElseIf EndFunc EndIf EndSelect ' +\n        'EndSwitch EndWith Enum Exit ExitLoop For Func ' +\n        'Global If In Local Next ReDim Return Select Static ' +\n        'Step Switch Then To Until Volatile WEnd While With';\n\n  const LITERAL = 'True False And Null Not Or';\n\n  const BUILT_IN\n          = 'Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin Assign ATan AutoItSetOption AutoItWinGetTitle AutoItWinSetTitle Beep Binary BinaryLen BinaryMid BinaryToString BitAND BitNOT BitOR BitRotate BitShift BitXOR BlockInput Break Call CDTray Ceiling Chr ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ConsoleWriteError ControlClick ControlCommand ControlDisable ControlEnable ControlFocus ControlGetFocus ControlGetHandle ControlGetPos ControlGetText ControlHide ControlListView ControlMove ControlSend ControlSetText ControlShow ControlTreeView Cos Dec DirCopy DirCreate DirGetSize DirMove DirRemove DllCall DllCallAddress DllCallbackFree DllCallbackGetPtr DllCallbackRegister DllClose DllOpen DllStructCreate DllStructGetData DllStructGetPtr DllStructGetSize DllStructSetData DriveGetDrive DriveGetFileSystem DriveGetLabel DriveGetSerial DriveGetType DriveMapAdd DriveMapDel DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp FileChangeDir FileClose FileCopy FileCreateNTFSLink FileCreateShortcut FileDelete FileExists FileFindFirstFile FileFindNextFile FileFlush FileGetAttrib FileGetEncoding FileGetLongName FileGetPos FileGetShortcut FileGetShortName FileGetSize FileGetTime FileGetVersion FileInstall FileMove FileOpen FileOpenDialog FileRead FileReadLine FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog FileSelectFolder FileSetAttrib FileSetEnd FileSetPos FileSetTime FileWrite FileWriteLine Floor FtpSetProxy FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton GUICtrlCreateCheckbox GUICtrlCreateCombo GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel GUICtrlCreateList GUICtrlCreateListView GUICtrlCreateListViewItem GUICtrlCreateMenu GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem GUICtrlCreateTreeView GUICtrlCreateTreeViewItem GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle GUICtrlGetState GUICtrlRead GUICtrlRecvMsg GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon GUISetOnEvent GUISetState GUISetStyle GUIStartGroup GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent HWnd InetClose InetGet InetGetInfo InetGetSize InetRead IniDelete IniRead IniReadSection IniReadSectionNames IniRenameSection IniWrite IniWriteSection InputBox Int IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj IsPtr IsString Log MemGetStats Mod MouseClick MouseClickDrag MouseDown MouseGetCursor MouseGetPos MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ObjCreateInterface ObjEvent ObjGet ObjName OnAutoItExitRegister OnAutoItExitUnRegister Ping PixelChecksum PixelGetColor PixelSearch ProcessClose ProcessExists ProcessGetStats ProcessList ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait RunWait Send SendKeepActive SetError SetExtended ShellExecute ShellExecuteWait Shutdown Sin Sleep SoundPlay SoundSetWaveVolume SplashImageOn SplashOff SplashTextOn Sqrt SRandom StatusbarGetText StderrRead StdinWrite StdioClose StdoutRead String StringAddCR StringCompare StringFormat StringFromASCIIArray StringInStr StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit StringIsFloat StringIsInt StringIsLower StringIsSpace StringIsUpper StringIsXDigit StringLeft StringLen StringLower StringMid StringRegExp StringRegExpReplace StringReplace StringReverse StringRight StringSplit StringStripCR StringStripWS StringToASCIIArray StringToBinary StringTrimLeft StringTrimRight StringUpper Tan TCPAccept TCPCloseSocket TCPConnect TCPListen TCPNameToIP TCPRecv TCPSend TCPShutdown, UDPShutdown TCPStartup, UDPStartup TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu TrayGetMsg TrayItemDelete TrayItemGetHandle TrayItemGetState TrayItemGetText TrayItemSetOnEvent TrayItemSetState TrayItemSetText TraySetClick TraySetIcon TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv UDPSend VarGetType WinActivate WinActive WinClose WinExists WinFlash WinGetCaretPos WinGetClassList WinGetClientSize WinGetHandle WinGetPos WinGetProcess WinGetState WinGetText WinGetTitle WinKill WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans WinWait';\n\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT(';', '$', {\n        relevance: 0\n      }),\n      hljs.COMMENT('#cs', '#ce'),\n      hljs.COMMENT('#comments-start', '#comments-end')\n    ]\n  };\n\n  const VARIABLE = {\n    begin: '\\\\$[A-z0-9_]+'\n  };\n\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /\"/,\n        end: /\"/,\n        contains: [{\n          begin: /\"\"/,\n          relevance: 0\n        }]\n      },\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [{\n          begin: /''/,\n          relevance: 0\n        }]\n      }\n    ]\n  };\n\n  const NUMBER = {\n    variants: [\n      hljs.BINARY_NUMBER_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '#',\n    end: '$',\n    keywords: {\n      'meta-keyword': 'comments include include-once NoTrayIcon OnAutoItStartRegister pragma compile RequireAdmin'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      {\n        beginKeywords: 'include',\n        keywords: {\n          'meta-keyword': 'include'\n        },\n        end: '$',\n        contains: [\n          STRING,\n          {\n            className: 'meta-string',\n            variants: [\n              {\n                begin: '<',\n                end: '>'\n              },\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [{\n                  begin: /\"\"/,\n                  relevance: 0\n                }]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [{\n                  begin: /''/,\n                  relevance: 0\n                }]\n              }\n            ]\n          }\n        ]\n      },\n      STRING,\n      COMMENT\n    ]\n  };\n\n  const CONSTANT = {\n    className: 'symbol',\n    // begin: '@',\n    // end: '$',\n    // keywords: 'AppDataCommonDir AppDataDir AutoItExe AutoItPID AutoItVersion AutoItX64 COM_EventObj CommonFilesDir Compiled ComputerName ComSpec CPUArch CR CRLF DesktopCommonDir DesktopDepth DesktopDir DesktopHeight DesktopRefresh DesktopWidth DocumentsCommonDir error exitCode exitMethod extended FavoritesCommonDir FavoritesDir GUI_CtrlHandle GUI_CtrlId GUI_DragFile GUI_DragId GUI_DropId GUI_WinHandle HomeDrive HomePath HomeShare HotKeyPressed HOUR IPAddress1 IPAddress2 IPAddress3 IPAddress4 KBLayout LF LocalAppDataDir LogonDNSDomain LogonDomain LogonServer MDAY MIN MON MSEC MUILang MyDocumentsDir NumParams OSArch OSBuild OSLang OSServicePack OSType OSVersion ProgramFilesDir ProgramsCommonDir ProgramsDir ScriptDir ScriptFullPath ScriptLineNumber ScriptName SEC StartMenuCommonDir StartMenuDir StartupCommonDir StartupDir SW_DISABLE SW_ENABLE SW_HIDE SW_LOCK SW_MAXIMIZE SW_MINIMIZE SW_RESTORE SW_SHOW SW_SHOWDEFAULT SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWMINNOACTIVE SW_SHOWNA SW_SHOWNOACTIVATE SW_SHOWNORMAL SW_UNLOCK SystemDir TAB TempDir TRAY_ID TrayIconFlashing TrayIconVisible UserName UserProfileDir WDAY WindowsDir WorkingDir YDAY YEAR',\n    // relevance: 5\n    begin: '@[A-z0-9_]+'\n  };\n\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'Func',\n    end: '$',\n    illegal: '\\\\$|\\\\[|%',\n    contains: [\n      hljs.UNDERSCORE_TITLE_MODE,\n      {\n        className: 'params',\n        begin: '\\\\(',\n        end: '\\\\)',\n        contains: [\n          VARIABLE,\n          STRING,\n          NUMBER\n        ]\n      }\n    ]\n  };\n\n  return {\n    name: 'AutoIt',\n    case_insensitive: true,\n    illegal: /\\/\\*/,\n    keywords: {\n      keyword: KEYWORDS,\n      built_in: BUILT_IN,\n      literal: LITERAL\n    },\n    contains: [\n      COMMENT,\n      VARIABLE,\n      STRING,\n      NUMBER,\n      PREPROCESSOR,\n      CONSTANT,\n      FUNCTION\n    ]\n  };\n}\n\nmodule.exports = autoit;\n","/*\nLanguage: AVR Assembly\nAuthor: Vladimir Ermakov <vooon341@gmail.com>\nCategory: assembler\nWebsite: https://www.microchip.com/webdoc/avrassembler/avrassembler.wb_instruction_list.html\n*/\n\n/** @type LanguageFn */\nfunction avrasm(hljs) {\n  return {\n    name: 'AVR Assembly',\n    case_insensitive: true,\n    keywords: {\n      $pattern: '\\\\.?' + hljs.IDENT_RE,\n      keyword:\n        /* mnemonic */\n        'adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs ' +\n        'brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr ' +\n        'clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor ' +\n        'fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul ' +\n        'muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs ' +\n        'sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub ' +\n        'subi swap tst wdr',\n      built_in:\n        /* general purpose registers */\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 ' +\n        'r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ' +\n        /* IO Registers (ATMega128) */\n        'ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h ' +\n        'tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ' +\n        'ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ' +\n        'ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk ' +\n        'tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ' +\n        'ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr ' +\n        'porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ' +\n        'ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf',\n      meta:\n        '.byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list ' +\n        '.listmac .macro .nolist .org .set'\n    },\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT(\n        ';',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      hljs.C_NUMBER_MODE, // 0x..., decimal, float\n      hljs.BINARY_NUMBER_MODE, // 0b...\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\$[a-zA-Z0-9]+|0o[0-7]+)' // $..., 0o...\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '[^\\\\\\\\]\\'',\n        illegal: '[^\\\\\\\\][^\\']'\n      },\n      {\n        className: 'symbol',\n        begin: '^[A-Za-z0-9_.$]+:'\n      },\n      {\n        className: 'meta',\n        begin: '#',\n        end: '$'\n      },\n      { // substitution within a macro\n        className: 'subst',\n        begin: '@[0-9]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = avrasm;\n","/*\nLanguage: Awk\nAuthor: Matthew Daly <matthewbdaly@gmail.com>\nWebsite: https://www.gnu.org/software/gawk/manual/gawk.html\nDescription: language definition for Awk scripts\n*/\n\n/** @type LanguageFn */\nfunction awk(hljs) {\n  const VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$[\\w\\d#@][\\w\\d_]*/\n      },\n      {\n        begin: /\\$\\{(.*?)\\}/\n      }\n    ]\n  };\n  const KEYWORDS = 'BEGIN END if else while do for in break continue delete next nextfile function func exit|10';\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/,\n        end: /'''/,\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/,\n        end: /\"\"\"/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/,\n        end: /'/\n      },\n      {\n        begin: /(b|br)\"/,\n        end: /\"/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  return {\n    name: 'Awk',\n    keywords: {\n      keyword: KEYWORDS\n    },\n    contains: [\n      VARIABLE,\n      STRING,\n      hljs.REGEXP_MODE,\n      hljs.HASH_COMMENT_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = awk;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end:/\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR,{\n    className: 'variable',\n    variants: [\n      {begin: concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: {\n      contains: [\n        hljs.END_SAME_AS_BEGIN({\n          begin: /(\\w+)/,\n          end: /(\\w+)/,\n          className: 'string'\n        })\n      ]\n    }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      { begin: /\\d+#[0-9a-f]+/, className: \"number\" },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n    relevance: 0\n  };\n\n  return {\n    name: 'Bash',\n    aliases: ['sh', 'zsh'],\n    keywords: {\n      $pattern: /\\b[a-z._-]+\\b/,\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp'\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nmodule.exports = bash;\n"],"sourceRoot":""}