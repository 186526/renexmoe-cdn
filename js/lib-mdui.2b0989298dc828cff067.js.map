{"version":3,"sources":["webpack:///./web_modules/mdui.js"],"names":["isFunction","target","isString","isNumber","isBoolean","isUndefined","isNull","isWindow","Window","isDocument","Document","isElement","Element","isArrayLike","length","isObjectLike","toElement","documentElement","toCamelCase","string","replace","_","letter","toUpperCase","toKebabCase","replacer","toLowerCase","getComputedStyleValue","element","name","window","getComputedStyle","getPropertyValue","isBorderBox","getExtraWidth","direction","extra","position","reduce","prev","index","prop","parseFloat","getStyle","valueNumber","getBoundingClientRect","getChildNodesArray","parent","tempParent","document","createElement","innerHTML","slice","call","childNodes","returnFalse","cssNumber","each","callback","i","keys","Object","JQ","constructor","arr","this","item","$","selector","test","readyState","body","addEventListener","html","trim","toCreate","li","tr","td","th","tbody","option","childTag","parentTag","indexOf","match","querySelectorAll","getElementById","Node","fn","prototype","get$","setTimeout","addClass","mdui","contains","container","merge","first","second","value","push","get","undefined","find","foundElements","handlers","mduiElementId","getElementId","key","parse","type","parts","split","ns","sort","join","matcherFor","RegExp","remove","types","func","handlersInElement","removeEvent","handler","id","removeEventListener","proxy","forEach","event","filter","getHandlers","extend","object1","objectN","unshift","object","param","obj","Array","isArray","args","destructure","keyTmp","v","encodeURIComponent","trigger","extraParameters","eventObject","eventParams","bubbles","cancelable","MouseEvent","detail","CustomEvent","_detail","_ns","dispatchEvent","globalOptions","ajaxEvents","ajaxStart","ajaxSuccess","ajaxError","ajaxComplete","isQueryStringData","method","appendQuery","url","query","ajax","options","isCanceled","mergedOptions","defaults","data","processData","async","cache","username","password","headers","xhrFields","statusCode","dataType","contentType","timeout","global","mergeOptions","location","toString","params","result1","result2","ArrayBuffer","Blob","FormData","textStatus","Promise","resolve","reject","Date","now","xhr","XMLHttpRequest","open","setRequestHeader","xhrTimeout","$2","host","onload","clearTimeout","isHttpStatusSuccess","status","responseData","JSON","responseText","err","Error","responseType","response","onerror","statusText","onabort","abort","send","XHR","ajaxSetup","dataNS","setObjectToElement","map","elements","ret","concat","removeData","nameItem","unique","result","val","dir","$elements","nameIndex","node","is","shift","add","className","arguments","getAttribute","cls","classList","setAttribute","$element","reverse","$target","parentNode","newItem","cloneNode","existingItem","nextSibling","insertBefore","isPlainText","off","on","one","_this","origCallback","apply","elementId","useCapture","callFn","e","elem","preventDefault","stopPropagation","proxyFn","_data","eventName","clone","isMatched","matches","msMatchesSelector","$compareWith","compare","removeChild","childLength","child","appendChild","contents","content","extraChilds","$result","set","removeAttribute","style","k","children","__","childNode","eq","closest","matched","parents","rbrace","dataAttr","nodeType","getData","handleExtraWidth","funcIndex","includeMargin","multiply","getExtraWidthValue","documentMode","clientProp","scrollProp","offsetProp","innerProp","doc","Math","max","elementIndex","computedValue","dimension","css","suffix","floatStyle","get$1","getClientRects","top","left","rect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","set$1","currentOffset","currentTopString","currentLeftString","currentTop","currentLeft","currentPosition","resultData","attrs","attributes","empty","$selector","has","$targets","hasClass","funcName","margin","isSet","hide","display","propName","0","1","2","firstElement","outerHTML","selected","checked","last","not","$excludes","offsetParent","parentOffset","offset","$offsetParent","removeAttr","attributeName","names","removeProp","replaceWith","newContent","before","replaceAll","serializeArray","HTMLFormElement","nodeName","disabled","serialize","elementDisplay","show","defaultDisplay","siblings","prevAll","nextAll","toggle","reflow","clientLeft","transition","duration","webkitTransitionDuration","transitionDuration","transitionEnd","that","events","fireCallback","transformOrigin","webkitTransformOrigin","transform","webkitTransform","entries","mutation","apiInit","selectors","$this","showOverlay","zIndex","$overlay","appendTo","level","hideOverlay","force","removeClass","lockScreen","$body","newBodyWidth","width","unlockScreen","throttle","delay","timer","GUID","componentEvent","componentName","instance","parameters","inst","fullEventName","jQuery","guid","s4","floor","random","substring","$document","$window","DEFAULT_OPTIONS","tolerance","initialClass","pinnedClass","unpinnedClass","parseOptions","attr","Function","Headroom","state","isEnable","lastScrollY","rafId","down","up","enable","onScroll","requestAnimationFrame","currentScrollY","toleranceExceeded","abs","unpin","pin","triggerEvent","disable","cancelAnimationFrame","getState","customAttr","DEFAULT_OPTIONS$1","accordion","CollapseAbstract","classPrefix","getNamespace","classItem","classItemOpen","classHeader","classBody","bindEvent","$item","getItems","close","isOpen","getItem","$content","height","scrollHeight","openAll","closeAll","Collapse","customAttr$1","Panel","customAttr$2","Table","$thRow","$tdRows","$thCheckbox","$tdCheckboxs","selectable","selectedRow","init","updateThCheckbox","updateTdCheckbox","updateNumericCol","createCheckboxHTML","tag","updateThCheckboxStatus","checkbox","tdRowsLength","indeterminate","rowSelectedClass","row","$row","$checkbox","prependTo","isCheckedAll","numericClass","isNumericCol","$td","dataName","updateTables","startEvent","moveEvent","endEvent","cancelEvent","unlockEvent","touches","isAllow","register","$ripple","button","touchPosition","TouchEvent","touchStartX","pageX","touchStartY","pageY","innerHeight","innerWidth","center","diameter","pow","translate","wave","$wave","removeTimer","removeRipple","showRipple","hidden","hideRipple","touchMove","defaultData","reInit","domLoadedEvent","inputEvent","input","$input","eventType","inputType","$textfield","validity","valid","inputValue","hasExtraSpace","outerHeight","maxLength","text","updateValueStyle","$slider","$track","_slider_$track","$fill","_slider_$fill","$thumb","_slider_$thumb","_slider_$input","min","_slider_min","_slider_max","isDisabled","_slider_disabled","isDiscrete","_slider_discrete","$thumbText","_slider_$thumbText","percent","append","focus","updateTextFields","rangeSelector","updateSliders","DEFAULT_OPTIONS$2","Fab","$btn","$dial","$dialBtns","btn","transitionDelay","webkitTransitionDelay","customAttr$3","DEFAULT_OPTIONS$3","gutter","Select","size","$selected","$menu","$items","selectedIndex","selectedText","selectedValue","$native","uniqueID","handleUpdate","readjustMenu","windowHeight","elementHeight","$itemFirst","itemHeight","itemMargin","parseInt","menuWidth","menuHeight","elementTop","transformOriginY","menuMarginTop","menuMaxHeight","menuMaxMarginTop","menuTop","itemsData","textContent","after","customAttr$4","DEFAULT_OPTIONS$4","loop","Tab","activeIndex","$tabs","$indicator","hash","tab","setActive","setIndicatorPosition","bindTabEvent","$tab","clickEvent","targetId","substr","$activeTab","activeTabOffset","scrollLeft","next","$oldTabs","$newTabs","oldTabsElement","newTabsElement","customAttr$5","DEFAULT_OPTIONS$5","overlay","swipe","Drawer","isDesktop","swipeSupport","openNavEventHandler","swipeStartX","swiping","maybeSwiping","setPosition","translateX","transformCSS","cleanPosition","webkitTransition","getMaxTranslateX","getTranslateX","currentX","onBodyTouchEnd","touchX","changedTouches","translateRatio","swipingState","touchmove","onBodyTouchMove","touchend","touchcancel","touchY","dXAbs","dYAbs","threshold","onBodyTouchStart","customAttr$6","$drawer","queue","dequeue","DEFAULT_OPTIONS$6","history","modal","closeOnEsc","closeOnCancel","closeOnConfirm","destroyOnClosed","currentInst","queueName","isLockScreen","keyCode","Dialog","cancel","confirm","readjust","$title","$actions","hashchangeEvent","overlayClick","destroy","doOpen","historyBack","back","customAttr$7","dataName$1","$dialog","DEFAULT_BUTTON","bold","onClick","DEFAULT_OPTIONS$7","title","buttons","stackedButtons","cssClass","onOpen","onOpened","onClose","onClosed","dialog","_a","_b","buttonsHTML","HTML","DEFAULT_OPTIONS$8","confirmText","alert","onConfirm","DEFAULT_OPTIONS$9","cancelText","onCancel","DEFAULT_OPTIONS$a","maxlength","defaultValue","confirmOnEnter","prompt","label","DEFAULT_OPTIONS$b","Tooltip","timeoutId","marginLeft","marginTop","targetProps","targetMargin","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","targetOffset","oldOptions","customAttr$8","dataName$2","DEFAULT_OPTIONS$c","message","buttonText","buttonColor","closeOnButtonClick","closeOnOutsideClick","onButtonClick","currentInst$1","queueName$1","Snackbar","buttonColorStyle","buttonColorClass","snackbarHeight","clientHeight","translateY","layerHTML","fillHTML","spinner","$spinner","layer","snackbar","$bottomNav","isThis","updateSpinners","DEFAULT_OPTIONS$d","align","fixed","covered","subMenuTrigger","subMenuDelay","Menu","anchorSelector","menuSelector","$anchor","isCascade","isCovered","bindSubMenuEvent","menuLeft","windowWidth","isFixed","transformOriginX","anchorRect","anchorTop","anchorLeft","anchorHeight","anchorWidth","anchorBottom","anchorRight","anchorOffsetTop","offsetTop","anchorOffsetLeft","offsetLeft","menuHeightTemp","menuWidthTemp","readjustSubmenu","$submenu","submenuTop","submenuLeft","submenuWidth","submenuHeight","itemRect","itemWidth","itemLeft","itemTop","openSubMenu","closeSubMenu","menu","$subSubmenu","toggleSubMenu","$tmpSubmenu","timeoutOpen","$relatedTarget","relatedTarget","tmpClose","tmpOpen","submenu","customAttr$9","dataName$3"],"mappings":"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","file":"js/lib-mdui.2b0989298dc828cff067.js","sourcesContent":["/*!\n * mdui 1.0.1 (https://mdui.org)\n * Copyright 2016-2020 zdhxiong\n * Licensed under MIT\n */\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isUndefined(target) {\n    return typeof target === 'undefined';\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isWindow(target) {\n    return target instanceof Window;\n}\nfunction isDocument(target) {\n    return target instanceof Document;\n}\nfunction isElement(target) {\n    return target instanceof Element;\n}\nfunction isNode(target) {\n    return target instanceof Node;\n}\n/**\n * 是否是 IE 浏览器\n */\nfunction isIE() {\n    // @ts-ignore\n    return !!window.document.documentMode;\n}\nfunction isArrayLike(target) {\n    if (isFunction(target) || isWindow(target)) {\n        return false;\n    }\n    return isNumber(target.length);\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction toElement(target) {\n    return isDocument(target) ? target.documentElement : target;\n}\n/**\n * 把用 - 分隔的字符串转为驼峰（如 box-sizing 转换为 boxSizing）\n * @param string\n */\nfunction toCamelCase(string) {\n    return string\n        .replace(/^-ms-/, 'ms-')\n        .replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n}\n/**\n * 把驼峰法转为用 - 分隔的字符串（如 boxSizing 转换为 box-sizing）\n * @param string\n */\nfunction toKebabCase(string) {\n    return string.replace(/[A-Z]/g, (replacer) => '-' + replacer.toLowerCase());\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n */\nfunction getComputedStyleValue(element, name) {\n    return window.getComputedStyle(element).getPropertyValue(toKebabCase(name));\n}\n/**\n * 检查元素的 box-sizing 是否是 border-box\n * @param element\n */\nfunction isBorderBox(element) {\n    return getComputedStyleValue(element, 'box-sizing') === 'border-box';\n}\n/**\n * 获取元素的 padding, border, margin 宽度（两侧宽度的和，单位为px）\n * @param element\n * @param direction\n * @param extra\n */\nfunction getExtraWidth(element, direction, extra) {\n    const position = direction === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n    return [0, 1].reduce((prev, _, index) => {\n        let prop = extra + position[index];\n        if (extra === 'border') {\n            prop += 'Width';\n        }\n        return prev + parseFloat(getComputedStyleValue(element, prop) || '0');\n    }, 0);\n}\n/**\n * 获取元素的样式值，对 width 和 height 进行过处理\n * @param element\n * @param name\n */\nfunction getStyle(element, name) {\n    // width、height 属性使用 getComputedStyle 得到的值不准确，需要使用 getBoundingClientRect 获取\n    if (name === 'width' || name === 'height') {\n        const valueNumber = element.getBoundingClientRect()[name];\n        if (isBorderBox(element)) {\n            return `${valueNumber}px`;\n        }\n        return `${valueNumber -\n            getExtraWidth(element, name, 'border') -\n            getExtraWidth(element, name, 'padding')}px`;\n    }\n    return getComputedStyleValue(element, name);\n}\n/**\n * 获取子节点组成的数组\n * @param target\n * @param parent\n */\nfunction getChildNodesArray(target, parent) {\n    const tempParent = document.createElement(parent);\n    tempParent.innerHTML = target;\n    return [].slice.call(tempParent.childNodes);\n}\n/**\n * 始终返回 false 的函数\n */\nfunction returnFalse() {\n    return false;\n}\n/**\n * 数值单位的 CSS 属性\n */\nconst cssNumber = [\n    'animationIterationCount',\n    'columnCount',\n    'fillOpacity',\n    'flexGrow',\n    'flexShrink',\n    'fontWeight',\n    'gridArea',\n    'gridColumn',\n    'gridColumnEnd',\n    'gridColumnStart',\n    'gridRow',\n    'gridRowEnd',\n    'gridRowStart',\n    'lineHeight',\n    'opacity',\n    'order',\n    'orphans',\n    'widows',\n    'zIndex',\n    'zoom',\n];\n\nfunction each(target, callback) {\n    if (isArrayLike(target)) {\n        for (let i = 0; i < target.length; i += 1) {\n            if (callback.call(target[i], i, target[i]) === false) {\n                return target;\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(target);\n        for (let i = 0; i < keys.length; i += 1) {\n            if (callback.call(target[keys[i]], keys[i], target[keys[i]]) === false) {\n                return target;\n            }\n        }\n    }\n    return target;\n}\n\n/**\n * 为了使用模块扩充，这里不能使用默认导出\n */\nclass JQ {\n    constructor(arr) {\n        this.length = 0;\n        if (!arr) {\n            return this;\n        }\n        each(arr, (i, item) => {\n            // @ts-ignore\n            this[i] = item;\n        });\n        this.length = arr.length;\n        return this;\n    }\n}\n\nfunction get$() {\n    const $ = function (selector) {\n        if (!selector) {\n            return new JQ();\n        }\n        // JQ\n        if (selector instanceof JQ) {\n            return selector;\n        }\n        // function\n        if (isFunction(selector)) {\n            if (/complete|loaded|interactive/.test(document.readyState) &&\n                document.body) {\n                selector.call(document, $);\n            }\n            else {\n                document.addEventListener('DOMContentLoaded', () => selector.call(document, $), false);\n            }\n            return new JQ([document]);\n        }\n        // String\n        if (isString(selector)) {\n            const html = selector.trim();\n            // 根据 HTML 字符串创建 JQ 对象\n            if (html[0] === '<' && html[html.length - 1] === '>') {\n                let toCreate = 'div';\n                const tags = {\n                    li: 'ul',\n                    tr: 'tbody',\n                    td: 'tr',\n                    th: 'tr',\n                    tbody: 'table',\n                    option: 'select',\n                };\n                each(tags, (childTag, parentTag) => {\n                    if (html.indexOf(`<${childTag}`) === 0) {\n                        toCreate = parentTag;\n                        return false;\n                    }\n                    return;\n                });\n                return new JQ(getChildNodesArray(html, toCreate));\n            }\n            // 根据 CSS 选择器创建 JQ 对象\n            const isIdSelector = selector[0] === '#' && !selector.match(/[ .<>:~]/);\n            if (!isIdSelector) {\n                return new JQ(document.querySelectorAll(selector));\n            }\n            const element = document.getElementById(selector.slice(1));\n            if (element) {\n                return new JQ([element]);\n            }\n            return new JQ();\n        }\n        if (isArrayLike(selector) && !isNode(selector)) {\n            return new JQ(selector);\n        }\n        return new JQ([selector]);\n    };\n    $.fn = JQ.prototype;\n    return $;\n}\nconst $ = get$();\n\n// 避免页面加载完后直接执行css动画\n// https://css-tricks.com/transitions-only-after-page-load/\nsetTimeout(() => $('body').addClass('mdui-loaded'));\nconst mdui = {\n    $: $,\n};\n\n$.fn.each = function (callback) {\n    return each(this, callback);\n};\n\n/**\n * 检查 container 元素内是否包含 contains 元素\n * @param container 父元素\n * @param contains 子元素\n * @example\n```js\ncontains( document, document.body ); // true\ncontains( document.getElementById('test'), document ); // false\ncontains( $('.container').get(0), $('.contains').get(0) ); // false\n```\n */\nfunction contains(container, contains) {\n    return container !== contains && toElement(container).contains(contains);\n}\n\n/**\n * 把第二个数组的元素追加到第一个数组中，并返回合并后的数组\n * @param first 第一个数组\n * @param second 该数组的元素将被追加到第一个数组中\n * @example\n```js\nmerge( [ 0, 1, 2 ], [ 2, 3, 4 ] )\n// [ 0, 1, 2, 2, 3, 4 ]\n```\n */\nfunction merge(first, second) {\n    each(second, (_, value) => {\n        first.push(value);\n    });\n    return first;\n}\n\n$.fn.get = function (index) {\n    return index === undefined\n        ? [].slice.call(this)\n        : this[index >= 0 ? index : index + this.length];\n};\n\n$.fn.find = function (selector) {\n    const foundElements = [];\n    this.each((_, element) => {\n        merge(foundElements, $(element.querySelectorAll(selector)).get());\n    });\n    return new JQ(foundElements);\n};\n\n// 存储事件\nconst handlers = {};\n// 元素ID\nlet mduiElementId = 1;\n/**\n * 为元素赋予一个唯一的ID\n */\nfunction getElementId(element) {\n    const key = '_mduiEventId';\n    // @ts-ignore\n    if (!element[key]) {\n        // @ts-ignore\n        element[key] = ++mduiElementId;\n    }\n    // @ts-ignore\n    return element[key];\n}\n/**\n * 解析事件名中的命名空间\n */\nfunction parse(type) {\n    const parts = type.split('.');\n    return {\n        type: parts[0],\n        ns: parts.slice(1).sort().join(' '),\n    };\n}\n/**\n * 命名空间匹配规则\n */\nfunction matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)');\n}\n/**\n * 获取匹配的事件\n * @param element\n * @param type\n * @param func\n * @param selector\n */\nfunction getHandlers(element, type, func, selector) {\n    const event = parse(type);\n    return (handlers[getElementId(element)] || []).filter((handler) => handler &&\n        (!event.type || handler.type === event.type) &&\n        (!event.ns || matcherFor(event.ns).test(handler.ns)) &&\n        (!func || getElementId(handler.func) === getElementId(func)) &&\n        (!selector || handler.selector === selector));\n}\n/**\n * 添加事件监听\n * @param element\n * @param types\n * @param func\n * @param data\n * @param selector\n */\nfunction add(element, types, func, data, selector) {\n    const elementId = getElementId(element);\n    if (!handlers[elementId]) {\n        handlers[elementId] = [];\n    }\n    // 传入 data.useCapture 来设置 useCapture: true\n    let useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n        useCapture = true;\n    }\n    types.split(' ').forEach((type) => {\n        if (!type) {\n            return;\n        }\n        const event = parse(type);\n        function callFn(e, elem) {\n            // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n            const result = func.apply(elem, \n            // @ts-ignore\n            e._detail === undefined ? [e] : [e].concat(e._detail));\n            if (result === false) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n        function proxyFn(e) {\n            // @ts-ignore\n            if (e._ns && !matcherFor(e._ns).test(event.ns)) {\n                return;\n            }\n            // @ts-ignore\n            e._data = data;\n            if (selector) {\n                // 事件代理\n                $(element)\n                    .find(selector)\n                    .get()\n                    .reverse()\n                    .forEach((elem) => {\n                    if (elem === e.target ||\n                        contains(elem, e.target)) {\n                        callFn(e, elem);\n                    }\n                });\n            }\n            else {\n                // 不使用事件代理\n                callFn(e, element);\n            }\n        }\n        const handler = {\n            type: event.type,\n            ns: event.ns,\n            func,\n            selector,\n            id: handlers[elementId].length,\n            proxy: proxyFn,\n        };\n        handlers[elementId].push(handler);\n        element.addEventListener(handler.type, proxyFn, useCapture);\n    });\n}\n/**\n * 移除事件监听\n * @param element\n * @param types\n * @param func\n * @param selector\n */\nfunction remove(element, types, func, selector) {\n    const handlersInElement = handlers[getElementId(element)] || [];\n    const removeEvent = (handler) => {\n        delete handlersInElement[handler.id];\n        element.removeEventListener(handler.type, handler.proxy, false);\n    };\n    if (!types) {\n        handlersInElement.forEach((handler) => removeEvent(handler));\n    }\n    else {\n        types.split(' ').forEach((type) => {\n            if (type) {\n                getHandlers(element, type, func, selector).forEach((handler) => removeEvent(handler));\n            }\n        });\n    }\n}\n\n$.fn.trigger = function (type, extraParameters) {\n    const event = parse(type);\n    let eventObject;\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n    };\n    const isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(event.type) > -1;\n    if (isMouseEvent) {\n        // Note: MouseEvent 无法传入 detail 参数\n        eventObject = new MouseEvent(event.type, eventParams);\n    }\n    else {\n        eventParams.detail = extraParameters;\n        eventObject = new CustomEvent(event.type, eventParams);\n    }\n    // @ts-ignore\n    eventObject._detail = extraParameters;\n    // @ts-ignore\n    eventObject._ns = event.ns;\n    return this.each(function () {\n        this.dispatchEvent(eventObject);\n    });\n};\n\nfunction extend(target, object1, ...objectN) {\n    objectN.unshift(object1);\n    each(objectN, (_, object) => {\n        each(object, (prop, value) => {\n            if (!isUndefined(value)) {\n                target[prop] = value;\n            }\n        });\n    });\n    return target;\n}\n\n/**\n * 将数组或对象序列化，序列化后的字符串可作为 URL 查询字符串使用\n *\n * 若传入数组，则格式必须和 serializeArray 方法的返回值一样\n * @param obj 对象或数组\n * @example\n```js\nparam({ width: 1680, height: 1050 });\n// width=1680&height=1050\n```\n * @example\n```js\nparam({ foo: { one: 1, two: 2 }})\n// foo[one]=1&foo[two]=2\n```\n * @example\n```js\nparam({ids: [1, 2, 3]})\n// ids[]=1&ids[]=2&ids[]=3\n```\n * @example\n```js\nparam([\n  {\"name\":\"name\",\"value\":\"mdui\"},\n  {\"name\":\"password\",\"value\":\"123456\"}\n])\n// name=mdui&password=123456\n```\n */\nfunction param(obj) {\n    if (!isObjectLike(obj) && !Array.isArray(obj)) {\n        return '';\n    }\n    const args = [];\n    function destructure(key, value) {\n        let keyTmp;\n        if (isObjectLike(value)) {\n            each(value, (i, v) => {\n                if (Array.isArray(value) && !isObjectLike(v)) {\n                    keyTmp = '';\n                }\n                else {\n                    keyTmp = i;\n                }\n                destructure(`${key}[${keyTmp}]`, v);\n            });\n        }\n        else {\n            if (value == null || value === '') {\n                keyTmp = '=';\n            }\n            else {\n                keyTmp = `=${encodeURIComponent(value)}`;\n            }\n            args.push(encodeURIComponent(key) + keyTmp);\n        }\n    }\n    if (Array.isArray(obj)) {\n        each(obj, function () {\n            destructure(this.name, this.value);\n        });\n    }\n    else {\n        each(obj, destructure);\n    }\n    return args.join('&');\n}\n\n// 全局配置参数\nconst globalOptions = {};\n// 全局事件名\nconst ajaxEvents = {\n    ajaxStart: 'start.mdui.ajax',\n    ajaxSuccess: 'success.mdui.ajax',\n    ajaxError: 'error.mdui.ajax',\n    ajaxComplete: 'complete.mdui.ajax',\n};\n\n/**\n * 判断此请求方法是否通过查询字符串提交参数\n * @param method 请求方法，大写\n */\nfunction isQueryStringData(method) {\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\n}\n/**\n * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n * @param url\n * @param query\n */\nfunction appendQuery(url, query) {\n    return `${url}&${query}`.replace(/[&?]{1,2}/, '?');\n}\n/**\n * 合并请求参数，参数优先级：options > globalOptions > defaults\n * @param options\n */\nfunction mergeOptions(options) {\n    // 默认参数\n    const defaults = {\n        url: '',\n        method: 'GET',\n        data: '',\n        processData: true,\n        async: true,\n        cache: true,\n        username: '',\n        password: '',\n        headers: {},\n        xhrFields: {},\n        statusCode: {},\n        dataType: 'text',\n        contentType: 'application/x-www-form-urlencoded',\n        timeout: 0,\n        global: true,\n    };\n    // globalOptions 中的回调函数不合并\n    each(globalOptions, (key, value) => {\n        const callbacks = [\n            'beforeSend',\n            'success',\n            'error',\n            'complete',\n            'statusCode',\n        ];\n        // @ts-ignore\n        if (callbacks.indexOf(key) < 0 && !isUndefined(value)) {\n            defaults[key] = value;\n        }\n    });\n    return extend({}, defaults, options);\n}\n/**\n * 发送 ajax 请求\n * @param options\n * @example\n```js\najax({\n  method: \"POST\",\n  url: \"some.php\",\n  data: { name: \"John\", location: \"Boston\" }\n}).then(function( msg ) {\n  alert( \"Data Saved: \" + msg );\n});\n```\n */\nfunction ajax(options) {\n    // 是否已取消请求\n    let isCanceled = false;\n    // 事件参数\n    const eventParams = {};\n    // 参数合并\n    const mergedOptions = mergeOptions(options);\n    let url = mergedOptions.url || window.location.toString();\n    const method = mergedOptions.method.toUpperCase();\n    let data = mergedOptions.data;\n    const processData = mergedOptions.processData;\n    const async = mergedOptions.async;\n    const cache = mergedOptions.cache;\n    const username = mergedOptions.username;\n    const password = mergedOptions.password;\n    const headers = mergedOptions.headers;\n    const xhrFields = mergedOptions.xhrFields;\n    const statusCode = mergedOptions.statusCode;\n    const dataType = mergedOptions.dataType;\n    const contentType = mergedOptions.contentType;\n    const timeout = mergedOptions.timeout;\n    const global = mergedOptions.global;\n    // 需要发送的数据\n    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n    if (data &&\n        (isQueryStringData(method) || processData) &&\n        !isString(data) &&\n        !(data instanceof ArrayBuffer) &&\n        !(data instanceof Blob) &&\n        !(data instanceof Document) &&\n        !(data instanceof FormData)) {\n        data = param(data);\n    }\n    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n    if (data && isQueryStringData(method)) {\n        // 查询字符串拼接到 URL 中\n        url = appendQuery(url, data);\n        data = null;\n    }\n    /**\n     * 触发事件和回调函数\n     * @param event\n     * @param params\n     * @param callback\n     * @param args\n     */\n    function trigger(event, params, callback, ...args) {\n        // 触发全局事件\n        if (global) {\n            $(document).trigger(event, params);\n        }\n        // 触发 ajax 回调和事件\n        let result1;\n        let result2;\n        if (callback) {\n            // 全局回调\n            if (callback in globalOptions) {\n                // @ts-ignore\n                result1 = globalOptions[callback](...args);\n            }\n            // 自定义回调\n            if (mergedOptions[callback]) {\n                // @ts-ignore\n                result2 = mergedOptions[callback](...args);\n            }\n            // beforeSend 回调返回 false 时取消 ajax 请求\n            if (callback === 'beforeSend' &&\n                (result1 === false || result2 === false)) {\n                isCanceled = true;\n            }\n        }\n    }\n    // XMLHttpRequest 请求\n    function XHR() {\n        let textStatus;\n        return new Promise((resolve, reject) => {\n            // GET/HEAD 请求的缓存处理\n            if (isQueryStringData(method) && !cache) {\n                url = appendQuery(url, `_=${Date.now()}`);\n            }\n            // 创建 XHR\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, async, username, password);\n            if (contentType ||\n                (data && !isQueryStringData(method) && contentType !== false)) {\n                xhr.setRequestHeader('Content-Type', contentType);\n            }\n            // 设置 Accept\n            if (dataType === 'json') {\n                xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n            }\n            // 添加 headers\n            if (headers) {\n                each(headers, (key, value) => {\n                    // undefined 值不发送，string 和 null 需要发送\n                    if (!isUndefined(value)) {\n                        xhr.setRequestHeader(key, value + ''); // 把 null 转换成字符串\n                    }\n                });\n            }\n            // 检查是否是跨域请求，跨域请求时不添加 X-Requested-With\n            const crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(url) &&\n                RegExp.$2 !== window.location.host;\n            if (!crossDomain) {\n                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n            }\n            if (xhrFields) {\n                each(xhrFields, (key, value) => {\n                    // @ts-ignore\n                    xhr[key] = value;\n                });\n            }\n            eventParams.xhr = xhr;\n            eventParams.options = mergedOptions;\n            let xhrTimeout;\n            xhr.onload = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                // AJAX 返回的 HTTP 响应码是否表示成功\n                const isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) ||\n                    xhr.status === 304 ||\n                    xhr.status === 0;\n                let responseData;\n                if (isHttpStatusSuccess) {\n                    if (xhr.status === 204 || method === 'HEAD') {\n                        textStatus = 'nocontent';\n                    }\n                    else if (xhr.status === 304) {\n                        textStatus = 'notmodified';\n                    }\n                    else {\n                        textStatus = 'success';\n                    }\n                    if (dataType === 'json') {\n                        try {\n                            responseData =\n                                method === 'HEAD' ? undefined : JSON.parse(xhr.responseText);\n                            eventParams.data = responseData;\n                        }\n                        catch (err) {\n                            textStatus = 'parsererror';\n                            trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                            reject(new Error(textStatus));\n                        }\n                        if (textStatus !== 'parsererror') {\n                            trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                            resolve(responseData);\n                        }\n                    }\n                    else {\n                        responseData =\n                            method === 'HEAD'\n                                ? undefined\n                                : xhr.responseType === 'text' || xhr.responseType === ''\n                                    ? xhr.responseText\n                                    : xhr.response;\n                        eventParams.data = responseData;\n                        trigger(ajaxEvents.ajaxSuccess, eventParams, 'success', responseData, textStatus, xhr);\n                        resolve(responseData);\n                    }\n                }\n                else {\n                    textStatus = 'error';\n                    trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, textStatus);\n                    reject(new Error(textStatus));\n                }\n                // statusCode\n                each([globalOptions.statusCode, statusCode], (_, func) => {\n                    if (func && func[xhr.status]) {\n                        if (isHttpStatusSuccess) {\n                            func[xhr.status](responseData, textStatus, xhr);\n                        }\n                        else {\n                            func[xhr.status](xhr, textStatus);\n                        }\n                    }\n                });\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, textStatus);\n            };\n            xhr.onerror = function () {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, xhr.statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, 'error');\n                reject(new Error(xhr.statusText));\n            };\n            xhr.onabort = function () {\n                let statusText = 'abort';\n                if (xhrTimeout) {\n                    statusText = 'timeout';\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxEvents.ajaxError, eventParams, 'error', xhr, statusText);\n                trigger(ajaxEvents.ajaxComplete, eventParams, 'complete', xhr, statusText);\n                reject(new Error(statusText));\n            };\n            // ajax start 回调\n            trigger(ajaxEvents.ajaxStart, eventParams, 'beforeSend', xhr);\n            if (isCanceled) {\n                reject(new Error('cancel'));\n                return;\n            }\n            // Timeout\n            if (timeout > 0) {\n                xhrTimeout = setTimeout(() => {\n                    xhr.abort();\n                }, timeout);\n            }\n            // 发送 XHR\n            xhr.send(data);\n        });\n    }\n    return XHR();\n}\n\n$.ajax = ajax;\n\n/**\n * 为 Ajax 请求设置全局配置参数\n * @param options 键值对参数\n * @example\n```js\najaxSetup({\n  dataType: 'json',\n  method: 'POST',\n});\n```\n */\nfunction ajaxSetup(options) {\n    return extend(globalOptions, options);\n}\n\n$.ajaxSetup = ajaxSetup;\n\n$.contains = contains;\n\nconst dataNS = '_mduiElementDataStorage';\n\n/**\n * 在元素上设置键值对数据\n * @param element\n * @param object\n */\nfunction setObjectToElement(element, object) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        // @ts-ignore\n        element[dataNS] = {};\n    }\n    each(object, (key, value) => {\n        // @ts-ignore\n        element[dataNS][toCamelCase(key)] = value;\n    });\n}\nfunction data(element, key, value) {\n    // 根据键值对设置值\n    // data(element, { 'key' : 'value' })\n    if (isObjectLike(key)) {\n        setObjectToElement(element, key);\n        return key;\n    }\n    // 根据 key、value 设置值\n    // data(element, 'key', 'value')\n    if (!isUndefined(value)) {\n        setObjectToElement(element, { [key]: value });\n        return value;\n    }\n    // 获取所有值\n    // data(element)\n    if (isUndefined(key)) {\n        // @ts-ignore\n        return element[dataNS] ? element[dataNS] : {};\n    }\n    // 从 dataNS 中获取指定值\n    // data(element, 'key')\n    key = toCamelCase(key);\n    // @ts-ignore\n    if (element[dataNS] && key in element[dataNS]) {\n        // @ts-ignore\n        return element[dataNS][key];\n    }\n    return undefined;\n}\n\n$.data = data;\n\n$.each = each;\n\n$.extend = function (...objectN) {\n    if (objectN.length === 1) {\n        each(objectN[0], (prop, value) => {\n            this[prop] = value;\n        });\n        return this;\n    }\n    return extend(objectN.shift(), objectN.shift(), ...objectN);\n};\n\nfunction map(elements, callback) {\n    let value;\n    const ret = [];\n    each(elements, (i, element) => {\n        value = callback.call(window, element, i);\n        if (value != null) {\n            ret.push(value);\n        }\n    });\n    return [].concat(...ret);\n}\n\n$.map = map;\n\n$.merge = merge;\n\n$.param = param;\n\n/**\n * 移除指定元素上存放的数据\n * @param element 存放数据的元素\n * @param name\n * 数据键名\n *\n * 若未指定键名，将移除元素上所有数据\n *\n * 多个键名可以用空格分隔，或者用数组表示多个键名\n  @example\n```js\n// 移除元素上键名为 name 的数据\nremoveData(document.body, 'name');\n```\n * @example\n```js\n// 移除元素上键名为 name1 和 name2 的数据\nremoveData(document.body, 'name1 name2');\n```\n * @example\n```js\n// 移除元素上键名为 name1 和 name2 的数据\nremoveData(document.body, ['name1', 'name2']);\n```\n * @example\n```js\n// 移除元素上所有数据\nremoveData(document.body);\n```\n */\nfunction removeData(element, name) {\n    // @ts-ignore\n    if (!element[dataNS]) {\n        return;\n    }\n    const remove = (nameItem) => {\n        nameItem = toCamelCase(nameItem);\n        // @ts-ignore\n        if (element[dataNS][nameItem]) {\n            // @ts-ignore\n            element[dataNS][nameItem] = null;\n            // @ts-ignore\n            delete element[dataNS][nameItem];\n        }\n    };\n    if (isUndefined(name)) {\n        // @ts-ignore\n        element[dataNS] = null;\n        // @ts-ignore\n        delete element[dataNS];\n        // @ts-ignore\n    }\n    else if (isString(name)) {\n        name\n            .split(' ')\n            .filter((nameItem) => nameItem)\n            .forEach((nameItem) => remove(nameItem));\n    }\n    else {\n        each(name, (_, nameItem) => remove(nameItem));\n    }\n}\n\n$.removeData = removeData;\n\n/**\n * 过滤掉数组中的重复元素\n * @param arr 数组\n * @example\n```js\nunique([1, 2, 12, 3, 2, 1, 2, 1, 1]);\n// [1, 2, 12, 3]\n```\n */\nfunction unique(arr) {\n    const result = [];\n    each(arr, (_, val) => {\n        if (result.indexOf(val) === -1) {\n            result.push(val);\n        }\n    });\n    return result;\n}\n\n$.unique = unique;\n\n$.fn.add = function (selector) {\n    return new JQ(unique(merge(this.get(), $(selector).get())));\n};\n\neach(['add', 'remove', 'toggle'], (_, name) => {\n    $.fn[`${name}Class`] = function (className) {\n        if (name === 'remove' && !arguments.length) {\n            return this.each((_, element) => {\n                element.setAttribute('class', '');\n            });\n        }\n        return this.each((i, element) => {\n            if (!isElement(element)) {\n                return;\n            }\n            const classes = (isFunction(className)\n                ? className.call(element, i, element.getAttribute('class') || '')\n                : className)\n                .split(' ')\n                .filter((name) => name);\n            each(classes, (_, cls) => {\n                element.classList[name](cls);\n            });\n        });\n    };\n});\n\neach(['insertBefore', 'insertAfter'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const $element = nameIndex ? $(this.get().reverse()) : this; // 顺序和 jQuery 保持一致\n        const $target = $(target);\n        const result = [];\n        $target.each((index, target) => {\n            if (!target.parentNode) {\n                return;\n            }\n            $element.each((_, element) => {\n                const newItem = index\n                    ? element.cloneNode(true)\n                    : element;\n                const existingItem = nameIndex ? target.nextSibling : target;\n                result.push(newItem);\n                target.parentNode.insertBefore(newItem, existingItem);\n            });\n        });\n        return $(nameIndex ? result.reverse() : result);\n    };\n});\n\n/**\n * 是否不是 HTML 字符串（包裹在 <> 中）\n * @param target\n */\nfunction isPlainText(target) {\n    return (isString(target) && (target[0] !== '<' || target[target.length - 1] !== '>'));\n}\neach(['before', 'after'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        // after 方法，多个参数需要按参数顺序添加到元素后面，所以需要将参数顺序反向处理\n        if (nameIndex === 1) {\n            args = args.reverse();\n        }\n        return this.each((index, element) => {\n            const targets = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            each(targets, (_, target) => {\n                let $target;\n                if (isPlainText(target)) {\n                    $target = $(getChildNodesArray(target, 'div'));\n                }\n                else if (index && isElement(target)) {\n                    $target = $(target.cloneNode(true));\n                }\n                else {\n                    $target = $(target);\n                }\n                $target[nameIndex ? 'insertAfter' : 'insertBefore'](element);\n            });\n        });\n    };\n});\n\n$.fn.off = function (types, selector, callback) {\n    // types 是对象\n    if (isObjectLike(types)) {\n        each(types, (type, fn) => {\n            // this.off('click', undefined, function () {})\n            // this.off('click', '.box', function () {})\n            this.off(type, selector, fn);\n        });\n        return this;\n    }\n    // selector 不存在\n    if (selector === false || isFunction(selector)) {\n        callback = selector;\n        selector = undefined;\n        // this.off('click', undefined, function () {})\n    }\n    // callback 传入 `false`，相当于 `return false`\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    return this.each(function () {\n        remove(this, types, callback, selector);\n    });\n};\n\n$.fn.on = function (types, selector, data, callback, one) {\n    // types 可以是 type/func 对象\n    if (isObjectLike(types)) {\n        // (types-Object, selector, data)\n        if (!isString(selector)) {\n            // (types-Object, data)\n            data = data || selector;\n            selector = undefined;\n        }\n        each(types, (type, fn) => {\n            // selector 和 data 都可能是 undefined\n            // @ts-ignore\n            this.on(type, selector, data, fn, one);\n        });\n        return this;\n    }\n    if (data == null && callback == null) {\n        // (types, fn)\n        callback = selector;\n        data = selector = undefined;\n    }\n    else if (callback == null) {\n        if (isString(selector)) {\n            // (types, selector, fn)\n            callback = data;\n            data = undefined;\n        }\n        else {\n            // (types, data, fn)\n            callback = data;\n            data = selector;\n            selector = undefined;\n        }\n    }\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    else if (!callback) {\n        return this;\n    }\n    // $().one()\n    if (one) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const _this = this;\n        const origCallback = callback;\n        callback = function (event) {\n            _this.off(event.type, selector, callback);\n            // eslint-disable-next-line prefer-rest-params\n            return origCallback.apply(this, arguments);\n        };\n    }\n    return this.each(function () {\n        add(this, types, callback, data, selector);\n    });\n};\n\neach(ajaxEvents, (name, eventName) => {\n    $.fn[name] = function (fn) {\n        return this.on(eventName, (e, params) => {\n            fn(e, params.xhr, params.options, params.data);\n        });\n    };\n});\n\n$.fn.map = function (callback) {\n    return new JQ(map(this, (element, i) => callback.call(element, i, element)));\n};\n\n$.fn.clone = function () {\n    return this.map(function () {\n        return this.cloneNode(true);\n    });\n};\n\n$.fn.is = function (selector) {\n    let isMatched = false;\n    if (isFunction(selector)) {\n        this.each((index, element) => {\n            if (selector.call(element, index, element)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    if (isString(selector)) {\n        this.each((_, element) => {\n            if (isDocument(element) || isWindow(element)) {\n                return;\n            }\n            // @ts-ignore\n            const matches = element.matches || element.msMatchesSelector;\n            if (matches.call(element, selector)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    const $compareWith = $(selector);\n    this.each((_, element) => {\n        $compareWith.each((_, compare) => {\n            if (element === compare) {\n                isMatched = true;\n            }\n        });\n    });\n    return isMatched;\n};\n\n$.fn.remove = function (selector) {\n    return this.each((_, element) => {\n        if (element.parentNode && (!selector || $(element).is(selector))) {\n            element.parentNode.removeChild(element);\n        }\n    });\n};\n\neach(['prepend', 'append'], (nameIndex, name) => {\n    $.fn[name] = function (...args) {\n        return this.each((index, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            const child = childLength\n                ? childNodes[nameIndex ? childLength - 1 : 0]\n                : document.createElement('div');\n            if (!childLength) {\n                element.appendChild(child);\n            }\n            let contents = isFunction(args[0])\n                ? [args[0].call(element, index, element.innerHTML)]\n                : args;\n            // 如果不是字符串，则仅第一个元素使用原始元素，其他的都克隆自第一个元素\n            if (index) {\n                contents = contents.map((content) => {\n                    return isString(content) ? content : $(content).clone();\n                });\n            }\n            $(child)[nameIndex ? 'after' : 'before'](...contents);\n            if (!childLength) {\n                element.removeChild(child);\n            }\n        });\n    };\n});\n\neach(['appendTo', 'prependTo'], (nameIndex, name) => {\n    $.fn[name] = function (target) {\n        const extraChilds = [];\n        const $target = $(target).map((_, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            if (childLength) {\n                return childNodes[nameIndex ? 0 : childLength - 1];\n            }\n            const child = document.createElement('div');\n            element.appendChild(child);\n            extraChilds.push(child);\n            return child;\n        });\n        const $result = this[nameIndex ? 'insertBefore' : 'insertAfter']($target);\n        $(extraChilds).remove();\n        return $result;\n    };\n});\n\neach(['attr', 'prop', 'css'], (nameIndex, name) => {\n    function set(element, key, value) {\n        // 值为 undefined 时，不修改\n        if (isUndefined(value)) {\n            return;\n        }\n        switch (nameIndex) {\n            // attr\n            case 0:\n                if (isNull(value)) {\n                    element.removeAttribute(key);\n                }\n                else {\n                    element.setAttribute(key, value);\n                }\n                break;\n            // prop\n            case 1:\n                // @ts-ignore\n                element[key] = value;\n                break;\n            // css\n            default:\n                key = toCamelCase(key);\n                // @ts-ignore\n                element.style[key] = isNumber(value)\n                    ? `${value}${cssNumber.indexOf(key) > -1 ? '' : 'px'}`\n                    : value;\n                break;\n        }\n    }\n    function get(element, key) {\n        switch (nameIndex) {\n            // attr\n            case 0:\n                // 属性不存在时，原生 getAttribute 方法返回 null，而 jquery 返回 undefined。这里和 jquery 保持一致\n                const value = element.getAttribute(key);\n                return isNull(value) ? undefined : value;\n            // prop\n            case 1:\n                // @ts-ignore\n                return element[key];\n            // css\n            default:\n                return getStyle(element, key);\n        }\n    }\n    $.fn[name] = function (key, value) {\n        if (isObjectLike(key)) {\n            each(key, (k, v) => {\n                // @ts-ignore\n                this[name](k, v);\n            });\n            return this;\n        }\n        if (arguments.length === 1) {\n            const element = this[0];\n            return isElement(element) ? get(element, key) : undefined;\n        }\n        return this.each((i, element) => {\n            set(element, key, isFunction(value) ? value.call(element, i, get(element, key)) : value);\n        });\n    };\n});\n\n$.fn.children = function (selector) {\n    const children = [];\n    this.each((_, element) => {\n        each(element.childNodes, (__, childNode) => {\n            if (!isElement(childNode)) {\n                return;\n            }\n            if (!selector || $(childNode).is(selector)) {\n                children.push(childNode);\n            }\n        });\n    });\n    return new JQ(unique(children));\n};\n\n$.fn.slice = function (...args) {\n    return new JQ([].slice.apply(this, args));\n};\n\n$.fn.eq = function (index) {\n    const ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n    return new JQ(ret);\n};\n\nfunction dir($elements, nameIndex, node, selector, filter) {\n    const ret = [];\n    let target;\n    $elements.each((_, element) => {\n        target = element[node];\n        // 不能包含最顶层的 document 元素\n        while (target && isElement(target)) {\n            // prevUntil, nextUntil, parentsUntil\n            if (nameIndex === 2) {\n                if (selector && $(target).is(selector)) {\n                    break;\n                }\n                if (!filter || $(target).is(filter)) {\n                    ret.push(target);\n                }\n            }\n            // prev, next, parent\n            else if (nameIndex === 0) {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n                break;\n            }\n            // prevAll, nextAll, parents\n            else {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n            }\n            // @ts-ignore\n            target = target[node];\n        }\n    });\n    return new JQ(unique(ret));\n}\n\neach(['', 's', 'sUntil'], (nameIndex, name) => {\n    $.fn[`parent${name}`] = function (selector, filter) {\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'parentNode', selector, filter);\n    };\n});\n\n$.fn.closest = function (selector) {\n    if (this.is(selector)) {\n        return this;\n    }\n    const matched = [];\n    this.parents().each((_, element) => {\n        if ($(element).is(selector)) {\n            matched.push(element);\n            return false;\n        }\n    });\n    return new JQ(matched);\n};\n\nconst rbrace = /^(?:{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\n// 从 `data-*` 中获取的值，需要经过该函数转换\nfunction getData(value) {\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    if (value === 'null') {\n        return null;\n    }\n    if (value === +value + '') {\n        return +value;\n    }\n    if (rbrace.test(value)) {\n        return JSON.parse(value);\n    }\n    return value;\n}\n// 若 value 不存在，则从 `data-*` 中获取值\nfunction dataAttr(element, key, value) {\n    if (isUndefined(value) && element.nodeType === 1) {\n        const name = 'data-' + toKebabCase(key);\n        value = element.getAttribute(name);\n        if (isString(value)) {\n            try {\n                value = getData(value);\n            }\n            catch (e) { }\n        }\n        else {\n            value = undefined;\n        }\n    }\n    return value;\n}\n$.fn.data = function (key, value) {\n    // 获取所有值\n    if (isUndefined(key)) {\n        if (!this.length) {\n            return undefined;\n        }\n        const element = this[0];\n        const resultData = data(element);\n        // window, document 上不存在 `data-*` 属性\n        if (element.nodeType !== 1) {\n            return resultData;\n        }\n        // 从 `data-*` 中获取值\n        const attrs = element.attributes;\n        let i = attrs.length;\n        while (i--) {\n            if (attrs[i]) {\n                let name = attrs[i].name;\n                if (name.indexOf('data-') === 0) {\n                    name = toCamelCase(name.slice(5));\n                    resultData[name] = dataAttr(element, name, resultData[name]);\n                }\n            }\n        }\n        return resultData;\n    }\n    // 同时设置多个值\n    if (isObjectLike(key)) {\n        return this.each(function () {\n            data(this, key);\n        });\n    }\n    // value 传入了 undefined\n    if (arguments.length === 2 && isUndefined(value)) {\n        return this;\n    }\n    // 设置值\n    if (!isUndefined(value)) {\n        return this.each(function () {\n            data(this, key, value);\n        });\n    }\n    // 获取值\n    if (!this.length) {\n        return undefined;\n    }\n    return dataAttr(this[0], key, data(this[0], key));\n};\n\n$.fn.empty = function () {\n    return this.each(function () {\n        this.innerHTML = '';\n    });\n};\n\n$.fn.extend = function (obj) {\n    each(obj, (prop, value) => {\n        // 在 JQ 对象上扩展方法时，需要自己添加 typescript 的类型定义\n        $.fn[prop] = value;\n    });\n    return this;\n};\n\n$.fn.filter = function (selector) {\n    if (isFunction(selector)) {\n        return this.map((index, element) => selector.call(element, index, element) ? element : undefined);\n    }\n    if (isString(selector)) {\n        return this.map((_, element) => $(element).is(selector) ? element : undefined);\n    }\n    const $selector = $(selector);\n    return this.map((_, element) => $selector.get().indexOf(element) > -1 ? element : undefined);\n};\n\n$.fn.first = function () {\n    return this.eq(0);\n};\n\n$.fn.has = function (selector) {\n    const $targets = isString(selector) ? this.find(selector) : $(selector);\n    const { length } = $targets;\n    return this.map(function () {\n        for (let i = 0; i < length; i += 1) {\n            if (contains(this, $targets[i])) {\n                return this;\n            }\n        }\n        return;\n    });\n};\n\n$.fn.hasClass = function (className) {\n    return this[0].classList.contains(className);\n};\n\n/**\n * 值上面的 padding、border、margin 处理\n * @param element\n * @param name\n * @param value\n * @param funcIndex\n * @param includeMargin\n * @param multiply\n */\nfunction handleExtraWidth(element, name, value, funcIndex, includeMargin, multiply) {\n    // 获取元素的 padding, border, margin 宽度（两侧宽度的和）\n    const getExtraWidthValue = (extra) => {\n        return (getExtraWidth(element, name.toLowerCase(), extra) *\n            multiply);\n    };\n    if (funcIndex === 2 && includeMargin) {\n        value += getExtraWidthValue('margin');\n    }\n    if (isBorderBox(element)) {\n        // IE 为 box-sizing: border-box 时，得到的值不含 border 和 padding，这里先修复\n        // 仅获取时需要处理，multiply === 1 为 get\n        if (isIE() && multiply === 1) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 0) {\n            value -= getExtraWidthValue('border');\n        }\n        if (funcIndex === 1) {\n            value -= getExtraWidthValue('border');\n            value -= getExtraWidthValue('padding');\n        }\n    }\n    else {\n        if (funcIndex === 0) {\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 2) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n    }\n    return value;\n}\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n */\nfunction get(element, name, funcIndex, includeMargin) {\n    const clientProp = `client${name}`;\n    const scrollProp = `scroll${name}`;\n    const offsetProp = `offset${name}`;\n    const innerProp = `inner${name}`;\n    // $(window).width()\n    if (isWindow(element)) {\n        // outerWidth, outerHeight 需要包含滚动条的宽度\n        return funcIndex === 2\n            ? element[innerProp]\n            : toElement(document)[clientProp];\n    }\n    // $(document).width()\n    if (isDocument(element)) {\n        const doc = toElement(element);\n        return Math.max(\n        // @ts-ignore\n        element.body[scrollProp], doc[scrollProp], \n        // @ts-ignore\n        element.body[offsetProp], doc[offsetProp], doc[clientProp]);\n    }\n    const value = parseFloat(getComputedStyleValue(element, name.toLowerCase()) || '0');\n    return handleExtraWidth(element, name, value, funcIndex, includeMargin, 1);\n}\n/**\n * 设置元素的样式值\n * @param element\n * @param elementIndex\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n * @param value\n */\nfunction set(element, elementIndex, name, funcIndex, includeMargin, value) {\n    let computedValue = isFunction(value)\n        ? value.call(element, elementIndex, get(element, name, funcIndex, includeMargin))\n        : value;\n    if (computedValue == null) {\n        return;\n    }\n    const $element = $(element);\n    const dimension = name.toLowerCase();\n    // 特殊的值，不需要计算 padding、border、margin\n    if (['auto', 'inherit', ''].indexOf(computedValue) > -1) {\n        $element.css(dimension, computedValue);\n        return;\n    }\n    // 其他值保留原始单位。注意：如果不使用 px 作为单位，则算出的值一般是不准确的\n    const suffix = computedValue.toString().replace(/\\b[0-9.]*/, '');\n    const numerical = parseFloat(computedValue);\n    computedValue =\n        handleExtraWidth(element, name, numerical, funcIndex, includeMargin, -1) +\n            (suffix || 'px');\n    $element.css(dimension, computedValue);\n}\neach(['Width', 'Height'], (_, name) => {\n    each([`inner${name}`, name.toLowerCase(), `outer${name}`], (funcIndex, funcName) => {\n        $.fn[funcName] = function (margin, value) {\n            // 是否是赋值操作\n            const isSet = arguments.length && (funcIndex < 2 || !isBoolean(margin));\n            const includeMargin = margin === true || value === true;\n            // 获取第一个元素的值\n            if (!isSet) {\n                return this.length\n                    ? get(this[0], name, funcIndex, includeMargin)\n                    : undefined;\n            }\n            // 设置每个元素的值\n            return this.each((index, element) => set(element, index, name, funcIndex, includeMargin, margin));\n        };\n    });\n});\n\n$.fn.hide = function () {\n    return this.each(function () {\n        this.style.display = 'none';\n    });\n};\n\neach(['val', 'html', 'text'], (nameIndex, name) => {\n    const props = {\n        0: 'value',\n        1: 'innerHTML',\n        2: 'textContent',\n    };\n    const propName = props[nameIndex];\n    function get($elements) {\n        // text() 获取所有元素的文本\n        if (nameIndex === 2) {\n            // @ts-ignore\n            return map($elements, (element) => toElement(element)[propName]).join('');\n        }\n        // 空集合时，val() 和 html() 返回 undefined\n        if (!$elements.length) {\n            return undefined;\n        }\n        // val() 和 html() 仅获取第一个元素的内容\n        const firstElement = $elements[0];\n        // select multiple 返回数组\n        if (nameIndex === 0 && $(firstElement).is('select[multiple]')) {\n            return map($(firstElement).find('option:checked'), (element) => element.value);\n        }\n        // @ts-ignore\n        return firstElement[propName];\n    }\n    function set(element, value) {\n        // text() 和 html() 赋值为 undefined，则保持原内容不变\n        // val() 赋值为 undefined 则赋值为空\n        if (isUndefined(value)) {\n            if (nameIndex !== 0) {\n                return;\n            }\n            value = '';\n        }\n        if (nameIndex === 1 && isElement(value)) {\n            value = value.outerHTML;\n        }\n        // @ts-ignore\n        element[propName] = value;\n    }\n    $.fn[name] = function (value) {\n        // 获取值\n        if (!arguments.length) {\n            return get(this);\n        }\n        // 设置值\n        return this.each((i, element) => {\n            const computedValue = isFunction(value)\n                ? value.call(element, i, get($(element)))\n                : value;\n            // value 是数组，则选中数组中的元素，反选不在数组中的元素\n            if (nameIndex === 0 && Array.isArray(computedValue)) {\n                // select[multiple]\n                if ($(element).is('select[multiple]')) {\n                    map($(element).find('option'), (option) => (option.selected =\n                        computedValue.indexOf(option.value) >\n                            -1));\n                }\n                // 其他 checkbox, radio 等元素\n                else {\n                    element.checked =\n                        computedValue.indexOf(element.value) > -1;\n                }\n            }\n            else {\n                set(element, computedValue);\n            }\n        });\n    };\n});\n\n$.fn.index = function (selector) {\n    if (!arguments.length) {\n        return this.eq(0).parent().children().get().indexOf(this[0]);\n    }\n    if (isString(selector)) {\n        return $(selector).get().indexOf(this[0]);\n    }\n    return this.get().indexOf($(selector)[0]);\n};\n\n$.fn.last = function () {\n    return this.eq(-1);\n};\n\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`next${name}`] = function (selector, filter) {\n        return dir(this, nameIndex, 'nextElementSibling', selector, filter);\n    };\n});\n\n$.fn.not = function (selector) {\n    const $excludes = this.filter(selector);\n    return this.map((_, element) => $excludes.index(element) > -1 ? undefined : element);\n};\n\n/**\n * 返回最近的用于定位的父元素\n */\n$.fn.offsetParent = function () {\n    return this.map(function () {\n        let offsetParent = this.offsetParent;\n        while (offsetParent && $(offsetParent).css('position') === 'static') {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || document.documentElement;\n    });\n};\n\nfunction floatStyle($element, name) {\n    return parseFloat($element.css(name));\n}\n$.fn.position = function () {\n    if (!this.length) {\n        return undefined;\n    }\n    const $element = this.eq(0);\n    let currentOffset;\n    let parentOffset = {\n        left: 0,\n        top: 0,\n    };\n    if ($element.css('position') === 'fixed') {\n        currentOffset = $element[0].getBoundingClientRect();\n    }\n    else {\n        currentOffset = $element.offset();\n        const $offsetParent = $element.offsetParent();\n        parentOffset = $offsetParent.offset();\n        parentOffset.top += floatStyle($offsetParent, 'border-top-width');\n        parentOffset.left += floatStyle($offsetParent, 'border-left-width');\n    }\n    return {\n        top: currentOffset.top - parentOffset.top - floatStyle($element, 'margin-top'),\n        left: currentOffset.left -\n            parentOffset.left -\n            floatStyle($element, 'margin-left'),\n    };\n};\n\nfunction get$1(element) {\n    if (!element.getClientRects().length) {\n        return { top: 0, left: 0 };\n    }\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset,\n    };\n}\nfunction set$1(element, value, index) {\n    const $element = $(element);\n    const position = $element.css('position');\n    if (position === 'static') {\n        $element.css('position', 'relative');\n    }\n    const currentOffset = get$1(element);\n    const currentTopString = $element.css('top');\n    const currentLeftString = $element.css('left');\n    let currentTop;\n    let currentLeft;\n    const calculatePosition = (position === 'absolute' || position === 'fixed') &&\n        (currentTopString + currentLeftString).indexOf('auto') > -1;\n    if (calculatePosition) {\n        const currentPosition = $element.position();\n        currentTop = currentPosition.top;\n        currentLeft = currentPosition.left;\n    }\n    else {\n        currentTop = parseFloat(currentTopString);\n        currentLeft = parseFloat(currentLeftString);\n    }\n    const computedValue = isFunction(value)\n        ? value.call(element, index, extend({}, currentOffset))\n        : value;\n    $element.css({\n        top: computedValue.top != null\n            ? computedValue.top - currentOffset.top + currentTop\n            : undefined,\n        left: computedValue.left != null\n            ? computedValue.left - currentOffset.left + currentLeft\n            : undefined,\n    });\n}\n$.fn.offset = function (value) {\n    // 获取坐标\n    if (!arguments.length) {\n        if (!this.length) {\n            return undefined;\n        }\n        return get$1(this[0]);\n    }\n    // 设置坐标\n    return this.each(function (index) {\n        set$1(this, value, index);\n    });\n};\n\n$.fn.one = function (types, selector, data, callback) {\n    // @ts-ignore\n    return this.on(types, selector, data, callback, true);\n};\n\neach(['', 'All', 'Until'], (nameIndex, name) => {\n    $.fn[`prev${name}`] = function (selector, filter) {\n        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'previousElementSibling', selector, filter);\n    };\n});\n\n$.fn.removeAttr = function (attributeName) {\n    const names = attributeName.split(' ').filter((name) => name);\n    return this.each(function () {\n        each(names, (_, name) => {\n            this.removeAttribute(name);\n        });\n    });\n};\n\n$.fn.removeData = function (name) {\n    return this.each(function () {\n        removeData(this, name);\n    });\n};\n\n$.fn.removeProp = function (name) {\n    return this.each(function () {\n        try {\n            // @ts-ignore\n            delete this[name];\n        }\n        catch (e) { }\n    });\n};\n\n$.fn.replaceWith = function (newContent) {\n    this.each((index, element) => {\n        let content = newContent;\n        if (isFunction(content)) {\n            content = content.call(element, index, element.innerHTML);\n        }\n        else if (index && !isString(content)) {\n            content = $(content).clone();\n        }\n        $(element).before(content);\n    });\n    return this.remove();\n};\n\n$.fn.replaceAll = function (target) {\n    return $(target).map((index, element) => {\n        $(element).replaceWith(index ? this.clone() : this);\n        return this.get();\n    });\n};\n\n/**\n * 将表单元素的值组合成键值对数组\n * @returns {Array}\n */\n$.fn.serializeArray = function () {\n    const result = [];\n    this.each((_, element) => {\n        const elements = element instanceof HTMLFormElement ? element.elements : [element];\n        $(elements).each((_, element) => {\n            const $element = $(element);\n            const type = element.type;\n            const nodeName = element.nodeName.toLowerCase();\n            if (nodeName !== 'fieldset' &&\n                element.name &&\n                !element.disabled &&\n                ['input', 'select', 'textarea', 'keygen'].indexOf(nodeName) > -1 &&\n                ['submit', 'button', 'image', 'reset', 'file'].indexOf(type) === -1 &&\n                (['radio', 'checkbox'].indexOf(type) === -1 ||\n                    element.checked)) {\n                const value = $element.val();\n                const valueArr = Array.isArray(value) ? value : [value];\n                valueArr.forEach((value) => {\n                    result.push({\n                        name: element.name,\n                        value,\n                    });\n                });\n            }\n        });\n    });\n    return result;\n};\n\n$.fn.serialize = function () {\n    return param(this.serializeArray());\n};\n\nconst elementDisplay = {};\n/**\n * 获取元素的初始 display 值，用于 .show() 方法\n * @param nodeName\n */\nfunction defaultDisplay(nodeName) {\n    let element;\n    let display;\n    if (!elementDisplay[nodeName]) {\n        element = document.createElement(nodeName);\n        document.body.appendChild(element);\n        display = getStyle(element, 'display');\n        element.parentNode.removeChild(element);\n        if (display === 'none') {\n            display = 'block';\n        }\n        elementDisplay[nodeName] = display;\n    }\n    return elementDisplay[nodeName];\n}\n/**\n * 显示指定元素\n * @returns {JQ}\n */\n$.fn.show = function () {\n    return this.each(function () {\n        if (this.style.display === 'none') {\n            this.style.display = '';\n        }\n        if (getStyle(this, 'display') === 'none') {\n            this.style.display = defaultDisplay(this.nodeName);\n        }\n    });\n};\n\n/**\n * 取得同辈元素的集合\n * @param selector {String=}\n * @returns {JQ}\n */\n$.fn.siblings = function (selector) {\n    return this.prevAll(selector).add(this.nextAll(selector));\n};\n\n/**\n * 切换元素的显示状态\n */\n$.fn.toggle = function () {\n    return this.each(function () {\n        getStyle(this, 'display') === 'none' ? $(this).show() : $(this).hide();\n    });\n};\n\n$.fn.reflow = function () {\n    return this.each(function () {\n        return this.clientLeft;\n    });\n};\n\n$.fn.transition = function (duration) {\n    if (isNumber(duration)) {\n        duration = `${duration}ms`;\n    }\n    return this.each(function () {\n        this.style.webkitTransitionDuration = duration;\n        this.style.transitionDuration = duration;\n    });\n};\n\n$.fn.transitionEnd = function (callback) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const events = ['webkitTransitionEnd', 'transitionend'];\n    function fireCallback(e) {\n        if (e.target !== this) {\n            return;\n        }\n        // @ts-ignore\n        callback.call(this, e);\n        each(events, (_, event) => {\n            that.off(event, fireCallback);\n        });\n    }\n    each(events, (_, event) => {\n        that.on(event, fireCallback);\n    });\n    return this;\n};\n\n$.fn.transformOrigin = function (transformOrigin) {\n    return this.each(function () {\n        this.style.webkitTransformOrigin = transformOrigin;\n        this.style.transformOrigin = transformOrigin;\n    });\n};\n\n$.fn.transform = function (transform) {\n    return this.each(function () {\n        this.style.webkitTransform = transform;\n        this.style.transform = transform;\n    });\n};\n\n/**\n * CSS 选择器和初始化函数组成的对象\n */\nconst entries = {};\n/**\n * 注册并执行初始化函数\n * @param selector CSS 选择器\n * @param apiInit 初始化函数\n * @param i 元素索引\n * @param element 元素\n */\nfunction mutation(selector, apiInit, i, element) {\n    let selectors = data(element, '_mdui_mutation');\n    if (!selectors) {\n        selectors = [];\n        data(element, '_mdui_mutation', selectors);\n    }\n    if (selectors.indexOf(selector) === -1) {\n        selectors.push(selector);\n        apiInit.call(element, i, element);\n    }\n}\n\n$.fn.mutation = function () {\n    return this.each((i, element) => {\n        const $this = $(element);\n        each(entries, (selector, apiInit) => {\n            if ($this.is(selector)) {\n                mutation(selector, apiInit, i, element);\n            }\n            $this.find(selector).each((i, element) => {\n                mutation(selector, apiInit, i, element);\n            });\n        });\n    });\n};\n\n$.showOverlay = function (zIndex) {\n    let $overlay = $('.mdui-overlay');\n    if ($overlay.length) {\n        $overlay.data('_overlay_is_deleted', false);\n        if (!isUndefined(zIndex)) {\n            $overlay.css('z-index', zIndex);\n        }\n    }\n    else {\n        if (isUndefined(zIndex)) {\n            zIndex = 2000;\n        }\n        $overlay = $('<div class=\"mdui-overlay\">')\n            .appendTo(document.body)\n            .reflow()\n            .css('z-index', zIndex);\n    }\n    let level = $overlay.data('_overlay_level') || 0;\n    return $overlay.data('_overlay_level', ++level).addClass('mdui-overlay-show');\n};\n\n$.hideOverlay = function (force = false) {\n    const $overlay = $('.mdui-overlay');\n    if (!$overlay.length) {\n        return;\n    }\n    let level = force ? 1 : $overlay.data('_overlay_level');\n    if (level > 1) {\n        $overlay.data('_overlay_level', --level);\n        return;\n    }\n    $overlay\n        .data('_overlay_level', 0)\n        .removeClass('mdui-overlay-show')\n        .data('_overlay_is_deleted', true)\n        .transitionEnd(() => {\n        if ($overlay.data('_overlay_is_deleted')) {\n            $overlay.remove();\n        }\n    });\n};\n\n$.lockScreen = function () {\n    const $body = $('body');\n    // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n    const newBodyWidth = $body.width();\n    let level = $body.data('_lockscreen_level') || 0;\n    $body\n        .addClass('mdui-locked')\n        .width(newBodyWidth)\n        .data('_lockscreen_level', ++level);\n};\n\n$.unlockScreen = function (force = false) {\n    const $body = $('body');\n    let level = force ? 1 : $body.data('_lockscreen_level');\n    if (level > 1) {\n        $body.data('_lockscreen_level', --level);\n        return;\n    }\n    $body.data('_lockscreen_level', 0).removeClass('mdui-locked').width('');\n};\n\n$.throttle = function (fn, delay = 16) {\n    let timer = null;\n    return function (...args) {\n        if (isNull(timer)) {\n            timer = setTimeout(() => {\n                fn.apply(this, args);\n                timer = null;\n            }, delay);\n        }\n    };\n};\n\nconst GUID = {};\n$.guid = function (name) {\n    if (!isUndefined(name) && !isUndefined(GUID[name])) {\n        return GUID[name];\n    }\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    const guid = '_' +\n        s4() +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        '-' +\n        s4() +\n        s4() +\n        s4();\n    if (!isUndefined(name)) {\n        GUID[name] = guid;\n    }\n    return guid;\n};\n\nmdui.mutation = function (selector, apiInit) {\n    if (isUndefined(selector) || isUndefined(apiInit)) {\n        $(document).mutation();\n        return;\n    }\n    entries[selector] = apiInit;\n    $(selector).each((i, element) => mutation(selector, apiInit, i, element));\n};\n\n/**\n * 触发组件上的事件\n * @param eventName 事件名\n * @param componentName 组件名\n * @param target 在该元素上触发事件\n * @param instance 组件实例\n * @param parameters 事件参数\n */\nfunction componentEvent(eventName, componentName, target, instance, parameters) {\n    if (!parameters) {\n        parameters = {};\n    }\n    // @ts-ignore\n    parameters.inst = instance;\n    const fullEventName = `${eventName}.mdui.${componentName}`;\n    // jQuery 事件\n    // @ts-ignore\n    if (typeof jQuery !== 'undefined') {\n        // @ts-ignore\n        jQuery(target).trigger(fullEventName, parameters);\n    }\n    const $target = $(target);\n    // mdui.jq 事件\n    $target.trigger(fullEventName, parameters);\n    const eventParams = {\n        bubbles: true,\n        cancelable: true,\n        detail: parameters,\n    };\n    const eventObject = new CustomEvent(fullEventName, eventParams);\n    // @ts-ignore\n    eventObject._detail = parameters;\n    $target[0].dispatchEvent(eventObject);\n}\n\nconst $document = $(document);\nconst $window = $(window);\nconst $body = $('body');\n\nconst DEFAULT_OPTIONS = {\n    tolerance: 5,\n    offset: 0,\n    initialClass: 'mdui-headroom',\n    pinnedClass: 'mdui-headroom-pinned-top',\n    unpinnedClass: 'mdui-headroom-unpinned-top',\n};\nclass Headroom {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS);\n        /**\n         * 当前 headroom 的状态\n         */\n        this.state = 'pinned';\n        /**\n         * 当前是否启用\n         */\n        this.isEnable = false;\n        /**\n         * 上次滚动后，垂直方向的距离\n         */\n        this.lastScrollY = 0;\n        /**\n         * AnimationFrame ID\n         */\n        this.rafId = 0;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        // tolerance 参数若为数值，转换为对象\n        const tolerance = this.options.tolerance;\n        if (isNumber(tolerance)) {\n            this.options.tolerance = {\n                down: tolerance,\n                up: tolerance,\n            };\n        }\n        this.enable();\n    }\n    /**\n     * 滚动时的处理\n     */\n    onScroll() {\n        this.rafId = window.requestAnimationFrame(() => {\n            const currentScrollY = window.pageYOffset;\n            const direction = currentScrollY > this.lastScrollY ? 'down' : 'up';\n            const tolerance = this.options.tolerance[direction];\n            const scrolled = Math.abs(currentScrollY - this.lastScrollY);\n            const toleranceExceeded = scrolled >= tolerance;\n            if (currentScrollY > this.lastScrollY &&\n                currentScrollY >= this.options.offset &&\n                toleranceExceeded) {\n                this.unpin();\n            }\n            else if ((currentScrollY < this.lastScrollY && toleranceExceeded) ||\n                currentScrollY <= this.options.offset) {\n                this.pin();\n            }\n            this.lastScrollY = currentScrollY;\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'headroom', this.$element, this);\n    }\n    /**\n     * 动画结束的回调\n     */\n    transitionEnd() {\n        if (this.state === 'pinning') {\n            this.state = 'pinned';\n            this.triggerEvent('pinned');\n        }\n        if (this.state === 'unpinning') {\n            this.state = 'unpinned';\n            this.triggerEvent('unpinned');\n        }\n    }\n    /**\n     * 使元素固定住\n     */\n    pin() {\n        if (this.state === 'pinning' ||\n            this.state === 'pinned' ||\n            !this.$element.hasClass(this.options.initialClass)) {\n            return;\n        }\n        this.triggerEvent('pin');\n        this.state = 'pinning';\n        this.$element\n            .removeClass(this.options.unpinnedClass)\n            .addClass(this.options.pinnedClass)\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 使元素隐藏\n     */\n    unpin() {\n        if (this.state === 'unpinning' ||\n            this.state === 'unpinned' ||\n            !this.$element.hasClass(this.options.initialClass)) {\n            return;\n        }\n        this.triggerEvent('unpin');\n        this.state = 'unpinning';\n        this.$element\n            .removeClass(this.options.pinnedClass)\n            .addClass(this.options.unpinnedClass)\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 启用 headroom 插件\n     */\n    enable() {\n        if (this.isEnable) {\n            return;\n        }\n        this.isEnable = true;\n        this.state = 'pinned';\n        this.$element\n            .addClass(this.options.initialClass)\n            .removeClass(this.options.pinnedClass)\n            .removeClass(this.options.unpinnedClass);\n        this.lastScrollY = window.pageYOffset;\n        $window.on('scroll', () => this.onScroll());\n    }\n    /**\n     * 禁用 headroom 插件\n     */\n    disable() {\n        if (!this.isEnable) {\n            return;\n        }\n        this.isEnable = false;\n        this.$element\n            .removeClass(this.options.initialClass)\n            .removeClass(this.options.pinnedClass)\n            .removeClass(this.options.unpinnedClass);\n        $window.off('scroll', () => this.onScroll());\n        window.cancelAnimationFrame(this.rafId);\n    }\n    /**\n     * 获取当前状态。共包含四种状态：`pinning`、`pinned`、`unpinning`、`unpinned`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Headroom = Headroom;\n\n/**\n * 解析 DATA API 参数\n * @param element 元素\n * @param name 属性名\n */\nfunction parseOptions(element, name) {\n    const attr = $(element).attr(name);\n    if (!attr) {\n        return {};\n    }\n    return new Function('', `var json = ${attr}; return JSON.parse(JSON.stringify(json));`)();\n}\n\nconst customAttr = 'mdui-headroom';\n$(() => {\n    mdui.mutation(`[${customAttr}]`, function () {\n        new mdui.Headroom(this, parseOptions(this, customAttr));\n    });\n});\n\nconst DEFAULT_OPTIONS$1 = {\n    accordion: false,\n};\nclass CollapseAbstract {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$1);\n        // CSS 类名\n        const classPrefix = `mdui-${this.getNamespace()}-item`;\n        this.classItem = classPrefix;\n        this.classItemOpen = `${classPrefix}-open`;\n        this.classHeader = `${classPrefix}-header`;\n        this.classBody = `${classPrefix}-body`;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.bindEvent();\n    }\n    /**\n     * 绑定事件\n     */\n    bindEvent() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 点击 header 时，打开/关闭 item\n        this.$element.on('click', `.${this.classHeader}`, function () {\n            const $header = $(this);\n            const $item = $header.parent();\n            const $items = that.getItems();\n            $items.each((_, item) => {\n                if ($item.is(item)) {\n                    that.toggle(item);\n                }\n            });\n        });\n        // 点击关闭按钮时，关闭 item\n        this.$element.on('click', `[mdui-${this.getNamespace()}-item-close]`, function () {\n            const $target = $(this);\n            const $item = $target.parents(`.${that.classItem}`).first();\n            that.close($item);\n        });\n    }\n    /**\n     * 指定 item 是否处于打开状态\n     * @param $item\n     */\n    isOpen($item) {\n        return $item.hasClass(this.classItemOpen);\n    }\n    /**\n     * 获取所有 item\n     */\n    getItems() {\n        return this.$element.children(`.${this.classItem}`);\n    }\n    /**\n     * 获取指定 item\n     * @param item\n     */\n    getItem(item) {\n        if (isNumber(item)) {\n            return this.getItems().eq(item);\n        }\n        return $(item).first();\n    }\n    /**\n     * 触发组件事件\n     * @param name 事件名\n     * @param $item 事件触发的目标 item\n     */\n    triggerEvent(name, $item) {\n        componentEvent(name, this.getNamespace(), $item, this);\n    }\n    /**\n     * 动画结束回调\n     * @param $content body 元素\n     * @param $item item 元素\n     */\n    transitionEnd($content, $item) {\n        if (this.isOpen($item)) {\n            $content.transition(0).height('auto').reflow().transition('');\n            this.triggerEvent('opened', $item);\n        }\n        else {\n            $content.height('');\n            this.triggerEvent('closed', $item);\n        }\n    }\n    /**\n     * 打开指定面板项\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    open(item) {\n        const $item = this.getItem(item);\n        if (this.isOpen($item)) {\n            return;\n        }\n        // 关闭其他项\n        if (this.options.accordion) {\n            this.$element.children(`.${this.classItemOpen}`).each((_, element) => {\n                const $element = $(element);\n                if (!$element.is($item)) {\n                    this.close($element);\n                }\n            });\n        }\n        const $content = $item.children(`.${this.classBody}`);\n        $content\n            .height($content[0].scrollHeight)\n            .transitionEnd(() => this.transitionEnd($content, $item));\n        this.triggerEvent('open', $item);\n        $item.addClass(this.classItemOpen);\n    }\n    /**\n     * 关闭指定面板项\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    close(item) {\n        const $item = this.getItem(item);\n        if (!this.isOpen($item)) {\n            return;\n        }\n        const $content = $item.children(`.${this.classBody}`);\n        this.triggerEvent('close', $item);\n        $item.removeClass(this.classItemOpen);\n        $content\n            .transition(0)\n            .height($content[0].scrollHeight)\n            .reflow()\n            .transition('')\n            .height('')\n            .transitionEnd(() => this.transitionEnd($content, $item));\n    }\n    /**\n     * 切换指定面板项的打开状态\n     * @param item 面板项的索引号、或 CSS 选择器、或 DOM 元素、或 JQ 对象\n     */\n    toggle(item) {\n        const $item = this.getItem(item);\n        this.isOpen($item) ? this.close($item) : this.open($item);\n    }\n    /**\n     * 打开所有面板项\n     */\n    openAll() {\n        this.getItems().each((_, element) => this.open(element));\n    }\n    /**\n     * 关闭所有面板项\n     */\n    closeAll() {\n        this.getItems().each((_, element) => this.close(element));\n    }\n}\n\nclass Collapse extends CollapseAbstract {\n    getNamespace() {\n        return 'collapse';\n    }\n}\nmdui.Collapse = Collapse;\n\nconst customAttr$1 = 'mdui-collapse';\n$(() => {\n    mdui.mutation(`[${customAttr$1}]`, function () {\n        new mdui.Collapse(this, parseOptions(this, customAttr$1));\n    });\n});\n\nclass Panel extends CollapseAbstract {\n    getNamespace() {\n        return 'panel';\n    }\n}\nmdui.Panel = Panel;\n\nconst customAttr$2 = 'mdui-panel';\n$(() => {\n    mdui.mutation(`[${customAttr$2}]`, function () {\n        new mdui.Panel(this, parseOptions(this, customAttr$2));\n    });\n});\n\nclass Table {\n    constructor(selector) {\n        /**\n         * 表头 tr 元素\n         */\n        this.$thRow = $();\n        /**\n         * 表格 body 中的 tr 元素\n         */\n        this.$tdRows = $();\n        /**\n         * 表头的 checkbox 元素\n         */\n        this.$thCheckbox = $();\n        /**\n         * 表格 body 中的 checkbox 元素\n         */\n        this.$tdCheckboxs = $();\n        /**\n         * 表格行是否可选择\n         */\n        this.selectable = false;\n        /**\n         * 已选中的行数\n         */\n        this.selectedRow = 0;\n        this.$element = $(selector).first();\n        this.init();\n    }\n    /**\n     * 初始化表格\n     */\n    init() {\n        this.$thRow = this.$element.find('thead tr');\n        this.$tdRows = this.$element.find('tbody tr');\n        this.selectable = this.$element.hasClass('mdui-table-selectable');\n        this.updateThCheckbox();\n        this.updateTdCheckbox();\n        this.updateNumericCol();\n    }\n    /**\n     * 生成 checkbox 的 HTML 结构\n     * @param tag 标签名\n     */\n    createCheckboxHTML(tag) {\n        return (`<${tag} class=\"mdui-table-cell-checkbox\">` +\n            '<label class=\"mdui-checkbox\">' +\n            '<input type=\"checkbox\"/>' +\n            '<i class=\"mdui-checkbox-icon\"></i>' +\n            '</label>' +\n            `</${tag}>`);\n    }\n    /**\n     * 更新表头 checkbox 的状态\n     */\n    updateThCheckboxStatus() {\n        const checkbox = this.$thCheckbox[0];\n        const selectedRow = this.selectedRow;\n        const tdRowsLength = this.$tdRows.length;\n        checkbox.checked = selectedRow === tdRowsLength;\n        checkbox.indeterminate = !!selectedRow && selectedRow !== tdRowsLength;\n    }\n    /**\n     * 更新表格行的 checkbox\n     */\n    updateTdCheckbox() {\n        const rowSelectedClass = 'mdui-table-row-selected';\n        this.$tdRows.each((_, row) => {\n            const $row = $(row);\n            // 移除旧的 checkbox\n            $row.find('.mdui-table-cell-checkbox').remove();\n            if (!this.selectable) {\n                return;\n            }\n            // 创建 DOM\n            const $checkbox = $(this.createCheckboxHTML('td'))\n                .prependTo($row)\n                .find('input[type=\"checkbox\"]');\n            // 默认选中的行\n            if ($row.hasClass(rowSelectedClass)) {\n                $checkbox[0].checked = true;\n                this.selectedRow++;\n            }\n            this.updateThCheckboxStatus();\n            // 绑定事件\n            $checkbox.on('change', () => {\n                if ($checkbox[0].checked) {\n                    $row.addClass(rowSelectedClass);\n                    this.selectedRow++;\n                }\n                else {\n                    $row.removeClass(rowSelectedClass);\n                    this.selectedRow--;\n                }\n                this.updateThCheckboxStatus();\n            });\n            this.$tdCheckboxs = this.$tdCheckboxs.add($checkbox);\n        });\n    }\n    /**\n     * 更新表头的 checkbox\n     */\n    updateThCheckbox() {\n        // 移除旧的 checkbox\n        this.$thRow.find('.mdui-table-cell-checkbox').remove();\n        if (!this.selectable) {\n            return;\n        }\n        this.$thCheckbox = $(this.createCheckboxHTML('th'))\n            .prependTo(this.$thRow)\n            .find('input[type=\"checkbox\"]')\n            .on('change', () => {\n            const isCheckedAll = this.$thCheckbox[0].checked;\n            this.selectedRow = isCheckedAll ? this.$tdRows.length : 0;\n            this.$tdCheckboxs.each((_, checkbox) => {\n                checkbox.checked = isCheckedAll;\n            });\n            this.$tdRows.each((_, row) => {\n                isCheckedAll\n                    ? $(row).addClass('mdui-table-row-selected')\n                    : $(row).removeClass('mdui-table-row-selected');\n            });\n        });\n    }\n    /**\n     * 更新数值列\n     */\n    updateNumericCol() {\n        const numericClass = 'mdui-table-col-numeric';\n        this.$thRow.find('th').each((i, th) => {\n            const isNumericCol = $(th).hasClass(numericClass);\n            this.$tdRows.each((_, row) => {\n                const $td = $(row).find('td').eq(i);\n                isNumericCol\n                    ? $td.addClass(numericClass)\n                    : $td.removeClass(numericClass);\n            });\n        });\n    }\n}\nconst dataName = '_mdui_table';\n$(() => {\n    mdui.mutation('.mdui-table', function () {\n        const $element = $(this);\n        if (!$element.data(dataName)) {\n            $element.data(dataName, new Table($element));\n        }\n    });\n});\nmdui.updateTables = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-table') : $(selector);\n    $elements.each((_, element) => {\n        const $element = $(element);\n        const instance = $element.data(dataName);\n        if (instance) {\n            instance.init();\n        }\n        else {\n            $element.data(dataName, new Table($element));\n        }\n    });\n};\n\n/**\n * touch 事件后的 500ms 内禁用 mousedown 事件\n *\n * 不支持触控的屏幕上事件顺序为 mousedown -> mouseup -> click\n * 支持触控的屏幕上事件顺序为 touchstart -> touchend -> mousedown -> mouseup -> click\n *\n * 在每一个事件中都使用 TouchHandler.isAllow(event) 判断事件是否可执行\n * 在 touchstart 和 touchmove、touchend、touchcancel\n *\n * (function () {\n *   $document\n *     .on(start, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       register(e);\n *       console.log(e.type);\n *     })\n *     .on(move, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       console.log(e.type);\n *     })\n *     .on(end, function (e) {\n *       if (!isAllow(e)) {\n *         return;\n *       }\n *       console.log(e.type);\n *     })\n *     .on(unlock, register);\n * })();\n */\nconst startEvent = 'touchstart mousedown';\nconst moveEvent = 'touchmove mousemove';\nconst endEvent = 'touchend mouseup';\nconst cancelEvent = 'touchcancel mouseleave';\nconst unlockEvent = 'touchend touchmove touchcancel';\nlet touches = 0;\n/**\n * 该事件是否被允许，在执行事件前调用该方法判断事件是否可以执行\n * 若已触发 touch 事件，则阻止之后的鼠标事件\n * @param event\n */\nfunction isAllow(event) {\n    return !(touches &&\n        [\n            'mousedown',\n            'mouseup',\n            'mousemove',\n            'click',\n            'mouseover',\n            'mouseout',\n            'mouseenter',\n            'mouseleave',\n        ].indexOf(event.type) > -1);\n}\n/**\n * 在 touchstart 和 touchmove、touchend、touchcancel 事件中调用该方法注册事件\n * @param event\n */\nfunction register(event) {\n    if (event.type === 'touchstart') {\n        // 触发了 touch 事件\n        touches += 1;\n    }\n    else if (['touchmove', 'touchend', 'touchcancel'].indexOf(event.type) > -1) {\n        // touch 事件结束 500ms 后解除对鼠标事件的阻止\n        setTimeout(function () {\n            if (touches) {\n                touches -= 1;\n            }\n        }, 500);\n    }\n}\n\n/**\n * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n *\n * Inspired by https://github.com/fians/Waves\n */\n/**\n * 显示涟漪动画\n * @param event\n * @param $ripple\n */\nfunction show(event, $ripple) {\n    // 鼠标右键不产生涟漪\n    if (event instanceof MouseEvent && event.button === 2) {\n        return;\n    }\n    // 点击位置坐标\n    const touchPosition = typeof TouchEvent !== 'undefined' &&\n        event instanceof TouchEvent &&\n        event.touches.length\n        ? event.touches[0]\n        : event;\n    const touchStartX = touchPosition.pageX;\n    const touchStartY = touchPosition.pageY;\n    // 涟漪位置\n    const offset = $ripple.offset();\n    const height = $ripple.innerHeight();\n    const width = $ripple.innerWidth();\n    const center = {\n        x: touchStartX - offset.left,\n        y: touchStartY - offset.top,\n    };\n    const diameter = Math.max(Math.pow(Math.pow(height, 2) + Math.pow(width, 2), 0.5), 48);\n    // 涟漪扩散动画\n    const translate = `translate3d(${-center.x + width / 2}px,` +\n        `${-center.y + height / 2}px, 0) scale(1)`;\n    // 涟漪的 DOM 结构，并缓存动画效果\n    $(`<div class=\"mdui-ripple-wave\" ` +\n        `style=\"width:${diameter}px;height:${diameter}px;` +\n        `margin-top:-${diameter / 2}px;margin-left:-${diameter / 2}px;` +\n        `left:${center.x}px;top:${center.y}px;\"></div>`)\n        .data('_ripple_wave_translate', translate)\n        .prependTo($ripple)\n        .reflow()\n        .transform(translate);\n}\n/**\n * 隐藏并移除涟漪\n * @param $wave\n */\nfunction removeRipple($wave) {\n    if (!$wave.length || $wave.data('_ripple_wave_removed')) {\n        return;\n    }\n    $wave.data('_ripple_wave_removed', true);\n    let removeTimer = setTimeout(() => $wave.remove(), 400);\n    const translate = $wave.data('_ripple_wave_translate');\n    $wave\n        .addClass('mdui-ripple-wave-fill')\n        .transform(translate.replace('scale(1)', 'scale(1.01)'))\n        .transitionEnd(() => {\n        clearTimeout(removeTimer);\n        $wave\n            .addClass('mdui-ripple-wave-out')\n            .transform(translate.replace('scale(1)', 'scale(1.01)'));\n        removeTimer = setTimeout(() => $wave.remove(), 700);\n        setTimeout(() => {\n            $wave.transitionEnd(() => {\n                clearTimeout(removeTimer);\n                $wave.remove();\n            });\n        }, 0);\n    });\n}\n/**\n * 隐藏涟漪动画\n * @param this\n */\nfunction hide() {\n    const $ripple = $(this);\n    $ripple.children('.mdui-ripple-wave').each((_, wave) => {\n        removeRipple($(wave));\n    });\n    $ripple.off(`${moveEvent} ${endEvent} ${cancelEvent}`, hide);\n}\n/**\n * 显示涟漪，并绑定 touchend 等事件\n * @param event\n */\nfunction showRipple(event) {\n    if (!isAllow(event)) {\n        return;\n    }\n    register(event);\n    // Chrome 59 点击滚动条时，会在 document 上触发事件\n    if (event.target === document) {\n        return;\n    }\n    const $target = $(event.target);\n    // 获取含 .mdui-ripple 类的元素\n    const $ripple = $target.hasClass('mdui-ripple')\n        ? $target\n        : $target.parents('.mdui-ripple').first();\n    if (!$ripple.length) {\n        return;\n    }\n    // 禁用状态的元素上不产生涟漪效果\n    if ($ripple.prop('disabled') || !isUndefined($ripple.attr('disabled'))) {\n        return;\n    }\n    if (event.type === 'touchstart') {\n        let hidden = false;\n        // touchstart 触发指定时间后开始涟漪动画，避免手指滑动时也触发涟漪\n        let timer = setTimeout(() => {\n            timer = 0;\n            show(event, $ripple);\n        }, 200);\n        const hideRipple = () => {\n            // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画\n            if (timer) {\n                clearTimeout(timer);\n                timer = 0;\n                show(event, $ripple);\n            }\n            if (!hidden) {\n                hidden = true;\n                hide.call($ripple);\n            }\n        };\n        // 手指移动后，移除涟漪动画\n        const touchMove = () => {\n            if (timer) {\n                clearTimeout(timer);\n                timer = 0;\n            }\n            hideRipple();\n        };\n        $ripple.on('touchmove', touchMove).on('touchend touchcancel', hideRipple);\n    }\n    else {\n        show(event, $ripple);\n        $ripple.on(`${moveEvent} ${endEvent} ${cancelEvent}`, hide);\n    }\n}\n$(() => {\n    $document.on(startEvent, showRipple).on(unlockEvent, register);\n});\n\nconst defaultData = {\n    reInit: false,\n    domLoadedEvent: false,\n};\n/**\n * 输入框事件\n * @param event\n * @param data\n */\nfunction inputEvent(event, data = {}) {\n    data = extend({}, defaultData, data);\n    const input = event.target;\n    const $input = $(input);\n    const eventType = event.type;\n    const value = $input.val();\n    // 文本框类型\n    const inputType = $input.attr('type') || '';\n    if (['checkbox', 'button', 'submit', 'range', 'radio', 'image'].indexOf(inputType) > -1) {\n        return;\n    }\n    const $textfield = $input.parent('.mdui-textfield');\n    // 输入框是否聚焦\n    if (eventType === 'focus') {\n        $textfield.addClass('mdui-textfield-focus');\n    }\n    if (eventType === 'blur') {\n        $textfield.removeClass('mdui-textfield-focus');\n    }\n    // 输入框是否为空\n    if (eventType === 'blur' || eventType === 'input') {\n        value\n            ? $textfield.addClass('mdui-textfield-not-empty')\n            : $textfield.removeClass('mdui-textfield-not-empty');\n    }\n    // 输入框是否禁用\n    input.disabled\n        ? $textfield.addClass('mdui-textfield-disabled')\n        : $textfield.removeClass('mdui-textfield-disabled');\n    // 表单验证\n    if ((eventType === 'input' || eventType === 'blur') &&\n        !data.domLoadedEvent &&\n        input.validity) {\n        input.validity.valid\n            ? $textfield.removeClass('mdui-textfield-invalid-html5')\n            : $textfield.addClass('mdui-textfield-invalid-html5');\n    }\n    // textarea 高度自动调整\n    if ($input.is('textarea')) {\n        // IE bug：textarea 的值仅为多个换行，不含其他内容时，textarea 的高度不准确\n        //         此时，在计算高度前，在值的开头加入一个空格，计算完后，移除空格\n        const inputValue = value;\n        let hasExtraSpace = false;\n        if (inputValue.replace(/[\\r\\n]/g, '') === '') {\n            $input.val(' ' + inputValue);\n            hasExtraSpace = true;\n        }\n        // 设置 textarea 高度\n        $input.outerHeight('');\n        const height = $input.outerHeight();\n        const scrollHeight = input.scrollHeight;\n        if (scrollHeight > height) {\n            $input.outerHeight(scrollHeight);\n        }\n        // 计算完，还原 textarea 的值\n        if (hasExtraSpace) {\n            $input.val(inputValue);\n        }\n    }\n    // 实时字数统计\n    if (data.reInit) {\n        $textfield.find('.mdui-textfield-counter').remove();\n    }\n    const maxLength = $input.attr('maxlength');\n    if (maxLength) {\n        if (data.reInit || data.domLoadedEvent) {\n            $('<div class=\"mdui-textfield-counter\">' +\n                `<span class=\"mdui-textfield-counter-inputed\"></span> / ${maxLength}` +\n                '</div>').appendTo($textfield);\n        }\n        $textfield\n            .find('.mdui-textfield-counter-inputed')\n            .text(value.length.toString());\n    }\n    // 含 帮助文本、错误提示、字数统计 时，增加文本框底部内边距\n    if ($textfield.find('.mdui-textfield-helper').length ||\n        $textfield.find('.mdui-textfield-error').length ||\n        maxLength) {\n        $textfield.addClass('mdui-textfield-has-bottom');\n    }\n}\n$(() => {\n    // 绑定事件\n    $document.on('input focus blur', '.mdui-textfield-input', { useCapture: true }, inputEvent);\n    // 可展开文本框展开\n    $document.on('click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .addClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')[0]\n            .focus();\n    });\n    // 可展开文本框关闭\n    $document.on('click', '.mdui-textfield-expanded .mdui-textfield-close', function () {\n        $(this)\n            .parents('.mdui-textfield')\n            .removeClass('mdui-textfield-expanded')\n            .find('.mdui-textfield-input')\n            .val('');\n    });\n    /**\n     * 初始化文本框\n     */\n    mdui.mutation('.mdui-textfield', function () {\n        $(this).find('.mdui-textfield-input').trigger('input', {\n            domLoadedEvent: true,\n        });\n    });\n});\nmdui.updateTextFields = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-textfield') : $(selector);\n    $elements.each((_, element) => {\n        $(element).find('.mdui-textfield-input').trigger('input', {\n            reInit: true,\n        });\n    });\n};\n\n/**\n * 滑块的值改变后修改滑块样式\n * @param $slider\n */\nfunction updateValueStyle($slider) {\n    const data = $slider.data();\n    const $track = data._slider_$track;\n    const $fill = data._slider_$fill;\n    const $thumb = data._slider_$thumb;\n    const $input = data._slider_$input;\n    const min = data._slider_min;\n    const max = data._slider_max;\n    const isDisabled = data._slider_disabled;\n    const isDiscrete = data._slider_discrete;\n    const $thumbText = data._slider_$thumbText;\n    const value = $input.val();\n    const percent = ((value - min) / (max - min)) * 100;\n    $fill.width(`${percent}%`);\n    $track.width(`${100 - percent}%`);\n    if (isDisabled) {\n        $fill.css('padding-right', '6px');\n        $track.css('padding-left', '6px');\n    }\n    $thumb.css('left', `${percent}%`);\n    if (isDiscrete) {\n        $thumbText.text(value);\n    }\n    percent === 0\n        ? $slider.addClass('mdui-slider-zero')\n        : $slider.removeClass('mdui-slider-zero');\n}\n/**\n * 重新初始化滑块\n * @param $slider\n */\nfunction reInit($slider) {\n    const $track = $('<div class=\"mdui-slider-track\"></div>');\n    const $fill = $('<div class=\"mdui-slider-fill\"></div>');\n    const $thumb = $('<div class=\"mdui-slider-thumb\"></div>');\n    const $input = $slider.find('input[type=\"range\"]');\n    const isDisabled = $input[0].disabled;\n    const isDiscrete = $slider.hasClass('mdui-slider-discrete');\n    // 禁用状态\n    isDisabled\n        ? $slider.addClass('mdui-slider-disabled')\n        : $slider.removeClass('mdui-slider-disabled');\n    // 重新填充 HTML\n    $slider.find('.mdui-slider-track').remove();\n    $slider.find('.mdui-slider-fill').remove();\n    $slider.find('.mdui-slider-thumb').remove();\n    $slider.append($track).append($fill).append($thumb);\n    // 间续型滑块\n    let $thumbText = $();\n    if (isDiscrete) {\n        $thumbText = $('<span></span>');\n        $thumb.empty().append($thumbText);\n    }\n    $slider.data('_slider_$track', $track);\n    $slider.data('_slider_$fill', $fill);\n    $slider.data('_slider_$thumb', $thumb);\n    $slider.data('_slider_$input', $input);\n    $slider.data('_slider_min', $input.attr('min'));\n    $slider.data('_slider_max', $input.attr('max'));\n    $slider.data('_slider_disabled', isDisabled);\n    $slider.data('_slider_discrete', isDiscrete);\n    $slider.data('_slider_$thumbText', $thumbText);\n    // 设置默认值\n    updateValueStyle($slider);\n}\nconst rangeSelector = '.mdui-slider input[type=\"range\"]';\n$(() => {\n    // 滑块滑动事件\n    $document.on('input change', rangeSelector, function () {\n        const $slider = $(this).parent();\n        updateValueStyle($slider);\n    });\n    // 开始触摸滑块事件\n    $document.on(startEvent, rangeSelector, function (event) {\n        if (!isAllow(event)) {\n            return;\n        }\n        register(event);\n        if (this.disabled) {\n            return;\n        }\n        const $slider = $(this).parent();\n        $slider.addClass('mdui-slider-focus');\n    });\n    // 结束触摸滑块事件\n    $document.on(endEvent, rangeSelector, function (event) {\n        if (!isAllow(event)) {\n            return;\n        }\n        if (this.disabled) {\n            return;\n        }\n        const $slider = $(this).parent();\n        $slider.removeClass('mdui-slider-focus');\n    });\n    $document.on(unlockEvent, rangeSelector, register);\n    /**\n     * 初始化滑块\n     */\n    mdui.mutation('.mdui-slider', function () {\n        reInit($(this));\n    });\n});\nmdui.updateSliders = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-slider') : $(selector);\n    $elements.each((_, element) => {\n        reInit($(element));\n    });\n};\n\nconst DEFAULT_OPTIONS$2 = {\n    trigger: 'hover',\n};\nclass Fab {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$2);\n        /**\n         * 当前 fab 的状态\n         */\n        this.state = 'closed';\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.$btn = this.$element.find('.mdui-fab');\n        this.$dial = this.$element.find('.mdui-fab-dial');\n        this.$dialBtns = this.$dial.find('.mdui-fab');\n        if (this.options.trigger === 'hover') {\n            this.$btn.on('touchstart mouseenter', () => this.open());\n            this.$element.on('mouseleave', () => this.close());\n        }\n        if (this.options.trigger === 'click') {\n            this.$btn.on(startEvent, () => this.open());\n        }\n        // 触摸屏幕其他地方关闭快速拨号\n        $document.on(startEvent, (event) => {\n            if ($(event.target).parents('.mdui-fab-wrapper').length) {\n                return;\n            }\n            this.close();\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'fab', this.$element, this);\n    }\n    /**\n     * 当前是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开快速拨号菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 为菜单中的按钮添加不同的 transition-delay\n        this.$dialBtns.each((index, btn) => {\n            const delay = `${15 * (this.$dialBtns.length - index)}ms`;\n            btn.style.transitionDelay = delay;\n            btn.style.webkitTransitionDelay = delay;\n        });\n        this.$dial.css('height', 'auto').addClass('mdui-fab-dial-show');\n        // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n        if (this.$btn.find('.mdui-fab-opened').length) {\n            this.$btn.addClass('mdui-fab-opened');\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n        this.$dialBtns.first().transitionEnd(() => {\n            if (this.$btn.hasClass('mdui-fab-opened')) {\n                this.state = 'opened';\n                this.triggerEvent('opened');\n            }\n        });\n    }\n    /**\n     * 关闭快速拨号菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        // 为菜单中的按钮添加不同的 transition-delay\n        this.$dialBtns.each((index, btn) => {\n            const delay = `${15 * index}ms`;\n            btn.style.transitionDelay = delay;\n            btn.style.webkitTransitionDelay = delay;\n        });\n        this.$dial.removeClass('mdui-fab-dial-show');\n        this.$btn.removeClass('mdui-fab-opened');\n        this.state = 'closing';\n        this.triggerEvent('close');\n        // 从上往下依次关闭，最后一个关闭后才表示动画完成\n        this.$dialBtns.last().transitionEnd(() => {\n            if (this.$btn.hasClass('mdui-fab-opened')) {\n                return;\n            }\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$dial.css('height', 0);\n        });\n    }\n    /**\n     * 切换快速拨号菜单的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 以动画的形式显示整个浮动操作按钮\n     */\n    show() {\n        this.$element.removeClass('mdui-fab-hide');\n    }\n    /**\n     * 以动画的形式隐藏整个浮动操作按钮\n     */\n    hide() {\n        this.$element.addClass('mdui-fab-hide');\n    }\n    /**\n     * 返回当前快速拨号菜单的打开状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Fab = Fab;\n\nconst customAttr$3 = 'mdui-fab';\n$(() => {\n    // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n    // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n    $document.on('touchstart mousedown mouseover', `[${customAttr$3}]`, function () {\n        new mdui.Fab(this, parseOptions(this, customAttr$3));\n    });\n});\n\n/**\n * 最终生成的元素结构为：\n *  <select class=\"mdui-select\" mdui-select=\"{position: 'top'}\" style=\"display: none;\"> // $native\n *    <option value=\"1\">State 1</option>\n *    <option value=\"2\">State 2</option>\n *    <option value=\"3\" disabled=\"\">State 3</option>\n *  </select>\n *  <div class=\"mdui-select mdui-select-position-top\" style=\"\" id=\"88dec0e4-d4a2-c6d0-0e7f-1ba4501e0553\"> // $element\n *    <span class=\"mdui-select-selected\">State 1</span> // $selected\n *    <div class=\"mdui-select-menu\" style=\"transform-origin: center 100% 0px;\"> // $menu\n *      <div class=\"mdui-select-menu-item mdui-ripple\" selected=\"\">State 1</div> // $items\n *      <div class=\"mdui-select-menu-item mdui-ripple\">State 2</div>\n *      <div class=\"mdui-select-menu-item mdui-ripple\" disabled=\"\">State 3</div>\n *    </div>\n *  </div>\n */\nconst DEFAULT_OPTIONS$3 = {\n    position: 'auto',\n    gutter: 16,\n};\nclass Select {\n    constructor(selector, options = {}) {\n        /**\n         * 生成的 `<div class=\"mdui-select\">` 元素的 JQ 对象\n         */\n        this.$element = $();\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$3);\n        /**\n         * select 的 size 属性的值，根据该值设置 select 的高度\n         */\n        this.size = 0;\n        /**\n         * 占位元素，显示已选中菜单项的文本\n         */\n        this.$selected = $();\n        /**\n         * 菜单项的外层元素的 JQ 对象\n         */\n        this.$menu = $();\n        /**\n         * 菜单项数组的 JQ 对象\n         */\n        this.$items = $();\n        /**\n         * 当前选中的菜单项的索引号\n         */\n        this.selectedIndex = 0;\n        /**\n         * 当前选中菜单项的文本\n         */\n        this.selectedText = '';\n        /**\n         * 当前选中菜单项的值\n         */\n        this.selectedValue = '';\n        /**\n         * 当前 select 的状态\n         */\n        this.state = 'closed';\n        this.$native = $(selector).first();\n        this.$native.hide();\n        extend(this.options, options);\n        // 为当前 select 生成唯一 ID\n        this.uniqueID = $.guid();\n        // 生成 select\n        this.handleUpdate();\n        // 点击 select 外面区域关闭\n        $document.on('click touchstart', (event) => {\n            const $target = $(event.target);\n            if (this.isOpen() &&\n                !$target.is(this.$element) &&\n                !contains(this.$element[0], $target[0])) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * 调整菜单位置\n     */\n    readjustMenu() {\n        const windowHeight = $window.height();\n        // mdui-select 高度\n        const elementHeight = this.$element.height();\n        // 菜单项高度\n        const $itemFirst = this.$items.first();\n        const itemHeight = $itemFirst.height();\n        const itemMargin = parseInt($itemFirst.css('margin-top'));\n        // 菜单高度\n        const menuWidth = this.$element.innerWidth() + 0.01; // 必须比真实宽度多一点，不然会出现省略号\n        let menuHeight = itemHeight * this.size + itemMargin * 2;\n        // mdui-select 在窗口中的位置\n        const elementTop = this.$element[0].getBoundingClientRect().top;\n        let transformOriginY;\n        let menuMarginTop;\n        if (this.options.position === 'bottom') {\n            menuMarginTop = elementHeight;\n            transformOriginY = '0px';\n        }\n        else if (this.options.position === 'top') {\n            menuMarginTop = -menuHeight - 1;\n            transformOriginY = '100%';\n        }\n        else {\n            // 菜单高度不能超过窗口高度\n            const menuMaxHeight = windowHeight - this.options.gutter * 2;\n            if (menuHeight > menuMaxHeight) {\n                menuHeight = menuMaxHeight;\n            }\n            // 菜单的 margin-top\n            menuMarginTop = -(itemMargin +\n                this.selectedIndex * itemHeight +\n                (itemHeight - elementHeight) / 2);\n            const menuMaxMarginTop = -(itemMargin +\n                (this.size - 1) * itemHeight +\n                (itemHeight - elementHeight) / 2);\n            if (menuMarginTop < menuMaxMarginTop) {\n                menuMarginTop = menuMaxMarginTop;\n            }\n            // 菜单不能超出窗口\n            const menuTop = elementTop + menuMarginTop;\n            if (menuTop < this.options.gutter) {\n                // 不能超出窗口上方\n                menuMarginTop = -(elementTop - this.options.gutter);\n            }\n            else if (menuTop + menuHeight + this.options.gutter > windowHeight) {\n                // 不能超出窗口下方\n                menuMarginTop = -(elementTop +\n                    menuHeight +\n                    this.options.gutter -\n                    windowHeight);\n            }\n            // transform 的 Y 轴坐标\n            transformOriginY = `${this.selectedIndex * itemHeight + itemHeight / 2 + itemMargin}px`;\n        }\n        // 设置样式\n        this.$element.innerWidth(menuWidth);\n        this.$menu\n            .innerWidth(menuWidth)\n            .height(menuHeight)\n            .css({\n            'margin-top': menuMarginTop + 'px',\n            'transform-origin': 'center ' + transformOriginY + ' 0',\n        });\n    }\n    /**\n     * select 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 对原生 select 组件进行了修改后，需要调用该方法\n     */\n    handleUpdate() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        this.selectedValue = this.$native.val();\n        const itemsData = [];\n        this.$items = $();\n        // 生成 HTML\n        this.$native.find('option').each((index, option) => {\n            const text = option.textContent || '';\n            const value = option.value;\n            const disabled = option.disabled;\n            const selected = this.selectedValue === value;\n            itemsData.push({\n                value,\n                text,\n                disabled,\n                selected,\n                index,\n            });\n            if (selected) {\n                this.selectedText = text;\n                this.selectedIndex = index;\n            }\n            this.$items = this.$items.add('<div class=\"mdui-select-menu-item mdui-ripple\"' +\n                (disabled ? ' disabled' : '') +\n                (selected ? ' selected' : '') +\n                `>${text}</div>`);\n        });\n        this.$selected = $(`<span class=\"mdui-select-selected\">${this.selectedText}</span>`);\n        this.$element = $(`<div class=\"mdui-select mdui-select-position-${this.options.position}\" ` +\n            `style=\"${this.$native.attr('style')}\" ` +\n            `id=\"${this.uniqueID}\"></div>`)\n            .show()\n            .append(this.$selected);\n        this.$menu = $('<div class=\"mdui-select-menu\"></div>')\n            .appendTo(this.$element)\n            .append(this.$items);\n        $(`#${this.uniqueID}`).remove();\n        this.$native.after(this.$element);\n        // 根据 select 的 size 属性设置高度\n        this.size = parseInt(this.$native.attr('size') || '0');\n        if (this.size <= 0) {\n            this.size = this.$items.length;\n            if (this.size > 8) {\n                this.size = 8;\n            }\n        }\n        // 点击选项时关闭下拉菜单\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.$items.on('click', function () {\n            if (that.state === 'closing') {\n                return;\n            }\n            const $item = $(this);\n            const index = $item.index();\n            const data = itemsData[index];\n            if (data.disabled) {\n                return;\n            }\n            that.$selected.text(data.text);\n            that.$native.val(data.value);\n            that.$items.removeAttr('selected');\n            $item.attr('selected', '');\n            that.selectedIndex = data.index;\n            that.selectedValue = data.value;\n            that.selectedText = data.text;\n            that.$native.trigger('change');\n            that.close();\n        });\n        // 点击 $element 时打开下拉菜单\n        this.$element.on('click', (event) => {\n            const $target = $(event.target);\n            // 在菜单上点击时不打开\n            if ($target.is('.mdui-select-menu') ||\n                $target.is('.mdui-select-menu-item')) {\n                return;\n            }\n            this.toggle();\n        });\n    }\n    /**\n     * 动画结束的回调\n     */\n    transitionEnd() {\n        this.$element.removeClass('mdui-select-closing');\n        if (this.state === 'opening') {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n            this.$menu.css('overflow-y', 'auto');\n        }\n        if (this.state === 'closing') {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            // 恢复样式\n            this.$element.innerWidth('');\n            this.$menu.css({\n                'margin-top': '',\n                height: '',\n                width: '',\n            });\n        }\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'select', this.$native, this);\n    }\n    /**\n     * 切换下拉菜单的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 打开下拉菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.readjustMenu();\n        this.$element.addClass('mdui-select-open');\n        this.$menu.transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 关闭下拉菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        this.$menu.css('overflow-y', '');\n        this.$element\n            .removeClass('mdui-select-open')\n            .addClass('mdui-select-closing');\n        this.$menu.transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 获取当前菜单的状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Select = Select;\n\nconst customAttr$4 = 'mdui-select';\n$(() => {\n    mdui.mutation(`[${customAttr$4}]`, function () {\n        new mdui.Select(this, parseOptions(this, customAttr$4));\n    });\n});\n\n$(() => {\n    // 滚动时隐藏应用栏\n    mdui.mutation('.mdui-appbar-scroll-hide', function () {\n        new mdui.Headroom(this);\n    });\n    // 滚动时只隐藏应用栏中的工具栏\n    mdui.mutation('.mdui-appbar-scroll-toolbar-hide', function () {\n        new mdui.Headroom(this, {\n            pinnedClass: 'mdui-headroom-pinned-toolbar',\n            unpinnedClass: 'mdui-headroom-unpinned-toolbar',\n        });\n    });\n});\n\nconst DEFAULT_OPTIONS$4 = {\n    trigger: 'click',\n    loop: false,\n};\nclass Tab {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$4);\n        /**\n         * 当前激活的 tab 的索引号。为 -1 时表示没有激活的选项卡，或不存在选项卡\n         */\n        this.activeIndex = -1;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.$tabs = this.$element.children('a');\n        this.$indicator = $('<div class=\"mdui-tab-indicator\"></div>').appendTo(this.$element);\n        // 根据 url hash 获取默认激活的选项卡\n        const hash = window.location.hash;\n        if (hash) {\n            this.$tabs.each((index, tab) => {\n                if ($(tab).attr('href') === hash) {\n                    this.activeIndex = index;\n                    return false;\n                }\n                return true;\n            });\n        }\n        // 含 .mdui-tab-active 的元素默认激活\n        if (this.activeIndex === -1) {\n            this.$tabs.each((index, tab) => {\n                if ($(tab).hasClass('mdui-tab-active')) {\n                    this.activeIndex = index;\n                    return false;\n                }\n                return true;\n            });\n        }\n        // 存在选项卡时，默认激活第一个选项卡\n        if (this.$tabs.length && this.activeIndex === -1) {\n            this.activeIndex = 0;\n        }\n        // 设置激活状态选项卡\n        this.setActive();\n        // 监听窗口大小变化事件，调整指示器位置\n        $window.on('resize', $.throttle(() => this.setIndicatorPosition(), 100));\n        // 监听点击选项卡事件\n        this.$tabs.each((_, tab) => {\n            this.bindTabEvent(tab);\n        });\n    }\n    /**\n     * 指定选项卡是否已禁用\n     * @param $tab\n     */\n    isDisabled($tab) {\n        return $tab.attr('disabled') !== undefined;\n    }\n    /**\n     * 绑定在 Tab 上点击或悬浮的事件\n     * @param tab\n     */\n    bindTabEvent(tab) {\n        const $tab = $(tab);\n        // 点击或鼠标移入触发的事件\n        const clickEvent = () => {\n            // 禁用状态的选项卡无法选中\n            if (this.isDisabled($tab)) {\n                return false;\n            }\n            this.activeIndex = this.$tabs.index(tab);\n            this.setActive();\n        };\n        // 无论 trigger 是 click 还是 hover，都会响应 click 事件\n        $tab.on('click', clickEvent);\n        // trigger 为 hover 时，额外响应 mouseenter 事件\n        if (this.options.trigger === 'hover') {\n            $tab.on('mouseenter', clickEvent);\n        }\n        // 阻止链接的默认点击动作\n        $tab.on('click', () => {\n            if (($tab.attr('href') || '').indexOf('#') === 0) {\n                return false;\n            }\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     * @param $element\n     * @param parameters\n     */\n    triggerEvent(name, $element, parameters = {}) {\n        componentEvent(name, 'tab', $element, this, parameters);\n    }\n    /**\n     * 设置激活状态的选项卡\n     */\n    setActive() {\n        this.$tabs.each((index, tab) => {\n            const $tab = $(tab);\n            const targetId = $tab.attr('href') || '';\n            // 设置选项卡激活状态\n            if (index === this.activeIndex && !this.isDisabled($tab)) {\n                if (!$tab.hasClass('mdui-tab-active')) {\n                    this.triggerEvent('change', this.$element, {\n                        index: this.activeIndex,\n                        id: targetId.substr(1),\n                    });\n                    this.triggerEvent('show', $tab);\n                    $tab.addClass('mdui-tab-active');\n                }\n                $(targetId).show();\n                this.setIndicatorPosition();\n            }\n            else {\n                $tab.removeClass('mdui-tab-active');\n                $(targetId).hide();\n            }\n        });\n    }\n    /**\n     * 设置选项卡指示器的位置\n     */\n    setIndicatorPosition() {\n        // 选项卡数量为 0 时，不显示指示器\n        if (this.activeIndex === -1) {\n            this.$indicator.css({\n                left: 0,\n                width: 0,\n            });\n            return;\n        }\n        const $activeTab = this.$tabs.eq(this.activeIndex);\n        if (this.isDisabled($activeTab)) {\n            return;\n        }\n        const activeTabOffset = $activeTab.offset();\n        this.$indicator.css({\n            left: `${activeTabOffset.left +\n                this.$element[0].scrollLeft -\n                this.$element[0].getBoundingClientRect().left}px`,\n            width: `${$activeTab.innerWidth()}px`,\n        });\n    }\n    /**\n     * 切换到下一个选项卡\n     */\n    next() {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (this.$tabs.length > this.activeIndex + 1) {\n            this.activeIndex++;\n        }\n        else if (this.options.loop) {\n            this.activeIndex = 0;\n        }\n        this.setActive();\n    }\n    /**\n     * 切换到上一个选项卡\n     */\n    prev() {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (this.activeIndex > 0) {\n            this.activeIndex--;\n        }\n        else if (this.options.loop) {\n            this.activeIndex = this.$tabs.length - 1;\n        }\n        this.setActive();\n    }\n    /**\n     * 显示指定索引号、或指定id的选项卡\n     * @param index 索引号、或id\n     */\n    show(index) {\n        if (this.activeIndex === -1) {\n            return;\n        }\n        if (isNumber(index)) {\n            this.activeIndex = index;\n        }\n        else {\n            this.$tabs.each((i, tab) => {\n                if (tab.id === index) {\n                    this.activeIndex === i;\n                    return false;\n                }\n            });\n        }\n        this.setActive();\n    }\n    /**\n     * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n     * 在添加或删除选项卡时，需要调用该方法\n     */\n    handleUpdate() {\n        const $oldTabs = this.$tabs; // 旧的 tabs JQ对象\n        const $newTabs = this.$element.children('a'); // 新的 tabs JQ对象\n        const oldTabsElement = $oldTabs.get(); // 旧的 tabs 元素数组\n        const newTabsElement = $newTabs.get(); // 新的 tabs 元素数组\n        if (!$newTabs.length) {\n            this.activeIndex = -1;\n            this.$tabs = $newTabs;\n            this.setIndicatorPosition();\n            return;\n        }\n        // 重新遍历选项卡，找出新增的选项卡\n        $newTabs.each((index, tab) => {\n            // 有新增的选项卡\n            if (oldTabsElement.indexOf(tab) < 0) {\n                this.bindTabEvent(tab);\n                if (this.activeIndex === -1) {\n                    this.activeIndex = 0;\n                }\n                else if (index <= this.activeIndex) {\n                    this.activeIndex++;\n                }\n            }\n        });\n        // 找出被移除的选项卡\n        $oldTabs.each((index, tab) => {\n            // 有被移除的选项卡\n            if (newTabsElement.indexOf(tab) < 0) {\n                if (index < this.activeIndex) {\n                    this.activeIndex--;\n                }\n                else if (index === this.activeIndex) {\n                    this.activeIndex = 0;\n                }\n            }\n        });\n        this.$tabs = $newTabs;\n        this.setActive();\n    }\n}\nmdui.Tab = Tab;\n\nconst customAttr$5 = 'mdui-tab';\n$(() => {\n    mdui.mutation(`[${customAttr$5}]`, function () {\n        new mdui.Tab(this, parseOptions(this, customAttr$5));\n    });\n});\n\n/**\n * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n */\nconst DEFAULT_OPTIONS$5 = {\n    overlay: false,\n    swipe: false,\n};\nclass Drawer {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$5);\n        /**\n         * 当前是否显示着遮罩层\n         */\n        this.overlay = false;\n        this.$element = $(selector).first();\n        extend(this.options, options);\n        this.position = this.$element.hasClass('mdui-drawer-right')\n            ? 'right'\n            : 'left';\n        if (this.$element.hasClass('mdui-drawer-close')) {\n            this.state = 'closed';\n        }\n        else if (this.$element.hasClass('mdui-drawer-open')) {\n            this.state = 'opened';\n        }\n        else if (this.isDesktop()) {\n            this.state = 'opened';\n        }\n        else {\n            this.state = 'closed';\n        }\n        // 浏览器窗口大小调整时\n        $window.on('resize', $.throttle(() => {\n            if (this.isDesktop()) {\n                // 由手机平板切换到桌面时\n                // 如果显示着遮罩，则隐藏遮罩\n                if (this.overlay && !this.options.overlay) {\n                    $.hideOverlay();\n                    this.overlay = false;\n                    $.unlockScreen();\n                }\n                // 没有强制关闭，则状态为打开状态\n                if (!this.$element.hasClass('mdui-drawer-close')) {\n                    this.state = 'opened';\n                }\n            }\n            else if (!this.overlay && this.state === 'opened') {\n                // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n                if (this.$element.hasClass('mdui-drawer-open')) {\n                    $.showOverlay();\n                    this.overlay = true;\n                    $.lockScreen();\n                    $('.mdui-overlay').one('click', () => this.close());\n                }\n                else {\n                    this.state = 'closed';\n                }\n            }\n        }, 100));\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-drawer-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n        this.swipeSupport();\n    }\n    /**\n     * 是否是桌面设备\n     */\n    isDesktop() {\n        return $window.width() >= 1024;\n    }\n    /**\n     * 滑动手势支持\n     */\n    swipeSupport() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 抽屉栏滑动手势控制\n        let openNavEventHandler;\n        let touchStartX;\n        let touchStartY;\n        let swipeStartX;\n        let swiping = null;\n        let maybeSwiping = false;\n        const $body = $('body');\n        // 手势触发的范围\n        const swipeAreaWidth = 24;\n        function setPosition(translateX) {\n            const rtlTranslateMultiplier = that.position === 'right' ? -1 : 1;\n            const transformCSS = `translate(${-1 * rtlTranslateMultiplier * translateX}px, 0) !important;`;\n            const transitionCSS = 'initial !important;';\n            that.$element.css('cssText', `transform: ${transformCSS}; transition: ${transitionCSS};`);\n        }\n        function cleanPosition() {\n            that.$element[0].style.transform = '';\n            that.$element[0].style.webkitTransform = '';\n            that.$element[0].style.transition = '';\n            that.$element[0].style.webkitTransition = '';\n        }\n        function getMaxTranslateX() {\n            return that.$element.width() + 10;\n        }\n        function getTranslateX(currentX) {\n            return Math.min(Math.max(swiping === 'closing'\n                ? swipeStartX - currentX\n                : getMaxTranslateX() + swipeStartX - currentX, 0), getMaxTranslateX());\n        }\n        function onBodyTouchEnd(event) {\n            if (swiping) {\n                let touchX = event.changedTouches[0].pageX;\n                if (that.position === 'right') {\n                    touchX = $body.width() - touchX;\n                }\n                const translateRatio = getTranslateX(touchX) / getMaxTranslateX();\n                maybeSwiping = false;\n                const swipingState = swiping;\n                swiping = null;\n                if (swipingState === 'opening') {\n                    if (translateRatio < 0.92) {\n                        cleanPosition();\n                        that.open();\n                    }\n                    else {\n                        cleanPosition();\n                    }\n                }\n                else {\n                    if (translateRatio > 0.08) {\n                        cleanPosition();\n                        that.close();\n                    }\n                    else {\n                        cleanPosition();\n                    }\n                }\n                $.unlockScreen();\n            }\n            else {\n                maybeSwiping = false;\n            }\n            $body.off({\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                touchmove: onBodyTouchMove,\n                touchend: onBodyTouchEnd,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                touchcancel: onBodyTouchMove,\n            });\n        }\n        function onBodyTouchMove(event) {\n            let touchX = event.touches[0].pageX;\n            if (that.position === 'right') {\n                touchX = $body.width() - touchX;\n            }\n            const touchY = event.touches[0].pageY;\n            if (swiping) {\n                setPosition(getTranslateX(touchX));\n            }\n            else if (maybeSwiping) {\n                const dXAbs = Math.abs(touchX - touchStartX);\n                const dYAbs = Math.abs(touchY - touchStartY);\n                const threshold = 8;\n                if (dXAbs > threshold && dYAbs <= threshold) {\n                    swipeStartX = touchX;\n                    swiping = that.state === 'opened' ? 'closing' : 'opening';\n                    $.lockScreen();\n                    setPosition(getTranslateX(touchX));\n                }\n                else if (dXAbs <= threshold && dYAbs > threshold) {\n                    onBodyTouchEnd();\n                }\n            }\n        }\n        function onBodyTouchStart(event) {\n            touchStartX = event.touches[0].pageX;\n            if (that.position === 'right') {\n                touchStartX = $body.width() - touchStartX;\n            }\n            touchStartY = event.touches[0].pageY;\n            if (that.state !== 'opened') {\n                if (touchStartX > swipeAreaWidth ||\n                    openNavEventHandler !== onBodyTouchStart) {\n                    return;\n                }\n            }\n            maybeSwiping = true;\n            $body.on({\n                touchmove: onBodyTouchMove,\n                touchend: onBodyTouchEnd,\n                touchcancel: onBodyTouchMove,\n            });\n        }\n        function enableSwipeHandling() {\n            if (!openNavEventHandler) {\n                $body.on('touchstart', onBodyTouchStart);\n                openNavEventHandler = onBodyTouchStart;\n            }\n        }\n        if (this.options.swipe) {\n            enableSwipeHandling();\n        }\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'drawer', this.$element, this);\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-drawer-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n        }\n    }\n    /**\n     * 是否处于打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开抽屉栏\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        if (!this.options.overlay) {\n            $('body').addClass(`mdui-drawer-body-${this.position}`);\n        }\n        this.$element\n            .removeClass('mdui-drawer-close')\n            .addClass('mdui-drawer-open')\n            .transitionEnd(() => this.transitionEnd());\n        if (!this.isDesktop() || this.options.overlay) {\n            this.overlay = true;\n            $.showOverlay().one('click', () => this.close());\n            $.lockScreen();\n        }\n    }\n    /**\n     * 关闭抽屉栏\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        if (!this.options.overlay) {\n            $('body').removeClass(`mdui-drawer-body-${this.position}`);\n        }\n        this.$element\n            .addClass('mdui-drawer-close')\n            .removeClass('mdui-drawer-open')\n            .transitionEnd(() => this.transitionEnd());\n        if (this.overlay) {\n            $.hideOverlay();\n            this.overlay = false;\n            $.unlockScreen();\n        }\n    }\n    /**\n     * 切换抽屉栏打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 返回当前抽屉栏的状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Drawer = Drawer;\n\nconst customAttr$6 = 'mdui-drawer';\n$(() => {\n    mdui.mutation(`[${customAttr$6}]`, function () {\n        const $element = $(this);\n        const options = parseOptions(this, customAttr$6);\n        const selector = options.target;\n        // @ts-ignore\n        delete options.target;\n        const $drawer = $(selector).first();\n        const instance = new mdui.Drawer($drawer, options);\n        $element.on('click', () => instance.toggle());\n    });\n});\n\nconst container = {};\nfunction queue(name, func) {\n    if (isUndefined(container[name])) {\n        container[name] = [];\n    }\n    if (isUndefined(func)) {\n        return container[name];\n    }\n    container[name].push(func);\n}\n/**\n * 从队列中移除第一个函数，并执行该函数\n * @param name 队列满\n */\nfunction dequeue(name) {\n    if (isUndefined(container[name])) {\n        return;\n    }\n    if (!container[name].length) {\n        return;\n    }\n    const func = container[name].shift();\n    func();\n}\n\nconst DEFAULT_OPTIONS$6 = {\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    destroyOnClosed: false,\n};\n/**\n * 当前显示的对话框实例\n */\nlet currentInst = null;\n/**\n * 队列名\n */\nconst queueName = '_mdui_dialog';\n/**\n * 窗口是否已锁定\n */\nlet isLockScreen = false;\n/**\n * 遮罩层元素\n */\nlet $overlay;\nclass Dialog {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$6);\n        /**\n         * 当前 dialog 的状态\n         */\n        this.state = 'closed';\n        /**\n         * dialog 元素是否是动态添加的\n         */\n        this.append = false;\n        this.$element = $(selector).first();\n        // 如果对话框元素没有在当前文档中，则需要添加\n        if (!contains(document.body, this.$element[0])) {\n            this.append = true;\n            $('body').append(this.$element);\n        }\n        extend(this.options, options);\n        // 绑定取消按钮事件\n        this.$element.find('[mdui-dialog-cancel]').each((_, cancel) => {\n            $(cancel).on('click', () => {\n                this.triggerEvent('cancel');\n                if (this.options.closeOnCancel) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定确认按钮事件\n        this.$element.find('[mdui-dialog-confirm]').each((_, confirm) => {\n            $(confirm).on('click', () => {\n                this.triggerEvent('confirm');\n                if (this.options.closeOnConfirm) {\n                    this.close();\n                }\n            });\n        });\n        // 绑定关闭按钮事件\n        this.$element.find('[mdui-dialog-close]').each((_, close) => {\n            $(close).on('click', () => this.close());\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'dialog', this.$element, this);\n    }\n    /**\n     * 窗口宽度变化，或对话框内容变化时，调整对话框位置和对话框内的滚动条\n     */\n    readjust() {\n        if (!currentInst) {\n            return;\n        }\n        const $element = currentInst.$element;\n        const $title = $element.children('.mdui-dialog-title');\n        const $content = $element.children('.mdui-dialog-content');\n        const $actions = $element.children('.mdui-dialog-actions');\n        // 调整 dialog 的 top 和 height 值\n        $element.height('');\n        $content.height('');\n        const elementHeight = $element.height();\n        $element.css({\n            top: `${($window.height() - elementHeight) / 2}px`,\n            height: `${elementHeight}px`,\n        });\n        // 调整 mdui-dialog-content 的高度\n        $content.innerHeight(elementHeight -\n            ($title.innerHeight() || 0) -\n            ($actions.innerHeight() || 0));\n    }\n    /**\n     * hashchange 事件触发时关闭对话框\n     */\n    hashchangeEvent() {\n        if (window.location.hash.substring(1).indexOf('mdui-dialog') < 0) {\n            currentInst.close(true);\n        }\n    }\n    /**\n     * 点击遮罩层关闭对话框\n     * @param event\n     */\n    overlayClick(event) {\n        if ($(event.target).hasClass('mdui-overlay') &&\n            currentInst) {\n            currentInst.close();\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-dialog-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            this.$element.hide();\n            // 所有对话框都关闭，且当前没有打开的对话框时，解锁屏幕\n            if (!queue(queueName).length && !currentInst && isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n            $window.off('resize', $.throttle(this.readjust, 100));\n            if (this.options.destroyOnClosed) {\n                this.destroy();\n            }\n        }\n    }\n    /**\n     * 打开指定对话框\n     */\n    doOpen() {\n        currentInst = this;\n        if (!isLockScreen) {\n            $.lockScreen();\n            isLockScreen = true;\n        }\n        this.$element.show();\n        this.readjust();\n        $window.on('resize', $.throttle(this.readjust, 100));\n        // 打开消息框\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-dialog-open')\n            .transitionEnd(() => this.transitionEnd());\n        // 不存在遮罩层元素时，添加遮罩层\n        if (!$overlay) {\n            $overlay = $.showOverlay(5100);\n        }\n        // 点击遮罩层时是否关闭对话框\n        if (this.options.modal) {\n            $overlay.off('click', this.overlayClick);\n        }\n        else {\n            $overlay.on('click', this.overlayClick);\n        }\n        // 是否显示遮罩层，不显示时，把遮罩层背景透明\n        $overlay.css('opacity', this.options.overlay ? '' : 0);\n        if (this.options.history) {\n            // 如果 hash 中原来就有 mdui-dialog，先删除，避免后退历史纪录后仍然有 mdui-dialog 导致无法关闭\n            // 包括 mdui-dialog 和 &mdui-dialog 和 ?mdui-dialog\n            let hash = window.location.hash.substring(1);\n            if (hash.indexOf('mdui-dialog') > -1) {\n                hash = hash.replace(/[&?]?mdui-dialog/g, '');\n            }\n            // 后退按钮关闭对话框\n            if (hash) {\n                window.location.hash = `${hash}${hash.indexOf('?') > -1 ? '&' : '?'}mdui-dialog`;\n            }\n            else {\n                window.location.hash = 'mdui-dialog';\n            }\n            $window.on('hashchange', this.hashchangeEvent);\n        }\n    }\n    /**\n     * 当前对话框是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 打开对话框\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n        if ((currentInst &&\n            (currentInst.state === 'opening' || currentInst.state === 'opened')) ||\n            queue(queueName).length) {\n            queue(queueName, () => this.doOpen());\n            return;\n        }\n        this.doOpen();\n    }\n    /**\n     * 关闭对话框\n     */\n    close(historyBack = false) {\n        // historyBack 是否需要后退历史纪录，默认为 `false`。该参数仅内部使用\n        // 为 `false` 时是通过 js 关闭，需要后退一个历史记录\n        // 为 `true` 时是通过后退按钮关闭，不需要后退历史记录\n        // setTimeout 的作用是：\n        // 当同时关闭一个对话框，并打开另一个对话框时，使打开对话框的操作先执行，以使需要打开的对话框先加入队列\n        setTimeout(() => {\n            if (!this.isOpen()) {\n                return;\n            }\n            currentInst = null;\n            this.state = 'closing';\n            this.triggerEvent('close');\n            // 所有对话框都关闭，且当前没有打开的对话框时，隐藏遮罩\n            if (!queue(queueName).length && $overlay) {\n                $.hideOverlay();\n                $overlay = null;\n                // 若仍存在遮罩，恢复遮罩的 z-index\n                $('.mdui-overlay').css('z-index', 2000);\n            }\n            this.$element\n                .removeClass('mdui-dialog-open')\n                .transitionEnd(() => this.transitionEnd());\n            if (this.options.history && !queue(queueName).length) {\n                if (!historyBack) {\n                    window.history.back();\n                }\n                $window.off('hashchange', this.hashchangeEvent);\n            }\n            // 关闭旧对话框，打开新对话框。\n            // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n            setTimeout(() => {\n                dequeue(queueName);\n            }, 100);\n        });\n    }\n    /**\n     * 切换对话框打开/关闭状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取对话框状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * 销毁对话框\n     */\n    destroy() {\n        if (this.append) {\n            this.$element.remove();\n        }\n        if (!queue(queueName).length && !currentInst) {\n            if ($overlay) {\n                $.hideOverlay();\n                $overlay = null;\n            }\n            if (isLockScreen) {\n                $.unlockScreen();\n                isLockScreen = false;\n            }\n        }\n    }\n    /**\n     * 对话框内容变化时，需要调用该方法来调整对话框位置和滚动条高度\n     */\n    handleUpdate() {\n        this.readjust();\n    }\n}\n\n// esc 按下时关闭对话框\n$document.on('keydown', (event) => {\n    if (currentInst &&\n        currentInst.options.closeOnEsc &&\n        currentInst.state === 'opened' &&\n        event.keyCode === 27) {\n        currentInst.close();\n    }\n});\nmdui.Dialog = Dialog;\n\nconst customAttr$7 = 'mdui-dialog';\nconst dataName$1 = '_mdui_dialog';\n$(() => {\n    $document.on('click', `[${customAttr$7}]`, function () {\n        const options = parseOptions(this, customAttr$7);\n        const selector = options.target;\n        // @ts-ignore\n        delete options.target;\n        const $dialog = $(selector).first();\n        let instance = $dialog.data(dataName$1);\n        if (!instance) {\n            instance = new mdui.Dialog($dialog, options);\n            $dialog.data(dataName$1, instance);\n        }\n        instance.open();\n    });\n});\n\nconst DEFAULT_BUTTON = {\n    text: '',\n    bold: false,\n    close: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n};\nconst DEFAULT_OPTIONS$7 = {\n    title: '',\n    content: '',\n    buttons: [],\n    stackedButtons: false,\n    cssClass: '',\n    history: true,\n    overlay: true,\n    modal: false,\n    closeOnEsc: true,\n    destroyOnClosed: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\nmdui.dialog = function (options) {\n    var _a, _b;\n    // 合并配置参数\n    options = extend({}, DEFAULT_OPTIONS$7, options);\n    each(options.buttons, (i, button) => {\n        options.buttons[i] = extend({}, DEFAULT_BUTTON, button);\n    });\n    // 按钮的 HTML\n    let buttonsHTML = '';\n    if ((_a = options.buttons) === null || _a === void 0 ? void 0 : _a.length) {\n        buttonsHTML = `<div class=\"mdui-dialog-actions${options.stackedButtons ? ' mdui-dialog-actions-stacked' : ''}\">`;\n        each(options.buttons, (_, button) => {\n            buttonsHTML +=\n                '<a href=\"javascript:void(0)\" ' +\n                    `class=\"mdui-btn mdui-ripple mdui-text-color-primary ${button.bold ? 'mdui-btn-bold' : ''}\">${button.text}</a>`;\n        });\n        buttonsHTML += '</div>';\n    }\n    // Dialog 的 HTML\n    const HTML = `<div class=\"mdui-dialog ${options.cssClass}\">` +\n        (options.title\n            ? `<div class=\"mdui-dialog-title\">${options.title}</div>`\n            : '') +\n        (options.content\n            ? `<div class=\"mdui-dialog-content\">${options.content}</div>`\n            : '') +\n        buttonsHTML +\n        '</div>';\n    // 实例化 Dialog\n    const instance = new mdui.Dialog(HTML, {\n        history: options.history,\n        overlay: options.overlay,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        destroyOnClosed: options.destroyOnClosed,\n    });\n    // 绑定按钮事件\n    if ((_b = options.buttons) === null || _b === void 0 ? void 0 : _b.length) {\n        instance.$element\n            .find('.mdui-dialog-actions .mdui-btn')\n            .each((index, button) => {\n            $(button).on('click', () => {\n                options.buttons[index].onClick(instance);\n                if (options.buttons[index].close) {\n                    instance.close();\n                }\n            });\n        });\n    }\n    // 绑定打开关闭事件\n    instance.$element\n        .on('open.mdui.dialog', () => {\n        options.onOpen(instance);\n    })\n        .on('opened.mdui.dialog', () => {\n        options.onOpened(instance);\n    })\n        .on('close.mdui.dialog', () => {\n        options.onClose(instance);\n    })\n        .on('closed.mdui.dialog', () => {\n        options.onClosed(instance);\n    });\n    instance.open();\n    return instance;\n};\n\nconst DEFAULT_OPTIONS$8 = {\n    confirmText: 'ok',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnConfirm: true,\n};\nmdui.alert = function (text, title, onConfirm, options) {\n    if (isFunction(title)) {\n        options = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$8, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-alert',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n\nconst DEFAULT_OPTIONS$9 = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n};\nmdui.confirm = function (text, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$9, options);\n    return mdui.dialog({\n        title: title,\n        content: text,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancel,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirm,\n            },\n        ],\n        cssClass: 'mdui-dialog-confirm',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n    });\n};\n\nconst DEFAULT_OPTIONS$a = {\n    confirmText: 'ok',\n    cancelText: 'cancel',\n    history: true,\n    modal: false,\n    closeOnEsc: true,\n    closeOnCancel: true,\n    closeOnConfirm: true,\n    type: 'text',\n    maxlength: 0,\n    defaultValue: '',\n    confirmOnEnter: false,\n};\nmdui.prompt = function (label, title, onConfirm, onCancel, options) {\n    if (isFunction(title)) {\n        options = onCancel;\n        onCancel = onConfirm;\n        onConfirm = title;\n        title = '';\n    }\n    if (isUndefined(onConfirm)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onConfirm = () => { };\n    }\n    if (isUndefined(onCancel)) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        onCancel = () => { };\n    }\n    if (isUndefined(options)) {\n        options = {};\n    }\n    options = extend({}, DEFAULT_OPTIONS$a, options);\n    const content = '<div class=\"mdui-textfield\">' +\n        (label ? `<label class=\"mdui-textfield-label\">${label}</label>` : '') +\n        (options.type === 'text'\n            ? `<input class=\"mdui-textfield-input\" type=\"text\" value=\"${options.defaultValue}\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}/>`\n            : '') +\n        (options.type === 'textarea'\n            ? `<textarea class=\"mdui-textfield-input\" ${options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : ''}>${options.defaultValue}</textarea>`\n            : '') +\n        '</div>';\n    const onCancelClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onCancel(value, dialog);\n    };\n    const onConfirmClick = (dialog) => {\n        const value = dialog.$element.find('.mdui-textfield-input').val();\n        onConfirm(value, dialog);\n    };\n    return mdui.dialog({\n        title,\n        content,\n        buttons: [\n            {\n                text: options.cancelText,\n                bold: false,\n                close: options.closeOnCancel,\n                onClick: onCancelClick,\n            },\n            {\n                text: options.confirmText,\n                bold: false,\n                close: options.closeOnConfirm,\n                onClick: onConfirmClick,\n            },\n        ],\n        cssClass: 'mdui-dialog-prompt',\n        history: options.history,\n        modal: options.modal,\n        closeOnEsc: options.closeOnEsc,\n        onOpen: (dialog) => {\n            // 初始化输入框\n            const $input = dialog.$element.find('.mdui-textfield-input');\n            mdui.updateTextFields($input);\n            // 聚焦到输入框\n            $input[0].focus();\n            // 捕捉文本框回车键，在单行文本框的情况下触发回调\n            if (options.type !== 'textarea' && options.confirmOnEnter === true) {\n                $input.on('keydown', (event) => {\n                    if (event.keyCode === 13) {\n                        const value = dialog.$element.find('.mdui-textfield-input').val();\n                        onConfirm(value, dialog);\n                        if (options.closeOnConfirm) {\n                            dialog.close();\n                        }\n                        return false;\n                    }\n                    return;\n                });\n            }\n            // 如果是多行输入框，监听输入框的 input 事件，更新对话框高度\n            if (options.type === 'textarea') {\n                $input.on('input', () => dialog.handleUpdate());\n            }\n            // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新对话框高度\n            if (options.maxlength) {\n                dialog.handleUpdate();\n            }\n        },\n    });\n};\n\nconst DEFAULT_OPTIONS$b = {\n    position: 'auto',\n    delay: 0,\n    content: '',\n};\nclass Tooltip {\n    constructor(selector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$b);\n        /**\n         * 当前 tooltip 的状态\n         */\n        this.state = 'closed';\n        /**\n         * setTimeout 的返回值\n         */\n        this.timeoutId = null;\n        this.$target = $(selector).first();\n        extend(this.options, options);\n        // 创建 Tooltip HTML\n        this.$element = $(`<div class=\"mdui-tooltip\" id=\"${$.guid()}\">${this.options.content}</div>`).appendTo(document.body);\n        // 绑定事件。元素处于 disabled 状态时无法触发鼠标事件，为了统一，把 touch 事件也禁用\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.$target\n            .on('touchstart mouseenter', function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            if (!isAllow(event)) {\n                return;\n            }\n            register(event);\n            that.open();\n        })\n            .on('touchend mouseleave', function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            if (!isAllow(event)) {\n                return;\n            }\n            that.close();\n        })\n            .on(unlockEvent, function (event) {\n            if (that.isDisabled(this)) {\n                return;\n            }\n            register(event);\n        });\n    }\n    /**\n     * 元素是否已禁用\n     * @param element\n     */\n    isDisabled(element) {\n        return (element.disabled ||\n            $(element).attr('disabled') !== undefined);\n    }\n    /**\n     * 是否是桌面设备\n     */\n    isDesktop() {\n        return $window.width() > 1024;\n    }\n    /**\n     * 设置 Tooltip 的位置\n     */\n    setPosition() {\n        let marginLeft;\n        let marginTop;\n        // 触发的元素\n        const targetProps = this.$target[0].getBoundingClientRect();\n        // 触发的元素和 Tooltip 之间的距离\n        const targetMargin = this.isDesktop() ? 14 : 24;\n        // Tooltip 的宽度和高度\n        const tooltipWidth = this.$element[0].offsetWidth;\n        const tooltipHeight = this.$element[0].offsetHeight;\n        // Tooltip 的方向\n        let position = this.options.position;\n        // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n        if (position === 'auto') {\n            if (targetProps.top +\n                targetProps.height +\n                targetMargin +\n                tooltipHeight +\n                2 <\n                $window.height()) {\n                position = 'bottom';\n            }\n            else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n                position = 'top';\n            }\n            else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n                position = 'left';\n            }\n            else if (targetProps.width + targetMargin + tooltipWidth + 2 <\n                $window.width() - targetProps.left) {\n                position = 'right';\n            }\n            else {\n                position = 'bottom';\n            }\n        }\n        // 设置位置\n        switch (position) {\n            case 'bottom':\n                marginLeft = -1 * (tooltipWidth / 2);\n                marginTop = targetProps.height / 2 + targetMargin;\n                this.$element.transformOrigin('top center');\n                break;\n            case 'top':\n                marginLeft = -1 * (tooltipWidth / 2);\n                marginTop =\n                    -1 * (tooltipHeight + targetProps.height / 2 + targetMargin);\n                this.$element.transformOrigin('bottom center');\n                break;\n            case 'left':\n                marginLeft = -1 * (tooltipWidth + targetProps.width / 2 + targetMargin);\n                marginTop = -1 * (tooltipHeight / 2);\n                this.$element.transformOrigin('center right');\n                break;\n            case 'right':\n                marginLeft = targetProps.width / 2 + targetMargin;\n                marginTop = -1 * (tooltipHeight / 2);\n                this.$element.transformOrigin('center left');\n                break;\n        }\n        const targetOffset = this.$target.offset();\n        this.$element.css({\n            top: `${targetOffset.top + targetProps.height / 2}px`,\n            left: `${targetOffset.left + targetProps.width / 2}px`,\n            'margin-left': `${marginLeft}px`,\n            'margin-top': `${marginTop}px`,\n        });\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'tooltip', this.$target, this);\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        if (this.$element.hasClass('mdui-tooltip-open')) {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        else {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n        }\n    }\n    /**\n     * 当前 tooltip 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 执行打开 tooltip\n     */\n    doOpen() {\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.$element\n            .addClass('mdui-tooltip-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 打开 Tooltip\n     * @param options 允许每次打开时设置不同的参数\n     */\n    open(options) {\n        if (this.isOpen()) {\n            return;\n        }\n        const oldOptions = extend({}, this.options);\n        if (options) {\n            extend(this.options, options);\n        }\n        // tooltip 的内容有更新\n        if (oldOptions.content !== this.options.content) {\n            this.$element.html(this.options.content);\n        }\n        this.setPosition();\n        if (this.options.delay) {\n            this.timeoutId = setTimeout(() => this.doOpen(), this.options.delay);\n        }\n        else {\n            this.timeoutId = null;\n            this.doOpen();\n        }\n    }\n    /**\n     * 关闭 Tooltip\n     */\n    close() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        this.$element\n            .removeClass('mdui-tooltip-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 切换 Tooltip 的打开状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 获取 Tooltip 状态。共包含四种状态：`opening`、`opened`、`closing`、`closed`\n     */\n    getState() {\n        return this.state;\n    }\n}\nmdui.Tooltip = Tooltip;\n\nconst customAttr$8 = 'mdui-tooltip';\nconst dataName$2 = '_mdui_tooltip';\n$(() => {\n    // mouseenter 不能冒泡，所以这里用 mouseover 代替\n    $document.on('touchstart mouseover', `[${customAttr$8}]`, function () {\n        const $target = $(this);\n        let instance = $target.data(dataName$2);\n        if (!instance) {\n            instance = new mdui.Tooltip(this, parseOptions(this, customAttr$8));\n            $target.data(dataName$2, instance);\n        }\n    });\n});\n\nconst DEFAULT_OPTIONS$c = {\n    message: '',\n    timeout: 4000,\n    position: 'bottom',\n    buttonText: '',\n    buttonColor: '',\n    closeOnButtonClick: true,\n    closeOnOutsideClick: true,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClick: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onButtonClick: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpen: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onOpened: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClose: () => { },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onClosed: () => { },\n};\n/**\n * 当前打开着的 Snackbar\n */\nlet currentInst$1 = null;\n/**\n * 队列名\n */\nconst queueName$1 = '_mdui_snackbar';\nclass Snackbar {\n    constructor(options) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$c);\n        /**\n         * 当前 Snackbar 的状态\n         */\n        this.state = 'closed';\n        /**\n         * setTimeout 的 ID\n         */\n        this.timeoutId = null;\n        extend(this.options, options);\n        // 按钮颜色\n        let buttonColorStyle = '';\n        let buttonColorClass = '';\n        if (this.options.buttonColor.indexOf('#') === 0 ||\n            this.options.buttonColor.indexOf('rgb') === 0) {\n            buttonColorStyle = `style=\"color:${this.options.buttonColor}\"`;\n        }\n        else if (this.options.buttonColor !== '') {\n            buttonColorClass = `mdui-text-color-${this.options.buttonColor}`;\n        }\n        // 添加 HTML\n        this.$element = $('<div class=\"mdui-snackbar\">' +\n            `<div class=\"mdui-snackbar-text\">${this.options.message}</div>` +\n            (this.options.buttonText\n                ? `<a href=\"javascript:void(0)\" class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ${buttonColorClass}\" ${buttonColorStyle}>${this.options.buttonText}</a>`\n                : '') +\n            '</div>').appendTo(document.body);\n        // 设置位置\n        this.setPosition('close');\n        this.$element.reflow().addClass(`mdui-snackbar-${this.options.position}`);\n    }\n    /**\n     * 点击 Snackbar 外面的区域关闭\n     * @param event\n     */\n    closeOnOutsideClick(event) {\n        const $target = $(event.target);\n        if (!$target.hasClass('mdui-snackbar') &&\n            !$target.parents('.mdui-snackbar').length) {\n            currentInst$1.close();\n        }\n    }\n    /**\n     * 设置 Snackbar 的位置\n     * @param state\n     */\n    setPosition(state) {\n        const snackbarHeight = this.$element[0].clientHeight;\n        const position = this.options.position;\n        let translateX;\n        let translateY;\n        // translateX\n        if (position === 'bottom' || position === 'top') {\n            translateX = '-50%';\n        }\n        else {\n            translateX = '0';\n        }\n        // translateY\n        if (state === 'open') {\n            translateY = '0';\n        }\n        else {\n            if (position === 'bottom') {\n                translateY = snackbarHeight;\n            }\n            if (position === 'top') {\n                translateY = -snackbarHeight;\n            }\n            if (position === 'left-top' || position === 'right-top') {\n                translateY = -snackbarHeight - 24;\n            }\n            if (position === 'left-bottom' || position === 'right-bottom') {\n                translateY = snackbarHeight + 24;\n            }\n        }\n        this.$element.transform(`translate(${translateX},${translateY}px`);\n    }\n    /**\n     * 打开 Snackbar\n     */\n    open() {\n        if (this.state === 'opening' || this.state === 'opened') {\n            return;\n        }\n        // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n        if (currentInst$1) {\n            queue(queueName$1, () => this.open());\n            return;\n        }\n        currentInst$1 = this;\n        // 开始打开\n        this.state = 'opening';\n        this.options.onOpen(this);\n        this.setPosition('open');\n        this.$element.transitionEnd(() => {\n            if (this.state !== 'opening') {\n                return;\n            }\n            this.state = 'opened';\n            this.options.onOpened(this);\n            // 有按钮时绑定事件\n            if (this.options.buttonText) {\n                this.$element.find('.mdui-snackbar-action').on('click', () => {\n                    this.options.onButtonClick(this);\n                    if (this.options.closeOnButtonClick) {\n                        this.close();\n                    }\n                });\n            }\n            // 点击 snackbar 的事件\n            this.$element.on('click', (event) => {\n                if (!$(event.target).hasClass('mdui-snackbar-action')) {\n                    this.options.onClick(this);\n                }\n            });\n            // 点击 Snackbar 外面的区域关闭\n            if (this.options.closeOnOutsideClick) {\n                $document.on(startEvent, this.closeOnOutsideClick);\n            }\n            // 超时后自动关闭\n            if (this.options.timeout) {\n                this.timeoutId = setTimeout(() => this.close(), this.options.timeout);\n            }\n        });\n    }\n    /**\n     * 关闭 Snackbar\n     */\n    close() {\n        if (this.state === 'closing' || this.state === 'closed') {\n            return;\n        }\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n        if (this.options.closeOnOutsideClick) {\n            $document.off(startEvent, this.closeOnOutsideClick);\n        }\n        this.state = 'closing';\n        this.options.onClose(this);\n        this.setPosition('close');\n        this.$element.transitionEnd(() => {\n            if (this.state !== 'closing') {\n                return;\n            }\n            currentInst$1 = null;\n            this.state = 'closed';\n            this.options.onClosed(this);\n            this.$element.remove();\n            dequeue(queueName$1);\n        });\n    }\n}\nmdui.snackbar = function (message, options = {}) {\n    if (isString(message)) {\n        options.message = message;\n    }\n    else {\n        options = message;\n    }\n    const instance = new Snackbar(options);\n    instance.open();\n    return instance;\n};\n\n$(() => {\n    // 切换导航项\n    $document.on('click', '.mdui-bottom-nav>a', function () {\n        const $item = $(this);\n        const $bottomNav = $item.parent();\n        $bottomNav.children('a').each((index, item) => {\n            const isThis = $item.is(item);\n            if (isThis) {\n                componentEvent('change', 'bottomNav', $bottomNav[0], undefined, {\n                    index,\n                });\n            }\n            isThis\n                ? $(item).addClass('mdui-bottom-nav-active')\n                : $(item).removeClass('mdui-bottom-nav-active');\n        });\n    });\n    // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n    mdui.mutation('.mdui-bottom-nav-scroll-hide', function () {\n        new mdui.Headroom(this, {\n            pinnedClass: 'mdui-headroom-pinned-down',\n            unpinnedClass: 'mdui-headroom-unpinned-down',\n        });\n    });\n});\n\n/**\n * layer 的 HTML 结构\n * @param index\n */\nfunction layerHTML(index = false) {\n    return (`<div class=\"mdui-spinner-layer ${index ? `mdui-spinner-layer-${index}` : ''}\">` +\n        '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '<div class=\"mdui-spinner-gap-patch\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' +\n        '<div class=\"mdui-spinner-circle\"></div>' +\n        '</div>' +\n        '</div>');\n}\n/**\n * 填充 HTML\n * @param spinner\n */\nfunction fillHTML(spinner) {\n    const $spinner = $(spinner);\n    const layer = $spinner.hasClass('mdui-spinner-colorful')\n        ? layerHTML(1) + layerHTML(2) + layerHTML(3) + layerHTML(4)\n        : layerHTML();\n    $spinner.html(layer);\n}\n$(() => {\n    // 页面加载完后自动填充 HTML 结构\n    mdui.mutation('.mdui-spinner', function () {\n        fillHTML(this);\n    });\n});\nmdui.updateSpinners = function (selector) {\n    const $elements = isUndefined(selector) ? $('.mdui-spinner') : $(selector);\n    $elements.each(function () {\n        fillHTML(this);\n    });\n};\n\nconst DEFAULT_OPTIONS$d = {\n    position: 'auto',\n    align: 'auto',\n    gutter: 16,\n    fixed: false,\n    covered: 'auto',\n    subMenuTrigger: 'hover',\n    subMenuDelay: 200,\n};\nclass Menu {\n    constructor(anchorSelector, menuSelector, options = {}) {\n        /**\n         * 配置参数\n         */\n        this.options = extend({}, DEFAULT_OPTIONS$d);\n        /**\n         * 当前菜单状态\n         */\n        this.state = 'closed';\n        this.$anchor = $(anchorSelector).first();\n        this.$element = $(menuSelector).first();\n        // 触发菜单的元素 和 菜单必须是同级的元素，否则菜单可能不能定位\n        if (!this.$anchor.parent().is(this.$element.parent())) {\n            throw new Error('anchorSelector and menuSelector must be siblings');\n        }\n        extend(this.options, options);\n        // 是否是级联菜单\n        this.isCascade = this.$element.hasClass('mdui-menu-cascade');\n        // covered 参数处理\n        this.isCovered =\n            this.options.covered === 'auto' ? !this.isCascade : this.options.covered;\n        // 点击触发菜单切换\n        this.$anchor.on('click', () => this.toggle());\n        // 点击菜单外面区域关闭菜单\n        $document.on('click touchstart', (event) => {\n            const $target = $(event.target);\n            if (this.isOpen() &&\n                !$target.is(this.$element) &&\n                !contains(this.$element[0], $target[0]) &&\n                !$target.is(this.$anchor) &&\n                !contains(this.$anchor[0], $target[0])) {\n                this.close();\n            }\n        });\n        // 点击不含子菜单的菜单条目关闭菜单\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        $document.on('click', '.mdui-menu-item', function () {\n            const $item = $(this);\n            if (!$item.find('.mdui-menu').length &&\n                $item.attr('disabled') === undefined) {\n                that.close();\n            }\n        });\n        // 绑定点击或鼠标移入含子菜单的条目的事件\n        this.bindSubMenuEvent();\n        // 窗口大小变化时，重新调整菜单位置\n        $window.on('resize', $.throttle(() => this.readjust(), 100));\n    }\n    /**\n     * 是否为打开状态\n     */\n    isOpen() {\n        return this.state === 'opening' || this.state === 'opened';\n    }\n    /**\n     * 触发组件事件\n     * @param name\n     */\n    triggerEvent(name) {\n        componentEvent(name, 'menu', this.$element, this);\n    }\n    /**\n     * 调整主菜单位置\n     */\n    readjust() {\n        let menuLeft;\n        let menuTop;\n        // 菜单位置和方向\n        let position;\n        let align;\n        // window 窗口的宽度和高度\n        const windowHeight = $window.height();\n        const windowWidth = $window.width();\n        // 配置参数\n        const gutter = this.options.gutter;\n        const isCovered = this.isCovered;\n        const isFixed = this.options.fixed;\n        // 动画方向参数\n        let transformOriginX;\n        let transformOriginY;\n        // 菜单的原始宽度和高度\n        const menuWidth = this.$element.width();\n        const menuHeight = this.$element.height();\n        // 触发菜单的元素在窗口中的位置\n        const anchorRect = this.$anchor[0].getBoundingClientRect();\n        const anchorTop = anchorRect.top;\n        const anchorLeft = anchorRect.left;\n        const anchorHeight = anchorRect.height;\n        const anchorWidth = anchorRect.width;\n        const anchorBottom = windowHeight - anchorTop - anchorHeight;\n        const anchorRight = windowWidth - anchorLeft - anchorWidth;\n        // 触发元素相对其拥有定位属性的父元素的位置\n        const anchorOffsetTop = this.$anchor[0].offsetTop;\n        const anchorOffsetLeft = this.$anchor[0].offsetLeft;\n        // 自动判断菜单位置\n        if (this.options.position === 'auto') {\n            if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n                // 判断下方是否放得下菜单\n                position = 'bottom';\n            }\n            else if (anchorTop + (isCovered ? anchorHeight : 0) >\n                menuHeight + gutter) {\n                // 判断上方是否放得下菜单\n                position = 'top';\n            }\n            else {\n                // 上下都放不下，居中显示\n                position = 'center';\n            }\n        }\n        else {\n            position = this.options.position;\n        }\n        // 自动判断菜单对齐方式\n        if (this.options.align === 'auto') {\n            if (anchorRight + anchorWidth > menuWidth + gutter) {\n                // 判断右侧是否放得下菜单\n                align = 'left';\n            }\n            else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n                // 判断左侧是否放得下菜单\n                align = 'right';\n            }\n            else {\n                // 左右都放不下，居中显示\n                align = 'center';\n            }\n        }\n        else {\n            align = this.options.align;\n        }\n        // 设置菜单位置\n        if (position === 'bottom') {\n            transformOriginY = '0';\n            menuTop =\n                (isCovered ? 0 : anchorHeight) +\n                    (isFixed ? anchorTop : anchorOffsetTop);\n        }\n        else if (position === 'top') {\n            transformOriginY = '100%';\n            menuTop =\n                (isCovered ? anchorHeight : 0) +\n                    (isFixed ? anchorTop - menuHeight : anchorOffsetTop - menuHeight);\n        }\n        else {\n            transformOriginY = '50%';\n            // =====================在窗口中居中\n            // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n            // 级联菜单内部不允许出现滚动条\n            let menuHeightTemp = menuHeight;\n            // 简单菜单比窗口高时，限制菜单高度\n            if (!this.isCascade) {\n                if (menuHeight + gutter * 2 > windowHeight) {\n                    menuHeightTemp = windowHeight - gutter * 2;\n                    this.$element.height(menuHeightTemp);\n                }\n            }\n            menuTop =\n                (windowHeight - menuHeightTemp) / 2 +\n                    (isFixed ? 0 : anchorOffsetTop - anchorTop);\n        }\n        this.$element.css('top', `${menuTop}px`);\n        // 设置菜单对齐方式\n        if (align === 'left') {\n            transformOriginX = '0';\n            menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n        }\n        else if (align === 'right') {\n            transformOriginX = '100%';\n            menuLeft = isFixed\n                ? anchorLeft + anchorWidth - menuWidth\n                : anchorOffsetLeft + anchorWidth - menuWidth;\n        }\n        else {\n            transformOriginX = '50%';\n            //=======================在窗口中居中\n            // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n            let menuWidthTemp = menuWidth;\n            // 菜单比窗口宽，限制菜单宽度\n            if (menuWidth + gutter * 2 > windowWidth) {\n                menuWidthTemp = windowWidth - gutter * 2;\n                this.$element.width(menuWidthTemp);\n            }\n            menuLeft =\n                (windowWidth - menuWidthTemp) / 2 +\n                    (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n        }\n        this.$element.css('left', `${menuLeft}px`);\n        // 设置菜单动画方向\n        this.$element.transformOrigin(`${transformOriginX} ${transformOriginY}`);\n    }\n    /**\n     * 调整子菜单的位置\n     * @param $submenu\n     */\n    readjustSubmenu($submenu) {\n        const $item = $submenu.parent('.mdui-menu-item');\n        let submenuTop;\n        let submenuLeft;\n        // 子菜单位置和方向\n        let position;\n        let align;\n        // window 窗口的宽度和高度\n        const windowHeight = $window.height();\n        const windowWidth = $window.width();\n        // 动画方向参数\n        let transformOriginX;\n        let transformOriginY;\n        // 子菜单的原始宽度和高度\n        const submenuWidth = $submenu.width();\n        const submenuHeight = $submenu.height();\n        // 触发子菜单的菜单项的宽度高度\n        const itemRect = $item[0].getBoundingClientRect();\n        const itemWidth = itemRect.width;\n        const itemHeight = itemRect.height;\n        const itemLeft = itemRect.left;\n        const itemTop = itemRect.top;\n        // 判断菜单上下位置\n        if (windowHeight - itemTop > submenuHeight) {\n            // 判断下方是否放得下菜单\n            position = 'bottom';\n        }\n        else if (itemTop + itemHeight > submenuHeight) {\n            // 判断上方是否放得下菜单\n            position = 'top';\n        }\n        else {\n            // 默认放在下方\n            position = 'bottom';\n        }\n        // 判断菜单左右位置\n        if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n            // 判断右侧是否放得下菜单\n            align = 'left';\n        }\n        else if (itemLeft > submenuWidth) {\n            // 判断左侧是否放得下菜单\n            align = 'right';\n        }\n        else {\n            // 默认放在右侧\n            align = 'left';\n        }\n        // 设置菜单位置\n        if (position === 'bottom') {\n            transformOriginY = '0';\n            submenuTop = '0';\n        }\n        else if (position === 'top') {\n            transformOriginY = '100%';\n            submenuTop = -submenuHeight + itemHeight;\n        }\n        $submenu.css('top', `${submenuTop}px`);\n        // 设置菜单对齐方式\n        if (align === 'left') {\n            transformOriginX = '0';\n            submenuLeft = itemWidth;\n        }\n        else if (align === 'right') {\n            transformOriginX = '100%';\n            submenuLeft = -submenuWidth;\n        }\n        $submenu.css('left', `${submenuLeft}px`);\n        // 设置菜单动画方向\n        $submenu.transformOrigin(`${transformOriginX} ${transformOriginY}`);\n    }\n    /**\n     * 打开子菜单\n     * @param $submenu\n     */\n    openSubMenu($submenu) {\n        this.readjustSubmenu($submenu);\n        $submenu\n            .addClass('mdui-menu-open')\n            .parent('.mdui-menu-item')\n            .addClass('mdui-menu-item-active');\n    }\n    /**\n     * 关闭子菜单，及其嵌套的子菜单\n     * @param $submenu\n     */\n    closeSubMenu($submenu) {\n        // 关闭子菜单\n        $submenu\n            .removeClass('mdui-menu-open')\n            .addClass('mdui-menu-closing')\n            .transitionEnd(() => $submenu.removeClass('mdui-menu-closing'))\n            // 移除激活状态的样式\n            .parent('.mdui-menu-item')\n            .removeClass('mdui-menu-item-active');\n        // 循环关闭嵌套的子菜单\n        $submenu.find('.mdui-menu').each((_, menu) => {\n            const $subSubmenu = $(menu);\n            $subSubmenu\n                .removeClass('mdui-menu-open')\n                .addClass('mdui-menu-closing')\n                .transitionEnd(() => $subSubmenu.removeClass('mdui-menu-closing'))\n                .parent('.mdui-menu-item')\n                .removeClass('mdui-menu-item-active');\n        });\n    }\n    /**\n     * 切换子菜单状态\n     * @param $submenu\n     */\n    toggleSubMenu($submenu) {\n        $submenu.hasClass('mdui-menu-open')\n            ? this.closeSubMenu($submenu)\n            : this.openSubMenu($submenu);\n    }\n    /**\n     * 绑定子菜单事件\n     */\n    bindSubMenuEvent() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // 点击打开子菜单\n        this.$element.on('click', '.mdui-menu-item', function (event) {\n            const $item = $(this);\n            const $target = $(event.target);\n            // 禁用状态菜单不操作\n            if ($item.attr('disabled') !== undefined) {\n                return;\n            }\n            // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n            if ($target.is('.mdui-menu') || $target.is('.mdui-divider')) {\n                return;\n            }\n            // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n            if (!$target.parents('.mdui-menu-item').first().is($item)) {\n                return;\n            }\n            // 当前菜单的子菜单\n            const $submenu = $item.children('.mdui-menu');\n            // 先关闭除当前子菜单外的所有同级子菜单\n            $item\n                .parent('.mdui-menu')\n                .children('.mdui-menu-item')\n                .each((_, item) => {\n                const $tmpSubmenu = $(item).children('.mdui-menu');\n                if ($tmpSubmenu.length &&\n                    (!$submenu.length || !$tmpSubmenu.is($submenu))) {\n                    that.closeSubMenu($tmpSubmenu);\n                }\n            });\n            // 切换当前子菜单\n            if ($submenu.length) {\n                that.toggleSubMenu($submenu);\n            }\n        });\n        if (this.options.subMenuTrigger === 'hover') {\n            // 临时存储 setTimeout 对象\n            let timeout = null;\n            let timeoutOpen = null;\n            this.$element.on('mouseover mouseout', '.mdui-menu-item', function (event) {\n                const $item = $(this);\n                const eventType = event.type;\n                const $relatedTarget = $(event.relatedTarget);\n                // 禁用状态的菜单不操作\n                if ($item.attr('disabled') !== undefined) {\n                    return;\n                }\n                // 用 mouseover 模拟 mouseenter\n                if (eventType === 'mouseover') {\n                    if (!$item.is($relatedTarget) &&\n                        contains($item[0], $relatedTarget[0])) {\n                        return;\n                    }\n                }\n                // 用 mouseout 模拟 mouseleave\n                else if (eventType === 'mouseout') {\n                    if ($item.is($relatedTarget) ||\n                        contains($item[0], $relatedTarget[0])) {\n                        return;\n                    }\n                }\n                // 当前菜单项下的子菜单，未必存在\n                const $submenu = $item.children('.mdui-menu');\n                // 鼠标移入菜单项时，显示菜单项下的子菜单\n                if (eventType === 'mouseover') {\n                    if ($submenu.length) {\n                        // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n                        const tmpClose = $submenu.data('timeoutClose.mdui.menu');\n                        if (tmpClose) {\n                            clearTimeout(tmpClose);\n                        }\n                        // 如果当前子菜单已经打开，不操作\n                        if ($submenu.hasClass('mdui-menu-open')) {\n                            return;\n                        }\n                        // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n                        clearTimeout(timeoutOpen);\n                        // 准备打开当前子菜单\n                        timeout = timeoutOpen = setTimeout(() => that.openSubMenu($submenu), that.options.subMenuDelay);\n                        $submenu.data('timeoutOpen.mdui.menu', timeout);\n                    }\n                }\n                // 鼠标移出菜单项时，关闭菜单项下的子菜单\n                else if (eventType === 'mouseout') {\n                    if ($submenu.length) {\n                        // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n                        const tmpOpen = $submenu.data('timeoutOpen.mdui.menu');\n                        if (tmpOpen) {\n                            clearTimeout(tmpOpen);\n                        }\n                        // 准备关闭当前子菜单\n                        timeout = setTimeout(() => that.closeSubMenu($submenu), that.options.subMenuDelay);\n                        $submenu.data('timeoutClose.mdui.menu', timeout);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * 动画结束回调\n     */\n    transitionEnd() {\n        this.$element.removeClass('mdui-menu-closing');\n        if (this.state === 'opening') {\n            this.state = 'opened';\n            this.triggerEvent('opened');\n        }\n        if (this.state === 'closing') {\n            this.state = 'closed';\n            this.triggerEvent('closed');\n            // 关闭后，恢复菜单样式到默认状态，并恢复 fixed 定位\n            this.$element.css({\n                top: '',\n                left: '',\n                width: '',\n                position: 'fixed',\n            });\n        }\n    }\n    /**\n     * 切换菜单状态\n     */\n    toggle() {\n        this.isOpen() ? this.close() : this.open();\n    }\n    /**\n     * 打开菜单\n     */\n    open() {\n        if (this.isOpen()) {\n            return;\n        }\n        this.state = 'opening';\n        this.triggerEvent('open');\n        this.readjust();\n        this.$element\n            // 菜单隐藏状态使用使用 fixed 定位。\n            .css('position', this.options.fixed ? 'fixed' : 'absolute')\n            .addClass('mdui-menu-open')\n            .transitionEnd(() => this.transitionEnd());\n    }\n    /**\n     * 关闭菜单\n     */\n    close() {\n        if (!this.isOpen()) {\n            return;\n        }\n        this.state = 'closing';\n        this.triggerEvent('close');\n        // 菜单开始关闭时，关闭所有子菜单\n        this.$element.find('.mdui-menu').each((_, submenu) => {\n            this.closeSubMenu($(submenu));\n        });\n        this.$element\n            .removeClass('mdui-menu-open')\n            .addClass('mdui-menu-closing')\n            .transitionEnd(() => this.transitionEnd());\n    }\n}\nmdui.Menu = Menu;\n\nconst customAttr$9 = 'mdui-menu';\nconst dataName$3 = '_mdui_menu';\n$(() => {\n    $document.on('click', `[${customAttr$9}]`, function () {\n        const $this = $(this);\n        let instance = $this.data(dataName$3);\n        if (!instance) {\n            const options = parseOptions(this, customAttr$9);\n            const menuSelector = options.target;\n            // @ts-ignore\n            delete options.target;\n            instance = new mdui.Menu($this, menuSelector, options);\n            $this.data(dataName$3, instance);\n            instance.toggle();\n        }\n    });\n});\n\nexport default mdui;\n"],"sourceRoot":""}